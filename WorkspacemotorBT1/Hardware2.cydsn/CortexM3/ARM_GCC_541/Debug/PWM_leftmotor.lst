ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_leftmotor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_leftmotor_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_leftmotor_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM_leftmotor_Enable, %function
  25              	PWM_leftmotor_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM_leftmotor.c"
   1:Generated_Source\PSoC5/PWM_leftmotor.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_leftmotor.c **** * File Name: PWM_leftmotor.c
   3:Generated_Source\PSoC5/PWM_leftmotor.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_leftmotor.c **** *
   5:Generated_Source\PSoC5/PWM_leftmotor.c **** * Description:
   6:Generated_Source\PSoC5/PWM_leftmotor.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_leftmotor.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_leftmotor.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_leftmotor.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_leftmotor.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_leftmotor.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_leftmotor.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_leftmotor.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_leftmotor.c **** *
  15:Generated_Source\PSoC5/PWM_leftmotor.c **** * Note:
  16:Generated_Source\PSoC5/PWM_leftmotor.c **** *
  17:Generated_Source\PSoC5/PWM_leftmotor.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_leftmotor.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_leftmotor.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_leftmotor.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_leftmotor.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_leftmotor.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_leftmotor.c **** 
  24:Generated_Source\PSoC5/PWM_leftmotor.c **** #include "PWM_leftmotor.h"
  25:Generated_Source\PSoC5/PWM_leftmotor.c **** 
  26:Generated_Source\PSoC5/PWM_leftmotor.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_leftmotor.c **** #ifdef PWM_leftmotor_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_leftmotor.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_leftmotor.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_leftmotor.c **** #endif /* PWM_leftmotor_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 2


  31:Generated_Source\PSoC5/PWM_leftmotor.c **** 
  32:Generated_Source\PSoC5/PWM_leftmotor.c **** uint8 PWM_leftmotor_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_leftmotor.c **** 
  34:Generated_Source\PSoC5/PWM_leftmotor.c **** 
  35:Generated_Source\PSoC5/PWM_leftmotor.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_leftmotor.c **** * Function Name: PWM_leftmotor_Start
  37:Generated_Source\PSoC5/PWM_leftmotor.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_leftmotor.c **** *
  39:Generated_Source\PSoC5/PWM_leftmotor.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_leftmotor.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_leftmotor.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_leftmotor.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_leftmotor.c **** *
  44:Generated_Source\PSoC5/PWM_leftmotor.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_leftmotor.c **** *  None
  46:Generated_Source\PSoC5/PWM_leftmotor.c **** *
  47:Generated_Source\PSoC5/PWM_leftmotor.c **** * Return:
  48:Generated_Source\PSoC5/PWM_leftmotor.c **** *  None
  49:Generated_Source\PSoC5/PWM_leftmotor.c **** *
  50:Generated_Source\PSoC5/PWM_leftmotor.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_leftmotor.c **** *  PWM_leftmotor_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_leftmotor.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_leftmotor.c **** *
  54:Generated_Source\PSoC5/PWM_leftmotor.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_leftmotor.c **** void PWM_leftmotor_Start(void) 
  56:Generated_Source\PSoC5/PWM_leftmotor.c **** {
  57:Generated_Source\PSoC5/PWM_leftmotor.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_leftmotor.c ****     if(PWM_leftmotor_initVar == 0u)
  59:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
  60:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_Init();
  61:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_initVar = 1u;
  62:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
  63:Generated_Source\PSoC5/PWM_leftmotor.c ****     PWM_leftmotor_Enable();
  64:Generated_Source\PSoC5/PWM_leftmotor.c **** 
  65:Generated_Source\PSoC5/PWM_leftmotor.c **** }
  66:Generated_Source\PSoC5/PWM_leftmotor.c **** 
  67:Generated_Source\PSoC5/PWM_leftmotor.c **** 
  68:Generated_Source\PSoC5/PWM_leftmotor.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_leftmotor.c **** * Function Name: PWM_leftmotor_Init
  70:Generated_Source\PSoC5/PWM_leftmotor.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_leftmotor.c **** *
  72:Generated_Source\PSoC5/PWM_leftmotor.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_leftmotor.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_leftmotor.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_leftmotor.c **** *  PWM_leftmotor_Start().
  76:Generated_Source\PSoC5/PWM_leftmotor.c **** *
  77:Generated_Source\PSoC5/PWM_leftmotor.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_leftmotor.c **** *  None
  79:Generated_Source\PSoC5/PWM_leftmotor.c **** *
  80:Generated_Source\PSoC5/PWM_leftmotor.c **** * Return:
  81:Generated_Source\PSoC5/PWM_leftmotor.c **** *  None
  82:Generated_Source\PSoC5/PWM_leftmotor.c **** *
  83:Generated_Source\PSoC5/PWM_leftmotor.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_leftmotor.c **** void PWM_leftmotor_Init(void) 
  85:Generated_Source\PSoC5/PWM_leftmotor.c **** {
  86:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_UsingFixedFunction || PWM_leftmotor_UseControl)
  87:Generated_Source\PSoC5/PWM_leftmotor.c ****         uint8 ctrl;
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 3


  88:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (PWM_leftmotor_UsingFixedFunction || PWM_leftmotor_UseControl) */
  89:Generated_Source\PSoC5/PWM_leftmotor.c **** 
  90:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if(!PWM_leftmotor_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if(PWM_leftmotor_UseStatus)
  92:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_leftmotor.c ****             uint8 PWM_leftmotor_interruptState;
  94:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_UseStatus) */
  95:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (!PWM_leftmotor_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_leftmotor.c **** 
  97:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_leftmotor.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_CONTROL |= PWM_leftmotor_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if (PWM_leftmotor_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_CONTROL |= PWM_leftmotor_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 104:Generated_Source\PSoC5/PWM_leftmotor.c ****         ctrl = PWM_leftmotor_CONTROL3 & ((uint8 )(~PWM_leftmotor_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_CONTROL3 = ctrl | PWM_leftmotor_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 107:Generated_Source\PSoC5/PWM_leftmotor.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_RT1 &= ((uint8)(~PWM_leftmotor_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_RT1 |= PWM_leftmotor_SYNC;
 110:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 111:Generated_Source\PSoC5/PWM_leftmotor.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_RT1 &= ((uint8)(~PWM_leftmotor_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_RT1 |= PWM_leftmotor_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 115:Generated_Source\PSoC5/PWM_leftmotor.c ****     #elif (PWM_leftmotor_UseControl)
 116:Generated_Source\PSoC5/PWM_leftmotor.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_leftmotor.c ****         ctrl = PWM_leftmotor_CONTROL & ((uint8)(~PWM_leftmotor_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_leftmotor.c ****                 ((uint8)(~PWM_leftmotor_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_CONTROL = ctrl | PWM_leftmotor_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_leftmotor.c ****                                    PWM_leftmotor_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (PWM_leftmotor_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 123:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (!PWM_leftmotor_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if (PWM_leftmotor_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_AUX_CONTROLDP0 |= (PWM_leftmotor_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_leftmotor.c ****         #else /* (PWM_leftmotor_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_AUX_CONTROLDP0 |= (PWM_leftmotor_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_AUX_CONTROLDP1 |= (PWM_leftmotor_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 133:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_WriteCounter(PWM_leftmotor_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (!PWM_leftmotor_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 136:Generated_Source\PSoC5/PWM_leftmotor.c ****     PWM_leftmotor_WritePeriod(PWM_leftmotor_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 138:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if (PWM_leftmotor_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_WriteCompare(PWM_leftmotor_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_leftmotor.c ****         #else
 141:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_WriteCompare1(PWM_leftmotor_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_WriteCompare2(PWM_leftmotor_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_leftmotor.c **** 
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 4


 145:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if (PWM_leftmotor_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_WriteKillTime(PWM_leftmotor_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 149:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if (PWM_leftmotor_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_WriteDeadTime(PWM_leftmotor_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 153:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_UseStatus || PWM_leftmotor_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_SetInterruptMode(PWM_leftmotor_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (PWM_leftmotor_UseStatus || PWM_leftmotor_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 157:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_leftmotor.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_GLOBAL_ENABLE |= PWM_leftmotor_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_leftmotor.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_CONTROL2 |= PWM_leftmotor_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_leftmotor.c ****     #else
 163:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if(PWM_leftmotor_UseStatus)
 164:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 165:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_STATUS_AUX_CTRL |= PWM_leftmotor_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 171:Generated_Source\PSoC5/PWM_leftmotor.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_leftmotor.c ****             CyExitCriticalSection(PWM_leftmotor_interruptState);
 173:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 174:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* Clear the FIFO to enable the PWM_leftmotor_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_leftmotor.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_UseStatus) */
 178:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (PWM_leftmotor_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_leftmotor.c **** }
 180:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 181:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 182:Generated_Source\PSoC5/PWM_leftmotor.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_leftmotor.c **** * Function Name: PWM_leftmotor_Enable
 184:Generated_Source\PSoC5/PWM_leftmotor.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 186:Generated_Source\PSoC5/PWM_leftmotor.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_leftmotor.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 189:Generated_Source\PSoC5/PWM_leftmotor.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_leftmotor.c **** *  None
 191:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 192:Generated_Source\PSoC5/PWM_leftmotor.c **** * Return:
 193:Generated_Source\PSoC5/PWM_leftmotor.c **** *  None
 194:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 195:Generated_Source\PSoC5/PWM_leftmotor.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_leftmotor.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 198:Generated_Source\PSoC5/PWM_leftmotor.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_leftmotor.c **** void PWM_leftmotor_Enable(void) 
 200:Generated_Source\PSoC5/PWM_leftmotor.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM_leftmotor.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_GLOBAL_ENABLE |= PWM_leftmotor_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_GLOBAL_STBY_ENABLE |= PWM_leftmotor_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (PWM_leftmotor_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 207:Generated_Source\PSoC5/PWM_leftmotor.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_UseControl || PWM_leftmotor_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_CONTROL |= PWM_leftmotor_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 79650040 		.word	1073767801
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM_leftmotor_Enable, .-PWM_leftmotor_Enable
  46              		.section	.text.PWM_leftmotor_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	PWM_leftmotor_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM_leftmotor_Stop, %function
  52              	PWM_leftmotor_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (PWM_leftmotor_UseControl || PWM_leftmotor_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_leftmotor.c **** }
 212:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 213:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 214:Generated_Source\PSoC5/PWM_leftmotor.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_leftmotor.c **** * Function Name: PWM_leftmotor_Stop
 216:Generated_Source\PSoC5/PWM_leftmotor.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 218:Generated_Source\PSoC5/PWM_leftmotor.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_leftmotor.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_leftmotor.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 222:Generated_Source\PSoC5/PWM_leftmotor.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_leftmotor.c **** *  None
 224:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 225:Generated_Source\PSoC5/PWM_leftmotor.c **** * Return:
 226:Generated_Source\PSoC5/PWM_leftmotor.c **** *  None
 227:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 228:Generated_Source\PSoC5/PWM_leftmotor.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_leftmotor.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_leftmotor.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 232:Generated_Source\PSoC5/PWM_leftmotor.c **** *******************************************************************************/
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 6


 233:Generated_Source\PSoC5/PWM_leftmotor.c **** void PWM_leftmotor_Stop(void) 
 234:Generated_Source\PSoC5/PWM_leftmotor.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_UseControl || PWM_leftmotor_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_CONTROL &= ((uint8)(~PWM_leftmotor_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 79650040 		.word	1073767801
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM_leftmotor_Stop, .-PWM_leftmotor_Stop
  72              		.section	.text.PWM_leftmotor_SetCompareMode1,"ax",%progbits
  73              		.align	2
  74              		.global	PWM_leftmotor_SetCompareMode1
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM_leftmotor_SetCompareMode1, %function
  78              	PWM_leftmotor_SetCompareMode1:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (PWM_leftmotor_UseControl || PWM_leftmotor_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 239:Generated_Source\PSoC5/PWM_leftmotor.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_GLOBAL_ENABLE &= ((uint8)(~PWM_leftmotor_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_leftmotor_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (PWM_leftmotor_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_leftmotor.c **** }
 245:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 246:Generated_Source\PSoC5/PWM_leftmotor.c **** #if (PWM_leftmotor_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 249:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 250:Generated_Source\PSoC5/PWM_leftmotor.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Function Name: PWM_leftmotor_SetCompareMode
 252:Generated_Source\PSoC5/PWM_leftmotor.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 254:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_leftmotor.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_leftmotor.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 258:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_leftmotor.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_leftmotor.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 262:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_leftmotor.c ****         *  None
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 7


 264:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 265:Generated_Source\PSoC5/PWM_leftmotor.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_leftmotor.c ****         void PWM_leftmotor_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_leftmotor.c ****         {
 268:Generated_Source\PSoC5/PWM_leftmotor.c ****             #if(PWM_leftmotor_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 270:Generated_Source\PSoC5/PWM_leftmotor.c ****                 #if(0 != PWM_leftmotor_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_leftmotor.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_leftmotor_CTRL_CMP
 272:Generated_Source\PSoC5/PWM_leftmotor.c ****                 #else
 273:Generated_Source\PSoC5/PWM_leftmotor.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_leftmotor.c ****                 #endif /* (0 != PWM_leftmotor_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 276:Generated_Source\PSoC5/PWM_leftmotor.c ****                 PWM_leftmotor_CONTROL3 &= ((uint8)(~PWM_leftmotor_CTRL_CMPMODE1_MASK)); /*Clear Exi
 277:Generated_Source\PSoC5/PWM_leftmotor.c ****                 PWM_leftmotor_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 279:Generated_Source\PSoC5/PWM_leftmotor.c ****             #elif (PWM_leftmotor_UseControl)
 280:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 281:Generated_Source\PSoC5/PWM_leftmotor.c ****                 #if(0 != PWM_leftmotor_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_leftmotor.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_leftmotor_CTRL_CM
 283:Generated_Source\PSoC5/PWM_leftmotor.c ****                                                 PWM_leftmotor_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_leftmotor.c ****                 #else
 285:Generated_Source\PSoC5/PWM_leftmotor.c ****                     uint8 comparemode1masked = comparemode & PWM_leftmotor_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_leftmotor.c ****                 #endif /* (0 != PWM_leftmotor_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 288:Generated_Source\PSoC5/PWM_leftmotor.c ****                 #if(0 != PWM_leftmotor_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_leftmotor.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_leftmotor_CTRL_CM
 290:Generated_Source\PSoC5/PWM_leftmotor.c ****                                                PWM_leftmotor_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_leftmotor.c ****                 #else
 292:Generated_Source\PSoC5/PWM_leftmotor.c ****                     uint8 comparemode2masked = comparemode & PWM_leftmotor_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_leftmotor.c ****                 #endif /* (0 != PWM_leftmotor_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 295:Generated_Source\PSoC5/PWM_leftmotor.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_leftmotor.c ****                 PWM_leftmotor_CONTROL &= ((uint8)(~(PWM_leftmotor_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_leftmotor.c ****                                             PWM_leftmotor_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_leftmotor.c ****                 PWM_leftmotor_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 300:Generated_Source\PSoC5/PWM_leftmotor.c ****             #else
 301:Generated_Source\PSoC5/PWM_leftmotor.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_leftmotor.c ****             #endif /* (PWM_leftmotor_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_leftmotor.c ****         }
 304:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* PWM_leftmotor_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 306:Generated_Source\PSoC5/PWM_leftmotor.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 308:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 310:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 311:Generated_Source\PSoC5/PWM_leftmotor.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Function Name: PWM_leftmotor_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_leftmotor.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 315:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_leftmotor.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 318:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_leftmotor.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_leftmotor.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 8


 321:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 322:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_leftmotor.c ****         *  None
 324:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 325:Generated_Source\PSoC5/PWM_leftmotor.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_leftmotor.c ****         void PWM_leftmotor_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_leftmotor.c ****         {
  80              		.loc 1 327 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 328:Generated_Source\PSoC5/PWM_leftmotor.c ****             #if(0 != PWM_leftmotor_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_leftmotor.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_leftmotor_CTRL_CMPMODE
 330:Generated_Source\PSoC5/PWM_leftmotor.c ****                                            PWM_leftmotor_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_leftmotor.c ****             #else
 332:Generated_Source\PSoC5/PWM_leftmotor.c ****                 uint8 comparemodemasked = comparemode & PWM_leftmotor_CTRL_CMPMODE1_MASK;
  86              		.loc 1 332 0
  87 0000 00F00700 		and	r0, r0, #7
  88              	.LVL1:
 333:Generated_Source\PSoC5/PWM_leftmotor.c ****             #endif /* (0 != PWM_leftmotor_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 335:Generated_Source\PSoC5/PWM_leftmotor.c ****             #if (PWM_leftmotor_UseControl)
 336:Generated_Source\PSoC5/PWM_leftmotor.c ****                 PWM_leftmotor_CONTROL &= ((uint8)(~PWM_leftmotor_CTRL_CMPMODE1_MASK)); /*Clear exis
  89              		.loc 1 336 0
  90 0004 044B     		ldr	r3, .L8
  91 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  92 0008 02F0F802 		and	r2, r2, #248
  93 000c 1A70     		strb	r2, [r3]
 337:Generated_Source\PSoC5/PWM_leftmotor.c ****                 PWM_leftmotor_CONTROL |= comparemodemasked;
  94              		.loc 1 337 0
  95 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  96 0010 1043     		orrs	r0, r0, r2
  97              	.LVL2:
  98 0012 1870     		strb	r0, [r3]
  99 0014 7047     		bx	lr
 100              	.L9:
 101 0016 00BF     		.align	2
 102              	.L8:
 103 0018 79650040 		.word	1073767801
 104              		.cfi_endproc
 105              	.LFE4:
 106              		.size	PWM_leftmotor_SetCompareMode1, .-PWM_leftmotor_SetCompareMode1
 107              		.section	.text.PWM_leftmotor_SetCompareMode2,"ax",%progbits
 108              		.align	2
 109              		.global	PWM_leftmotor_SetCompareMode2
 110              		.thumb
 111              		.thumb_func
 112              		.type	PWM_leftmotor_SetCompareMode2, %function
 113              	PWM_leftmotor_SetCompareMode2:
 114              	.LFB5:
 338:Generated_Source\PSoC5/PWM_leftmotor.c ****             #endif /* (PWM_leftmotor_UseControl) */
 339:Generated_Source\PSoC5/PWM_leftmotor.c ****         }
 340:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* PWM_leftmotor_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 342:Generated_Source\PSoC5/PWM_leftmotor.c **** #if (PWM_leftmotor_CompareMode2SW)
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 9


 343:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 344:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 345:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 349:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 352:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_leftmotor.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 356:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 358:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 359:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_leftmotor.c ****     void PWM_leftmotor_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 115              		.loc 1 361 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.LVL3:
 362:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 363:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if(0 != PWM_leftmotor_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_leftmotor.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_leftmotor_CTRL_CMPMODE2_SH
 121              		.loc 1 364 0
 122 0000 C000     		lsls	r0, r0, #3
 123              	.LVL4:
 124 0002 00F03800 		and	r0, r0, #56
 125              	.LVL5:
 365:Generated_Source\PSoC5/PWM_leftmotor.c ****                                                  PWM_leftmotor_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_leftmotor.c ****         #else
 367:Generated_Source\PSoC5/PWM_leftmotor.c ****             uint8 comparemodemasked = comparemode & PWM_leftmotor_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (0 != PWM_leftmotor_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 370:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if (PWM_leftmotor_UseControl)
 371:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_CONTROL &= ((uint8)(~PWM_leftmotor_CTRL_CMPMODE2_MASK)); /*Clear existing
 126              		.loc 1 371 0
 127 0006 044B     		ldr	r3, .L11
 128 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 129 000a 02F0C702 		and	r2, r2, #199
 130 000e 1A70     		strb	r2, [r3]
 372:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_CONTROL |= comparemodemasked;
 131              		.loc 1 372 0
 132 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 133 0012 1043     		orrs	r0, r0, r2
 134              	.LVL6:
 135 0014 1870     		strb	r0, [r3]
 136 0016 7047     		bx	lr
 137              	.L12:
 138              		.align	2
 139              	.L11:
 140 0018 79650040 		.word	1073767801
 141              		.cfi_endproc
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 10


 142              	.LFE5:
 143              		.size	PWM_leftmotor_SetCompareMode2, .-PWM_leftmotor_SetCompareMode2
 144              		.section	.text.PWM_leftmotor_WriteCounter,"ax",%progbits
 145              		.align	2
 146              		.global	PWM_leftmotor_WriteCounter
 147              		.thumb
 148              		.thumb_func
 149              		.type	PWM_leftmotor_WriteCounter, %function
 150              	PWM_leftmotor_WriteCounter:
 151              	.LFB6:
 373:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_UseControl) */
 374:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 375:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /*PWM_leftmotor_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 377:Generated_Source\PSoC5/PWM_leftmotor.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 379:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 380:Generated_Source\PSoC5/PWM_leftmotor.c **** #if (!PWM_leftmotor_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 382:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 383:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_WriteCounter
 385:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 387:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 393:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 396:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 398:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 399:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 402:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_leftmotor.c ****     void PWM_leftmotor_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM_leftmotor.c ****                                        
 405:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 152              		.loc 1 405 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157              	.LVL7:
 406:Generated_Source\PSoC5/PWM_leftmotor.c ****         CY_SET_REG8(PWM_leftmotor_COUNTER_LSB_PTR, counter);
 158              		.loc 1 406 0
 159 0000 014B     		ldr	r3, .L14
 160 0002 1870     		strb	r0, [r3]
 161 0004 7047     		bx	lr
 162              	.L15:
 163 0006 00BF     		.align	2
 164              	.L14:
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 11


 165 0008 0A650040 		.word	1073767690
 166              		.cfi_endproc
 167              	.LFE6:
 168              		.size	PWM_leftmotor_WriteCounter, .-PWM_leftmotor_WriteCounter
 169              		.section	.text.PWM_leftmotor_ReadCounter,"ax",%progbits
 170              		.align	2
 171              		.global	PWM_leftmotor_ReadCounter
 172              		.thumb
 173              		.thumb_func
 174              		.type	PWM_leftmotor_ReadCounter, %function
 175              	PWM_leftmotor_ReadCounter:
 176              	.LFB7:
 407:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 408:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 409:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 410:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_ReadCounter
 412:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 414:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 418:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 420:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 421:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 424:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_leftmotor.c ****     uint8 PWM_leftmotor_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 177              		.loc 1 426 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM_leftmotor.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_leftmotor.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_leftmotor.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_leftmotor.c ****           (void)CY_GET_REG8(PWM_leftmotor_COUNTERCAP_LSB_PTR_8BIT);
 182              		.loc 1 430 0
 183 0000 024B     		ldr	r3, .L17
 184 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 432:Generated_Source\PSoC5/PWM_leftmotor.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_leftmotor.c ****         return (CY_GET_REG8(PWM_leftmotor_CAPTURE_LSB_PTR));
 185              		.loc 1 433 0
 186 0004 024B     		ldr	r3, .L17+4
 187 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 188              		.loc 1 434 0
 189 0008 7047     		bx	lr
 190              	.L18:
 191 000a 00BF     		.align	2
 192              	.L17:
 193 000c 1A650040 		.word	1073767706
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 12


 194 0010 5A650040 		.word	1073767770
 195              		.cfi_endproc
 196              	.LFE7:
 197              		.size	PWM_leftmotor_ReadCounter, .-PWM_leftmotor_ReadCounter
 198              		.section	.text.PWM_leftmotor_WritePeriod,"ax",%progbits
 199              		.align	2
 200              		.global	PWM_leftmotor_WritePeriod
 201              		.thumb
 202              		.thumb_func
 203              		.type	PWM_leftmotor_WritePeriod, %function
 204              	PWM_leftmotor_WritePeriod:
 205              	.LFB9:
 435:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 436:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_UseStatus)
 437:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 438:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 439:Generated_Source\PSoC5/PWM_leftmotor.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Function Name: PWM_leftmotor_ClearFIFO
 441:Generated_Source\PSoC5/PWM_leftmotor.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 443:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_leftmotor.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 446:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_leftmotor.c ****         *  None
 448:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 449:Generated_Source\PSoC5/PWM_leftmotor.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_leftmotor.c ****         *  None
 451:Generated_Source\PSoC5/PWM_leftmotor.c ****         *
 452:Generated_Source\PSoC5/PWM_leftmotor.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_leftmotor.c ****         void PWM_leftmotor_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_leftmotor.c ****         {
 455:Generated_Source\PSoC5/PWM_leftmotor.c ****             while(0u != (PWM_leftmotor_ReadStatusRegister() & PWM_leftmotor_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_leftmotor.c ****             {
 457:Generated_Source\PSoC5/PWM_leftmotor.c ****                 (void)PWM_leftmotor_ReadCapture();
 458:Generated_Source\PSoC5/PWM_leftmotor.c ****             }
 459:Generated_Source\PSoC5/PWM_leftmotor.c ****         }
 460:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 461:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* PWM_leftmotor_UseStatus */
 462:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 463:Generated_Source\PSoC5/PWM_leftmotor.c **** #endif /* !PWM_leftmotor_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 465:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 466:Generated_Source\PSoC5/PWM_leftmotor.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_leftmotor.c **** * Function Name: PWM_leftmotor_WritePeriod
 468:Generated_Source\PSoC5/PWM_leftmotor.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 470:Generated_Source\PSoC5/PWM_leftmotor.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_leftmotor.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_leftmotor.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 474:Generated_Source\PSoC5/PWM_leftmotor.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_leftmotor.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_leftmotor.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 478:Generated_Source\PSoC5/PWM_leftmotor.c **** * Return:
 479:Generated_Source\PSoC5/PWM_leftmotor.c **** *  None
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 13


 480:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 481:Generated_Source\PSoC5/PWM_leftmotor.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_leftmotor.c **** void PWM_leftmotor_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM_leftmotor.c **** {
 206              		.loc 1 483 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211              	.LVL8:
 484:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if(PWM_leftmotor_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_leftmotor.c ****         CY_SET_REG16(PWM_leftmotor_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_leftmotor.c ****     #else
 487:Generated_Source\PSoC5/PWM_leftmotor.c ****         CY_SET_REG8(PWM_leftmotor_PERIOD_LSB_PTR, period);
 212              		.loc 1 487 0
 213 0000 014B     		ldr	r3, .L20
 214 0002 1870     		strb	r0, [r3]
 215 0004 7047     		bx	lr
 216              	.L21:
 217 0006 00BF     		.align	2
 218              	.L20:
 219 0008 4A650040 		.word	1073767754
 220              		.cfi_endproc
 221              	.LFE9:
 222              		.size	PWM_leftmotor_WritePeriod, .-PWM_leftmotor_WritePeriod
 223              		.section	.text.PWM_leftmotor_WriteCompare1,"ax",%progbits
 224              		.align	2
 225              		.global	PWM_leftmotor_WriteCompare1
 226              		.thumb
 227              		.thumb_func
 228              		.type	PWM_leftmotor_WriteCompare1, %function
 229              	PWM_leftmotor_WriteCompare1:
 230              	.LFB10:
 488:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (PWM_leftmotor_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_leftmotor.c **** }
 490:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 491:Generated_Source\PSoC5/PWM_leftmotor.c **** #if (PWM_leftmotor_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 493:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 494:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_WriteCompare
 496:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 498:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 505:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 508:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 510:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 511:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Side Effects:
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 14


 512:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 515:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_leftmotor.c ****     void PWM_leftmotor_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM_leftmotor.c ****                                        
 518:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 519:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if(PWM_leftmotor_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_leftmotor.c ****             CY_SET_REG16(PWM_leftmotor_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_leftmotor.c ****         #else
 522:Generated_Source\PSoC5/PWM_leftmotor.c ****             CY_SET_REG8(PWM_leftmotor_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 525:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if (PWM_leftmotor_PWMMode == PWM_leftmotor__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_leftmotor.c ****             #if(PWM_leftmotor_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_leftmotor.c ****                 CY_SET_REG16(PWM_leftmotor_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_leftmotor.c ****             #else
 529:Generated_Source\PSoC5/PWM_leftmotor.c ****                 CY_SET_REG8(PWM_leftmotor_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_leftmotor.c ****             #endif /* (PWM_leftmotor_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_PWMMode == PWM_leftmotor__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 533:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 534:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 535:Generated_Source\PSoC5/PWM_leftmotor.c **** #else
 536:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 537:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 538:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_WriteCompare1
 540:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 542:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 548:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 551:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 553:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 554:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_leftmotor.c ****     void PWM_leftmotor_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/PWM_leftmotor.c ****                                         
 557:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 231              		.loc 1 557 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL9:
 558:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if(PWM_leftmotor_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_leftmotor.c ****             CY_SET_REG16(PWM_leftmotor_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_leftmotor.c ****         #else
 561:Generated_Source\PSoC5/PWM_leftmotor.c ****             CY_SET_REG8(PWM_leftmotor_COMPARE1_LSB_PTR, compare);
 237              		.loc 1 561 0
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 15


 238 0000 014B     		ldr	r3, .L23
 239 0002 1870     		strb	r0, [r3]
 240 0004 7047     		bx	lr
 241              	.L24:
 242 0006 00BF     		.align	2
 243              	.L23:
 244 0008 2A650040 		.word	1073767722
 245              		.cfi_endproc
 246              	.LFE10:
 247              		.size	PWM_leftmotor_WriteCompare1, .-PWM_leftmotor_WriteCompare1
 248              		.section	.text.PWM_leftmotor_WriteCompare2,"ax",%progbits
 249              		.align	2
 250              		.global	PWM_leftmotor_WriteCompare2
 251              		.thumb
 252              		.thumb_func
 253              		.type	PWM_leftmotor_WriteCompare2, %function
 254              	PWM_leftmotor_WriteCompare2:
 255              	.LFB11:
 562:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 564:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 565:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 566:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_WriteCompare2
 568:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 570:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 577:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 580:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 582:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 583:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_leftmotor.c ****     void PWM_leftmotor_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM_leftmotor.c ****                                         
 586:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 256              		.loc 1 586 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL10:
 587:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if(PWM_leftmotor_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_leftmotor.c ****             CY_SET_REG16(PWM_leftmotor_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_leftmotor.c ****         #else
 590:Generated_Source\PSoC5/PWM_leftmotor.c ****             CY_SET_REG8(PWM_leftmotor_COMPARE2_LSB_PTR, compare);
 262              		.loc 1 590 0
 263 0000 014B     		ldr	r3, .L26
 264 0002 1870     		strb	r0, [r3]
 265 0004 7047     		bx	lr
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 16


 266              	.L27:
 267 0006 00BF     		.align	2
 268              	.L26:
 269 0008 3A650040 		.word	1073767738
 270              		.cfi_endproc
 271              	.LFE11:
 272              		.size	PWM_leftmotor_WriteCompare2, .-PWM_leftmotor_WriteCompare2
 273              		.section	.text.PWM_leftmotor_SetInterruptMode,"ax",%progbits
 274              		.align	2
 275              		.global	PWM_leftmotor_SetInterruptMode
 276              		.thumb
 277              		.thumb_func
 278              		.type	PWM_leftmotor_SetInterruptMode, %function
 279              	PWM_leftmotor_SetInterruptMode:
 280              	.LFB12:
 591:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 593:Generated_Source\PSoC5/PWM_leftmotor.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 595:Generated_Source\PSoC5/PWM_leftmotor.c **** #if (PWM_leftmotor_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 597:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 598:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 602:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 605:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 608:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 610:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 611:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_leftmotor.c ****     void PWM_leftmotor_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 614:Generated_Source\PSoC5/PWM_leftmotor.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if(!PWM_leftmotor_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_leftmotor.c ****             CY_SET_REG8(PWM_leftmotor_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_leftmotor.c ****         #else
 618:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_DEADBAND_COUNT &= ((uint8)(~PWM_leftmotor_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 622:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_leftmotor.c ****             #if(PWM_leftmotor_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_leftmotor.c ****                 PWM_leftmotor_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_leftmotor_DEADBAND_
 625:Generated_Source\PSoC5/PWM_leftmotor.c ****                                                     PWM_leftmotor_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_leftmotor.c ****             #else
 627:Generated_Source\PSoC5/PWM_leftmotor.c ****                 PWM_leftmotor_DEADBAND_COUNT |= deadtime & PWM_leftmotor_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_leftmotor.c ****             #endif /* (PWM_leftmotor_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 630:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (!PWM_leftmotor_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 632:Generated_Source\PSoC5/PWM_leftmotor.c **** 
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 17


 633:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 634:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 638:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 641:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 643:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 644:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 647:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_leftmotor.c ****     uint8 PWM_leftmotor_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 650:Generated_Source\PSoC5/PWM_leftmotor.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if(!PWM_leftmotor_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_leftmotor.c ****             return (CY_GET_REG8(PWM_leftmotor_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_leftmotor.c ****         #else
 654:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 655:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_leftmotor.c ****             #if(PWM_leftmotor_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_leftmotor.c ****                 return ((uint8)(((uint8)(PWM_leftmotor_DEADBAND_COUNT & PWM_leftmotor_DEADBAND_COUN
 658:Generated_Source\PSoC5/PWM_leftmotor.c ****                                                                            PWM_leftmotor_DEADBAND_C
 659:Generated_Source\PSoC5/PWM_leftmotor.c ****             #else
 660:Generated_Source\PSoC5/PWM_leftmotor.c ****                 return (PWM_leftmotor_DEADBAND_COUNT & PWM_leftmotor_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_leftmotor.c ****             #endif /* (PWM_leftmotor_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (!PWM_leftmotor_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 664:Generated_Source\PSoC5/PWM_leftmotor.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 666:Generated_Source\PSoC5/PWM_leftmotor.c **** #if (PWM_leftmotor_UseStatus || PWM_leftmotor_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 668:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 669:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 673:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 677:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 680:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 682:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 683:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_leftmotor.c ****     void PWM_leftmotor_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 281              		.loc 1 685 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 18


 285              		@ link register save eliminated.
 286              	.LVL11:
 686:Generated_Source\PSoC5/PWM_leftmotor.c ****         CY_SET_REG8(PWM_leftmotor_STATUS_MASK_PTR, interruptMode);
 287              		.loc 1 686 0
 288 0000 014B     		ldr	r3, .L29
 289 0002 1870     		strb	r0, [r3]
 290 0004 7047     		bx	lr
 291              	.L30:
 292 0006 00BF     		.align	2
 293              	.L29:
 294 0008 89650040 		.word	1073767817
 295              		.cfi_endproc
 296              	.LFE12:
 297              		.size	PWM_leftmotor_SetInterruptMode, .-PWM_leftmotor_SetInterruptMode
 298              		.section	.text.PWM_leftmotor_ReadStatusRegister,"ax",%progbits
 299              		.align	2
 300              		.global	PWM_leftmotor_ReadStatusRegister
 301              		.thumb
 302              		.thumb_func
 303              		.type	PWM_leftmotor_ReadStatusRegister, %function
 304              	PWM_leftmotor_ReadStatusRegister:
 305              	.LFB13:
 687:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 688:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 689:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 690:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 694:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 697:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 699:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 700:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 710:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_leftmotor.c ****     uint8 PWM_leftmotor_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 306              		.loc 1 712 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 713:Generated_Source\PSoC5/PWM_leftmotor.c ****         return (CY_GET_REG8(PWM_leftmotor_STATUS_PTR));
 311              		.loc 1 713 0
 312 0000 014B     		ldr	r3, .L32
 313 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 19


 714:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 314              		.loc 1 714 0
 315 0004 7047     		bx	lr
 316              	.L33:
 317 0006 00BF     		.align	2
 318              	.L32:
 319 0008 69650040 		.word	1073767785
 320              		.cfi_endproc
 321              	.LFE13:
 322              		.size	PWM_leftmotor_ReadStatusRegister, .-PWM_leftmotor_ReadStatusRegister
 323              		.section	.text.PWM_leftmotor_ReadControlRegister,"ax",%progbits
 324              		.align	2
 325              		.global	PWM_leftmotor_ReadControlRegister
 326              		.thumb
 327              		.thumb_func
 328              		.type	PWM_leftmotor_ReadControlRegister, %function
 329              	PWM_leftmotor_ReadControlRegister:
 330              	.LFB14:
 715:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 716:Generated_Source\PSoC5/PWM_leftmotor.c **** #endif /* (PWM_leftmotor_UseStatus || PWM_leftmotor_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 718:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 719:Generated_Source\PSoC5/PWM_leftmotor.c **** #if (PWM_leftmotor_UseControl)
 720:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 721:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 722:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 726:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 730:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 732:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 733:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 736:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_leftmotor.c ****     uint8 PWM_leftmotor_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 331              		.loc 1 738 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 739:Generated_Source\PSoC5/PWM_leftmotor.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 741:Generated_Source\PSoC5/PWM_leftmotor.c ****         result = CY_GET_REG8(PWM_leftmotor_CONTROL_PTR);
 336              		.loc 1 741 0
 337 0000 014B     		ldr	r3, .L35
 338 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 339              	.LVL12:
 742:Generated_Source\PSoC5/PWM_leftmotor.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 340              		.loc 1 743 0
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 20


 341 0004 7047     		bx	lr
 342              	.L36:
 343 0006 00BF     		.align	2
 344              	.L35:
 345 0008 79650040 		.word	1073767801
 346              		.cfi_endproc
 347              	.LFE14:
 348              		.size	PWM_leftmotor_ReadControlRegister, .-PWM_leftmotor_ReadControlRegister
 349              		.section	.text.PWM_leftmotor_WriteControlRegister,"ax",%progbits
 350              		.align	2
 351              		.global	PWM_leftmotor_WriteControlRegister
 352              		.thumb
 353              		.thumb_func
 354              		.type	PWM_leftmotor_WriteControlRegister, %function
 355              	PWM_leftmotor_WriteControlRegister:
 356              	.LFB15:
 744:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 745:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 746:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 750:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 754:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 761:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 763:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 764:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_leftmotor.c ****     void PWM_leftmotor_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 357              		.loc 1 766 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362              	.LVL13:
 767:Generated_Source\PSoC5/PWM_leftmotor.c ****         CY_SET_REG8(PWM_leftmotor_CONTROL_PTR, control);
 363              		.loc 1 767 0
 364 0000 014B     		ldr	r3, .L38
 365 0002 1870     		strb	r0, [r3]
 366 0004 7047     		bx	lr
 367              	.L39:
 368 0006 00BF     		.align	2
 369              	.L38:
 370 0008 79650040 		.word	1073767801
 371              		.cfi_endproc
 372              	.LFE15:
 373              		.size	PWM_leftmotor_WriteControlRegister, .-PWM_leftmotor_WriteControlRegister
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 21


 374              		.section	.text.PWM_leftmotor_ReadCapture,"ax",%progbits
 375              		.align	2
 376              		.global	PWM_leftmotor_ReadCapture
 377              		.thumb
 378              		.thumb_func
 379              		.type	PWM_leftmotor_ReadCapture, %function
 380              	PWM_leftmotor_ReadCapture:
 381              	.LFB16:
 768:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 769:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 770:Generated_Source\PSoC5/PWM_leftmotor.c **** #endif /* (PWM_leftmotor_UseControl) */
 771:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 772:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 773:Generated_Source\PSoC5/PWM_leftmotor.c **** #if (!PWM_leftmotor_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 775:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 776:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_ReadCapture
 778:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 780:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 783:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 785:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 786:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 789:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_leftmotor.c ****     uint8 PWM_leftmotor_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 382              		.loc 1 791 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 792:Generated_Source\PSoC5/PWM_leftmotor.c ****         return (CY_GET_REG8(PWM_leftmotor_CAPTURE_LSB_PTR));
 387              		.loc 1 792 0
 388 0000 014B     		ldr	r3, .L41
 389 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 390              		.loc 1 793 0
 391 0004 7047     		bx	lr
 392              	.L42:
 393 0006 00BF     		.align	2
 394              	.L41:
 395 0008 5A650040 		.word	1073767770
 396              		.cfi_endproc
 397              	.LFE16:
 398              		.size	PWM_leftmotor_ReadCapture, .-PWM_leftmotor_ReadCapture
 399              		.section	.text.PWM_leftmotor_ClearFIFO,"ax",%progbits
 400              		.align	2
 401              		.global	PWM_leftmotor_ClearFIFO
 402              		.thumb
 403              		.thumb_func
 404              		.type	PWM_leftmotor_ClearFIFO, %function
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 22


 405              	PWM_leftmotor_ClearFIFO:
 406              	.LFB8:
 454:Generated_Source\PSoC5/PWM_leftmotor.c ****             while(0u != (PWM_leftmotor_ReadStatusRegister() & PWM_leftmotor_STATUS_FIFONEMPTY))
 407              		.loc 1 454 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411 0000 08B5     		push	{r3, lr}
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
 455:Generated_Source\PSoC5/PWM_leftmotor.c ****             {
 415              		.loc 1 455 0
 416 0002 01E0     		b	.L44
 417              	.L45:
 457:Generated_Source\PSoC5/PWM_leftmotor.c ****             }
 418              		.loc 1 457 0
 419 0004 FFF7FEFF 		bl	PWM_leftmotor_ReadCapture
 420              	.LVL14:
 421              	.L44:
 455:Generated_Source\PSoC5/PWM_leftmotor.c ****             {
 422              		.loc 1 455 0
 423 0008 FFF7FEFF 		bl	PWM_leftmotor_ReadStatusRegister
 424              	.LVL15:
 425 000c 10F0100F 		tst	r0, #16
 426 0010 F8D1     		bne	.L45
 459:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 427              		.loc 1 459 0
 428 0012 08BD     		pop	{r3, pc}
 429              		.cfi_endproc
 430              	.LFE8:
 431              		.size	PWM_leftmotor_ClearFIFO, .-PWM_leftmotor_ClearFIFO
 432              		.section	.text.PWM_leftmotor_Init,"ax",%progbits
 433              		.align	2
 434              		.global	PWM_leftmotor_Init
 435              		.thumb
 436              		.thumb_func
 437              		.type	PWM_leftmotor_Init, %function
 438              	PWM_leftmotor_Init:
 439              	.LFB1:
  85:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if (PWM_leftmotor_UsingFixedFunction || PWM_leftmotor_UseControl)
 440              		.loc 1 85 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 3, -8
 447              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM_leftmotor.c ****                 ((uint8)(~PWM_leftmotor_CTRL_CMPMODE1_MASK));
 448              		.loc 1 117 0
 449 0002 134A     		ldr	r2, .L49
 450 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 451 0006 03F0C003 		and	r3, r3, #192
 452              	.LVL16:
 119:Generated_Source\PSoC5/PWM_leftmotor.c ****                                    PWM_leftmotor_DEFAULT_COMPARE1_MODE;
 453              		.loc 1 119 0
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 23


 454 000a 43F02D03 		orr	r3, r3, #45
 455              	.LVL17:
 456 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/PWM_leftmotor.c ****         #else /* (PWM_leftmotor_Resolution == 16)*/
 457              		.loc 1 126 0
 458 0010 2132     		adds	r2, r2, #33
 459 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 460 0014 43F00103 		orr	r3, r3, #1
 461 0018 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (!PWM_leftmotor_UsingFixedFunction) */
 462              		.loc 1 133 0
 463 001a FF20     		movs	r0, #255
 464 001c FFF7FEFF 		bl	PWM_leftmotor_WriteCounter
 465              	.LVL18:
 136:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 466              		.loc 1 136 0
 467 0020 FF20     		movs	r0, #255
 468 0022 FFF7FEFF 		bl	PWM_leftmotor_WritePeriod
 469              	.LVL19:
 141:Generated_Source\PSoC5/PWM_leftmotor.c ****             PWM_leftmotor_WriteCompare2(PWM_leftmotor_INIT_COMPARE_VALUE2);
 470              		.loc 1 141 0
 471 0026 7F20     		movs	r0, #127
 472 0028 FFF7FEFF 		bl	PWM_leftmotor_WriteCompare1
 473              	.LVL20:
 142:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_UseOneCompareMode) */
 474              		.loc 1 142 0
 475 002c 7F20     		movs	r0, #127
 476 002e FFF7FEFF 		bl	PWM_leftmotor_WriteCompare2
 477              	.LVL21:
 154:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (PWM_leftmotor_UseStatus || PWM_leftmotor_UsingFixedFunction) */
 478              		.loc 1 154 0
 479 0032 0020     		movs	r0, #0
 480 0034 FFF7FEFF 		bl	PWM_leftmotor_SetInterruptMode
 481              	.LVL22:
 167:Generated_Source\PSoC5/PWM_leftmotor.c ****             /* Use the interrupt output of the status register for IRQ output */
 482              		.loc 1 167 0
 483 0038 FFF7FEFF 		bl	CyEnterCriticalSection
 484              	.LVL23:
 169:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 485              		.loc 1 169 0
 486 003c 054A     		ldr	r2, .L49+4
 487 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 488 0040 43F01003 		orr	r3, r3, #16
 489 0044 1370     		strb	r3, [r2]
 172:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 490              		.loc 1 172 0
 491 0046 FFF7FEFF 		bl	CyExitCriticalSection
 492              	.LVL24:
 176:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_UseStatus) */
 493              		.loc 1 176 0
 494 004a FFF7FEFF 		bl	PWM_leftmotor_ClearFIFO
 495              	.LVL25:
 496 004e 08BD     		pop	{r3, pc}
 497              	.L50:
 498              		.align	2
 499              	.L49:
 500 0050 79650040 		.word	1073767801
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 24


 501 0054 99650040 		.word	1073767833
 502              		.cfi_endproc
 503              	.LFE1:
 504              		.size	PWM_leftmotor_Init, .-PWM_leftmotor_Init
 505              		.section	.text.PWM_leftmotor_Start,"ax",%progbits
 506              		.align	2
 507              		.global	PWM_leftmotor_Start
 508              		.thumb
 509              		.thumb_func
 510              		.type	PWM_leftmotor_Start, %function
 511              	PWM_leftmotor_Start:
 512              	.LFB0:
  56:Generated_Source\PSoC5/PWM_leftmotor.c ****     /* If not Initialized then initialize all required hardware and software */
 513              		.loc 1 56 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517 0000 08B5     		push	{r3, lr}
 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 3, -8
 520              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 521              		.loc 1 58 0
 522 0002 054B     		ldr	r3, .L54
 523 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 524 0006 23B9     		cbnz	r3, .L52
  60:Generated_Source\PSoC5/PWM_leftmotor.c ****         PWM_leftmotor_initVar = 1u;
 525              		.loc 1 60 0
 526 0008 FFF7FEFF 		bl	PWM_leftmotor_Init
 527              	.LVL26:
  61:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 528              		.loc 1 61 0
 529 000c 0122     		movs	r2, #1
 530 000e 024B     		ldr	r3, .L54
 531 0010 1A70     		strb	r2, [r3]
 532              	.L52:
  63:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 533              		.loc 1 63 0
 534 0012 FFF7FEFF 		bl	PWM_leftmotor_Enable
 535              	.LVL27:
 536 0016 08BD     		pop	{r3, pc}
 537              	.L55:
 538              		.align	2
 539              	.L54:
 540 0018 00000000 		.word	.LANCHOR0
 541              		.cfi_endproc
 542              	.LFE0:
 543              		.size	PWM_leftmotor_Start, .-PWM_leftmotor_Start
 544              		.section	.text.PWM_leftmotor_ReadCompare1,"ax",%progbits
 545              		.align	2
 546              		.global	PWM_leftmotor_ReadCompare1
 547              		.thumb
 548              		.thumb_func
 549              		.type	PWM_leftmotor_ReadCompare1, %function
 550              	PWM_leftmotor_ReadCompare1:
 551              	.LFB17:
 794:Generated_Source\PSoC5/PWM_leftmotor.c **** 
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 25


 795:Generated_Source\PSoC5/PWM_leftmotor.c **** #endif /* (!PWM_leftmotor_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 797:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 798:Generated_Source\PSoC5/PWM_leftmotor.c **** #if (PWM_leftmotor_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 800:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 801:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_ReadCompare
 803:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 805:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 809:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 811:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 812:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 815:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_leftmotor.c ****     uint8 PWM_leftmotor_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 818:Generated_Source\PSoC5/PWM_leftmotor.c ****         #if(PWM_leftmotor_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_leftmotor.c ****             return ((uint8)CY_GET_REG16(PWM_leftmotor_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_leftmotor.c ****         #else
 821:Generated_Source\PSoC5/PWM_leftmotor.c ****             return (CY_GET_REG8(PWM_leftmotor_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_leftmotor.c ****         #endif /* (PWM_leftmotor_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 824:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 825:Generated_Source\PSoC5/PWM_leftmotor.c **** #else
 826:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 827:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 828:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_ReadCompare1
 830:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 832:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 835:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 837:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 838:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 841:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_leftmotor.c ****     uint8 PWM_leftmotor_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 552              		.loc 1 843 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 844:Generated_Source\PSoC5/PWM_leftmotor.c ****         return (CY_GET_REG8(PWM_leftmotor_COMPARE1_LSB_PTR));
 557              		.loc 1 844 0
 558 0000 014B     		ldr	r3, .L57
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 26


 559 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 845:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 560              		.loc 1 845 0
 561 0004 7047     		bx	lr
 562              	.L58:
 563 0006 00BF     		.align	2
 564              	.L57:
 565 0008 2A650040 		.word	1073767722
 566              		.cfi_endproc
 567              	.LFE17:
 568              		.size	PWM_leftmotor_ReadCompare1, .-PWM_leftmotor_ReadCompare1
 569              		.section	.text.PWM_leftmotor_ReadCompare2,"ax",%progbits
 570              		.align	2
 571              		.global	PWM_leftmotor_ReadCompare2
 572              		.thumb
 573              		.thumb_func
 574              		.type	PWM_leftmotor_ReadCompare2, %function
 575              	PWM_leftmotor_ReadCompare2:
 576              	.LFB18:
 846:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 847:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 848:Generated_Source\PSoC5/PWM_leftmotor.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Function Name: PWM_leftmotor_ReadCompare2
 850:Generated_Source\PSoC5/PWM_leftmotor.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 852:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 855:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  None
 857:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 858:Generated_Source\PSoC5/PWM_leftmotor.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_leftmotor.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_leftmotor.c ****     *
 861:Generated_Source\PSoC5/PWM_leftmotor.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_leftmotor.c ****     uint8 PWM_leftmotor_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_leftmotor.c ****     {
 577              		.loc 1 863 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 864:Generated_Source\PSoC5/PWM_leftmotor.c ****         return (CY_GET_REG8(PWM_leftmotor_COMPARE2_LSB_PTR));
 582              		.loc 1 864 0
 583 0000 014B     		ldr	r3, .L60
 584 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 865:Generated_Source\PSoC5/PWM_leftmotor.c ****     }
 585              		.loc 1 865 0
 586 0004 7047     		bx	lr
 587              	.L61:
 588 0006 00BF     		.align	2
 589              	.L60:
 590 0008 3A650040 		.word	1073767738
 591              		.cfi_endproc
 592              	.LFE18:
 593              		.size	PWM_leftmotor_ReadCompare2, .-PWM_leftmotor_ReadCompare2
 594              		.section	.text.PWM_leftmotor_ReadPeriod,"ax",%progbits
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 27


 595              		.align	2
 596              		.global	PWM_leftmotor_ReadPeriod
 597              		.thumb
 598              		.thumb_func
 599              		.type	PWM_leftmotor_ReadPeriod, %function
 600              	PWM_leftmotor_ReadPeriod:
 601              	.LFB19:
 866:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 867:Generated_Source\PSoC5/PWM_leftmotor.c **** #endif /* (PWM_leftmotor_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 869:Generated_Source\PSoC5/PWM_leftmotor.c **** 
 870:Generated_Source\PSoC5/PWM_leftmotor.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_leftmotor.c **** * Function Name: PWM_leftmotor_ReadPeriod
 872:Generated_Source\PSoC5/PWM_leftmotor.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 874:Generated_Source\PSoC5/PWM_leftmotor.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_leftmotor.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 877:Generated_Source\PSoC5/PWM_leftmotor.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_leftmotor.c **** *  None
 879:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 880:Generated_Source\PSoC5/PWM_leftmotor.c **** * Return:
 881:Generated_Source\PSoC5/PWM_leftmotor.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_leftmotor.c **** *
 883:Generated_Source\PSoC5/PWM_leftmotor.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_leftmotor.c **** uint8 PWM_leftmotor_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_leftmotor.c **** {
 602              		.loc 1 885 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM_leftmotor.c ****     #if(PWM_leftmotor_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_leftmotor.c ****         return ((uint8)CY_GET_REG16(PWM_leftmotor_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_leftmotor.c ****     #else
 889:Generated_Source\PSoC5/PWM_leftmotor.c ****         return (CY_GET_REG8(PWM_leftmotor_PERIOD_LSB_PTR));
 607              		.loc 1 889 0
 608 0000 014B     		ldr	r3, .L63
 609 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/PWM_leftmotor.c ****     #endif /* (PWM_leftmotor_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_leftmotor.c **** }
 610              		.loc 1 891 0
 611 0004 7047     		bx	lr
 612              	.L64:
 613 0006 00BF     		.align	2
 614              	.L63:
 615 0008 4A650040 		.word	1073767754
 616              		.cfi_endproc
 617              	.LFE19:
 618              		.size	PWM_leftmotor_ReadPeriod, .-PWM_leftmotor_ReadPeriod
 619              		.global	PWM_leftmotor_initVar
 620              		.bss
 621              		.set	.LANCHOR0,. + 0
 622              		.type	PWM_leftmotor_initVar, %object
 623              		.size	PWM_leftmotor_initVar, 1
 624              	PWM_leftmotor_initVar:
 625 0000 00       		.space	1
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 28


 626              		.text
 627              	.Letext0:
 628              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 629              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 630              		.section	.debug_info,"",%progbits
 631              	.Ldebug_info0:
 632 0000 ED030000 		.4byte	0x3ed
 633 0004 0400     		.2byte	0x4
 634 0006 00000000 		.4byte	.Ldebug_abbrev0
 635 000a 04       		.byte	0x4
 636 000b 01       		.uleb128 0x1
 637 000c 6C010000 		.4byte	.LASF47
 638 0010 0C       		.byte	0xc
 639 0011 1E000000 		.4byte	.LASF48
 640 0015 44030000 		.4byte	.LASF49
 641 0019 00000000 		.4byte	.Ldebug_ranges0+0
 642 001d 00000000 		.4byte	0
 643 0021 00000000 		.4byte	.Ldebug_line0
 644 0025 02       		.uleb128 0x2
 645 0026 01       		.byte	0x1
 646 0027 06       		.byte	0x6
 647 0028 52010000 		.4byte	.LASF0
 648 002c 02       		.uleb128 0x2
 649 002d 01       		.byte	0x1
 650 002e 08       		.byte	0x8
 651 002f 5E010000 		.4byte	.LASF1
 652 0033 02       		.uleb128 0x2
 653 0034 02       		.byte	0x2
 654 0035 05       		.byte	0x5
 655 0036 C2030000 		.4byte	.LASF2
 656 003a 02       		.uleb128 0x2
 657 003b 02       		.byte	0x2
 658 003c 07       		.byte	0x7
 659 003d 00010000 		.4byte	.LASF3
 660 0041 02       		.uleb128 0x2
 661 0042 04       		.byte	0x4
 662 0043 05       		.byte	0x5
 663 0044 2A040000 		.4byte	.LASF4
 664 0048 02       		.uleb128 0x2
 665 0049 04       		.byte	0x4
 666 004a 07       		.byte	0x7
 667 004b 30020000 		.4byte	.LASF5
 668 004f 02       		.uleb128 0x2
 669 0050 08       		.byte	0x8
 670 0051 05       		.byte	0x5
 671 0052 A6030000 		.4byte	.LASF6
 672 0056 02       		.uleb128 0x2
 673 0057 08       		.byte	0x8
 674 0058 07       		.byte	0x7
 675 0059 26030000 		.4byte	.LASF7
 676 005d 03       		.uleb128 0x3
 677 005e 04       		.byte	0x4
 678 005f 05       		.byte	0x5
 679 0060 696E7400 		.ascii	"int\000"
 680 0064 02       		.uleb128 0x2
 681 0065 04       		.byte	0x4
 682 0066 07       		.byte	0x7
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 29


 683 0067 19030000 		.4byte	.LASF8
 684 006b 04       		.uleb128 0x4
 685 006c 42020000 		.4byte	.LASF12
 686 0070 02       		.byte	0x2
 687 0071 E401     		.2byte	0x1e4
 688 0073 2C000000 		.4byte	0x2c
 689 0077 02       		.uleb128 0x2
 690 0078 04       		.byte	0x4
 691 0079 04       		.byte	0x4
 692 007a 44010000 		.4byte	.LASF9
 693 007e 02       		.uleb128 0x2
 694 007f 08       		.byte	0x8
 695 0080 04       		.byte	0x4
 696 0081 AF020000 		.4byte	.LASF10
 697 0085 02       		.uleb128 0x2
 698 0086 01       		.byte	0x1
 699 0087 08       		.byte	0x8
 700 0088 33040000 		.4byte	.LASF11
 701 008c 04       		.uleb128 0x4
 702 008d 82030000 		.4byte	.LASF13
 703 0091 02       		.byte	0x2
 704 0092 8E02     		.2byte	0x28e
 705 0094 98000000 		.4byte	0x98
 706 0098 05       		.uleb128 0x5
 707 0099 6B000000 		.4byte	0x6b
 708 009d 02       		.uleb128 0x2
 709 009e 08       		.byte	0x8
 710 009f 04       		.byte	0x4
 711 00a0 38040000 		.4byte	.LASF14
 712 00a4 02       		.uleb128 0x2
 713 00a5 04       		.byte	0x4
 714 00a6 07       		.byte	0x7
 715 00a7 9D030000 		.4byte	.LASF15
 716 00ab 06       		.uleb128 0x6
 717 00ac 13010000 		.4byte	.LASF16
 718 00b0 01       		.byte	0x1
 719 00b1 C7       		.byte	0xc7
 720 00b2 00000000 		.4byte	.LFB2
 721 00b6 10000000 		.4byte	.LFE2-.LFB2
 722 00ba 01       		.uleb128 0x1
 723 00bb 9C       		.byte	0x9c
 724 00bc 06       		.uleb128 0x6
 725 00bd B6020000 		.4byte	.LASF17
 726 00c1 01       		.byte	0x1
 727 00c2 E9       		.byte	0xe9
 728 00c3 00000000 		.4byte	.LFB3
 729 00c7 10000000 		.4byte	.LFE3-.LFB3
 730 00cb 01       		.uleb128 0x1
 731 00cc 9C       		.byte	0x9c
 732 00cd 07       		.uleb128 0x7
 733 00ce 00000000 		.4byte	.LASF18
 734 00d2 01       		.byte	0x1
 735 00d3 4601     		.2byte	0x146
 736 00d5 00000000 		.4byte	.LFB4
 737 00d9 1C000000 		.4byte	.LFE4-.LFB4
 738 00dd 01       		.uleb128 0x1
 739 00de 9C       		.byte	0x9c
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 30


 740 00df 04010000 		.4byte	0x104
 741 00e3 08       		.uleb128 0x8
 742 00e4 01040000 		.4byte	.LASF20
 743 00e8 01       		.byte	0x1
 744 00e9 4601     		.2byte	0x146
 745 00eb 6B000000 		.4byte	0x6b
 746 00ef 00000000 		.4byte	.LLST0
 747 00f3 09       		.uleb128 0x9
 748 00f4 9E000000 		.4byte	.LASF21
 749 00f8 01       		.byte	0x1
 750 00f9 4C01     		.2byte	0x14c
 751 00fb 6B000000 		.4byte	0x6b
 752 00ff 21000000 		.4byte	.LLST1
 753 0103 00       		.byte	0
 754 0104 07       		.uleb128 0x7
 755 0105 45000000 		.4byte	.LASF19
 756 0109 01       		.byte	0x1
 757 010a 6801     		.2byte	0x168
 758 010c 00000000 		.4byte	.LFB5
 759 0110 1C000000 		.4byte	.LFE5-.LFB5
 760 0114 01       		.uleb128 0x1
 761 0115 9C       		.byte	0x9c
 762 0116 3B010000 		.4byte	0x13b
 763 011a 08       		.uleb128 0x8
 764 011b 01040000 		.4byte	.LASF20
 765 011f 01       		.byte	0x1
 766 0120 6801     		.2byte	0x168
 767 0122 6B000000 		.4byte	0x6b
 768 0126 34000000 		.4byte	.LLST2
 769 012a 09       		.uleb128 0x9
 770 012b 9E000000 		.4byte	.LASF21
 771 012f 01       		.byte	0x1
 772 0130 6C01     		.2byte	0x16c
 773 0132 6B000000 		.4byte	0x6b
 774 0136 55000000 		.4byte	.LLST3
 775 013a 00       		.byte	0
 776 013b 07       		.uleb128 0x7
 777 013c 73020000 		.4byte	.LASF22
 778 0140 01       		.byte	0x1
 779 0141 9301     		.2byte	0x193
 780 0143 00000000 		.4byte	.LFB6
 781 0147 0C000000 		.4byte	.LFE6-.LFB6
 782 014b 01       		.uleb128 0x1
 783 014c 9C       		.byte	0x9c
 784 014d 60010000 		.4byte	0x160
 785 0151 0A       		.uleb128 0xa
 786 0152 4A010000 		.4byte	.LASF23
 787 0156 01       		.byte	0x1
 788 0157 9301     		.2byte	0x193
 789 0159 6B000000 		.4byte	0x6b
 790 015d 01       		.uleb128 0x1
 791 015e 50       		.byte	0x50
 792 015f 00       		.byte	0
 793 0160 0B       		.uleb128 0xb
 794 0161 E8020000 		.4byte	.LASF31
 795 0165 01       		.byte	0x1
 796 0166 A901     		.2byte	0x1a9
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 31


 797 0168 6B000000 		.4byte	0x6b
 798 016c 00000000 		.4byte	.LFB7
 799 0170 14000000 		.4byte	.LFE7-.LFB7
 800 0174 01       		.uleb128 0x1
 801 0175 9C       		.byte	0x9c
 802 0176 07       		.uleb128 0x7
 803 0177 CC030000 		.4byte	.LASF24
 804 017b 01       		.byte	0x1
 805 017c E201     		.2byte	0x1e2
 806 017e 00000000 		.4byte	.LFB9
 807 0182 0C000000 		.4byte	.LFE9-.LFB9
 808 0186 01       		.uleb128 0x1
 809 0187 9C       		.byte	0x9c
 810 0188 9B010000 		.4byte	0x19b
 811 018c 0A       		.uleb128 0xa
 812 018d C3000000 		.4byte	.LASF25
 813 0191 01       		.byte	0x1
 814 0192 E201     		.2byte	0x1e2
 815 0194 6B000000 		.4byte	0x6b
 816 0198 01       		.uleb128 0x1
 817 0199 50       		.byte	0x50
 818 019a 00       		.byte	0
 819 019b 07       		.uleb128 0x7
 820 019c 28010000 		.4byte	.LASF26
 821 01a0 01       		.byte	0x1
 822 01a1 2B02     		.2byte	0x22b
 823 01a3 00000000 		.4byte	.LFB10
 824 01a7 0C000000 		.4byte	.LFE10-.LFB10
 825 01ab 01       		.uleb128 0x1
 826 01ac 9C       		.byte	0x9c
 827 01ad C0010000 		.4byte	0x1c0
 828 01b1 0A       		.uleb128 0xa
 829 01b2 70040000 		.4byte	.LASF27
 830 01b6 01       		.byte	0x1
 831 01b7 2B02     		.2byte	0x22b
 832 01b9 6B000000 		.4byte	0x6b
 833 01bd 01       		.uleb128 0x1
 834 01be 50       		.byte	0x50
 835 01bf 00       		.byte	0
 836 01c0 07       		.uleb128 0x7
 837 01c1 FA010000 		.4byte	.LASF28
 838 01c5 01       		.byte	0x1
 839 01c6 4802     		.2byte	0x248
 840 01c8 00000000 		.4byte	.LFB11
 841 01cc 0C000000 		.4byte	.LFE11-.LFB11
 842 01d0 01       		.uleb128 0x1
 843 01d1 9C       		.byte	0x9c
 844 01d2 E5010000 		.4byte	0x1e5
 845 01d6 0A       		.uleb128 0xa
 846 01d7 70040000 		.4byte	.LASF27
 847 01db 01       		.byte	0x1
 848 01dc 4802     		.2byte	0x248
 849 01de 6B000000 		.4byte	0x6b
 850 01e2 01       		.uleb128 0x1
 851 01e3 50       		.byte	0x50
 852 01e4 00       		.byte	0
 853 01e5 07       		.uleb128 0x7
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 32


 854 01e6 C9020000 		.4byte	.LASF29
 855 01ea 01       		.byte	0x1
 856 01eb AC02     		.2byte	0x2ac
 857 01ed 00000000 		.4byte	.LFB12
 858 01f1 0C000000 		.4byte	.LFE12-.LFB12
 859 01f5 01       		.uleb128 0x1
 860 01f6 9C       		.byte	0x9c
 861 01f7 0A020000 		.4byte	0x20a
 862 01fb 0A       		.uleb128 0xa
 863 01fc B4030000 		.4byte	.LASF30
 864 0200 01       		.byte	0x1
 865 0201 AC02     		.2byte	0x2ac
 866 0203 6B000000 		.4byte	0x6b
 867 0207 01       		.uleb128 0x1
 868 0208 50       		.byte	0x50
 869 0209 00       		.byte	0
 870 020a 0B       		.uleb128 0xb
 871 020b 8E020000 		.4byte	.LASF32
 872 020f 01       		.byte	0x1
 873 0210 C702     		.2byte	0x2c7
 874 0212 6B000000 		.4byte	0x6b
 875 0216 00000000 		.4byte	.LFB13
 876 021a 0C000000 		.4byte	.LFE13-.LFB13
 877 021e 01       		.uleb128 0x1
 878 021f 9C       		.byte	0x9c
 879 0220 0C       		.uleb128 0xc
 880 0221 7C000000 		.4byte	.LASF50
 881 0225 01       		.byte	0x1
 882 0226 E102     		.2byte	0x2e1
 883 0228 6B000000 		.4byte	0x6b
 884 022c 00000000 		.4byte	.LFB14
 885 0230 0C000000 		.4byte	.LFE14-.LFB14
 886 0234 01       		.uleb128 0x1
 887 0235 9C       		.byte	0x9c
 888 0236 49020000 		.4byte	0x249
 889 023a 0D       		.uleb128 0xd
 890 023b 3D030000 		.4byte	.LASF33
 891 023f 01       		.byte	0x1
 892 0240 E302     		.2byte	0x2e3
 893 0242 6B000000 		.4byte	0x6b
 894 0246 01       		.uleb128 0x1
 895 0247 50       		.byte	0x50
 896 0248 00       		.byte	0
 897 0249 07       		.uleb128 0x7
 898 024a 50020000 		.4byte	.LASF34
 899 024e 01       		.byte	0x1
 900 024f FD02     		.2byte	0x2fd
 901 0251 00000000 		.4byte	.LFB15
 902 0255 0C000000 		.4byte	.LFE15-.LFB15
 903 0259 01       		.uleb128 0x1
 904 025a 9C       		.byte	0x9c
 905 025b 6E020000 		.4byte	0x26e
 906 025f 0A       		.uleb128 0xa
 907 0260 48020000 		.4byte	.LASF35
 908 0264 01       		.byte	0x1
 909 0265 FD02     		.2byte	0x2fd
 910 0267 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 33


 911 026b 01       		.uleb128 0x1
 912 026c 50       		.byte	0x50
 913 026d 00       		.byte	0
 914 026e 0B       		.uleb128 0xb
 915 026f 16020000 		.4byte	.LASF36
 916 0273 01       		.byte	0x1
 917 0274 1603     		.2byte	0x316
 918 0276 6B000000 		.4byte	0x6b
 919 027a 00000000 		.4byte	.LFB16
 920 027e 0C000000 		.4byte	.LFE16-.LFB16
 921 0282 01       		.uleb128 0x1
 922 0283 9C       		.byte	0x9c
 923 0284 07       		.uleb128 0x7
 924 0285 44040000 		.4byte	.LASF37
 925 0289 01       		.byte	0x1
 926 028a C501     		.2byte	0x1c5
 927 028c 00000000 		.4byte	.LFB8
 928 0290 14000000 		.4byte	.LFE8-.LFB8
 929 0294 01       		.uleb128 0x1
 930 0295 9C       		.byte	0x9c
 931 0296 AD020000 		.4byte	0x2ad
 932 029a 0E       		.uleb128 0xe
 933 029b 08000000 		.4byte	.LVL14
 934 029f 6E020000 		.4byte	0x26e
 935 02a3 0E       		.uleb128 0xe
 936 02a4 0C000000 		.4byte	.LVL15
 937 02a8 0A020000 		.4byte	0x20a
 938 02ac 00       		.byte	0
 939 02ad 0F       		.uleb128 0xf
 940 02ae B0000000 		.4byte	.LASF38
 941 02b2 01       		.byte	0x1
 942 02b3 54       		.byte	0x54
 943 02b4 00000000 		.4byte	.LFB1
 944 02b8 58000000 		.4byte	.LFE1-.LFB1
 945 02bc 01       		.uleb128 0x1
 946 02bd 9C       		.byte	0x9c
 947 02be 5F030000 		.4byte	0x35f
 948 02c2 10       		.uleb128 0x10
 949 02c3 E6030000 		.4byte	.LASF39
 950 02c7 01       		.byte	0x1
 951 02c8 57       		.byte	0x57
 952 02c9 6B000000 		.4byte	0x6b
 953 02cd 68000000 		.4byte	.LLST4
 954 02d1 10       		.uleb128 0x10
 955 02d2 0D040000 		.4byte	.LASF40
 956 02d6 01       		.byte	0x1
 957 02d7 5D       		.byte	0x5d
 958 02d8 6B000000 		.4byte	0x6b
 959 02dc 7B000000 		.4byte	.LLST5
 960 02e0 11       		.uleb128 0x11
 961 02e1 20000000 		.4byte	.LVL18
 962 02e5 3B010000 		.4byte	0x13b
 963 02e9 F4020000 		.4byte	0x2f4
 964 02ed 12       		.uleb128 0x12
 965 02ee 01       		.uleb128 0x1
 966 02ef 50       		.byte	0x50
 967 02f0 02       		.uleb128 0x2
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 34


 968 02f1 09       		.byte	0x9
 969 02f2 FF       		.byte	0xff
 970 02f3 00       		.byte	0
 971 02f4 11       		.uleb128 0x11
 972 02f5 26000000 		.4byte	.LVL19
 973 02f9 76010000 		.4byte	0x176
 974 02fd 08030000 		.4byte	0x308
 975 0301 12       		.uleb128 0x12
 976 0302 01       		.uleb128 0x1
 977 0303 50       		.byte	0x50
 978 0304 02       		.uleb128 0x2
 979 0305 09       		.byte	0x9
 980 0306 FF       		.byte	0xff
 981 0307 00       		.byte	0
 982 0308 11       		.uleb128 0x11
 983 0309 2C000000 		.4byte	.LVL20
 984 030d 9B010000 		.4byte	0x19b
 985 0311 1C030000 		.4byte	0x31c
 986 0315 12       		.uleb128 0x12
 987 0316 01       		.uleb128 0x1
 988 0317 50       		.byte	0x50
 989 0318 02       		.uleb128 0x2
 990 0319 08       		.byte	0x8
 991 031a 7F       		.byte	0x7f
 992 031b 00       		.byte	0
 993 031c 11       		.uleb128 0x11
 994 031d 32000000 		.4byte	.LVL21
 995 0321 C0010000 		.4byte	0x1c0
 996 0325 30030000 		.4byte	0x330
 997 0329 12       		.uleb128 0x12
 998 032a 01       		.uleb128 0x1
 999 032b 50       		.byte	0x50
 1000 032c 02       		.uleb128 0x2
 1001 032d 08       		.byte	0x8
 1002 032e 7F       		.byte	0x7f
 1003 032f 00       		.byte	0
 1004 0330 11       		.uleb128 0x11
 1005 0331 38000000 		.4byte	.LVL22
 1006 0335 E5010000 		.4byte	0x1e5
 1007 0339 43030000 		.4byte	0x343
 1008 033d 12       		.uleb128 0x12
 1009 033e 01       		.uleb128 0x1
 1010 033f 50       		.byte	0x50
 1011 0340 01       		.uleb128 0x1
 1012 0341 30       		.byte	0x30
 1013 0342 00       		.byte	0
 1014 0343 0E       		.uleb128 0xe
 1015 0344 3C000000 		.4byte	.LVL23
 1016 0348 DA030000 		.4byte	0x3da
 1017 034c 0E       		.uleb128 0xe
 1018 034d 4A000000 		.4byte	.LVL24
 1019 0351 E5030000 		.4byte	0x3e5
 1020 0355 0E       		.uleb128 0xe
 1021 0356 4E000000 		.4byte	.LVL25
 1022 035a 84020000 		.4byte	0x284
 1023 035e 00       		.byte	0
 1024 035f 0F       		.uleb128 0xf
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 35


 1025 0360 5C040000 		.4byte	.LASF41
 1026 0364 01       		.byte	0x1
 1027 0365 37       		.byte	0x37
 1028 0366 00000000 		.4byte	.LFB0
 1029 036a 1C000000 		.4byte	.LFE0-.LFB0
 1030 036e 01       		.uleb128 0x1
 1031 036f 9C       		.byte	0x9c
 1032 0370 87030000 		.4byte	0x387
 1033 0374 0E       		.uleb128 0xe
 1034 0375 0C000000 		.4byte	.LVL26
 1035 0379 AD020000 		.4byte	0x2ad
 1036 037d 0E       		.uleb128 0xe
 1037 037e 16000000 		.4byte	.LVL27
 1038 0382 AB000000 		.4byte	0xab
 1039 0386 00       		.byte	0
 1040 0387 0B       		.uleb128 0xb
 1041 0388 CA000000 		.4byte	.LASF42
 1042 038c 01       		.byte	0x1
 1043 038d 4A03     		.2byte	0x34a
 1044 038f 6B000000 		.4byte	0x6b
 1045 0393 00000000 		.4byte	.LFB17
 1046 0397 0C000000 		.4byte	.LFE17-.LFB17
 1047 039b 01       		.uleb128 0x1
 1048 039c 9C       		.byte	0x9c
 1049 039d 0B       		.uleb128 0xb
 1050 039e E5000000 		.4byte	.LASF43
 1051 03a2 01       		.byte	0x1
 1052 03a3 5E03     		.2byte	0x35e
 1053 03a5 6B000000 		.4byte	0x6b
 1054 03a9 00000000 		.4byte	.LFB18
 1055 03ad 0C000000 		.4byte	.LFE18-.LFB18
 1056 03b1 01       		.uleb128 0x1
 1057 03b2 9C       		.byte	0x9c
 1058 03b3 0B       		.uleb128 0xb
 1059 03b4 63000000 		.4byte	.LASF44
 1060 03b8 01       		.byte	0x1
 1061 03b9 7403     		.2byte	0x374
 1062 03bb 6B000000 		.4byte	0x6b
 1063 03bf 00000000 		.4byte	.LFB19
 1064 03c3 0C000000 		.4byte	.LFE19-.LFB19
 1065 03c7 01       		.uleb128 0x1
 1066 03c8 9C       		.byte	0x9c
 1067 03c9 13       		.uleb128 0x13
 1068 03ca 87030000 		.4byte	.LASF51
 1069 03ce 01       		.byte	0x1
 1070 03cf 20       		.byte	0x20
 1071 03d0 6B000000 		.4byte	0x6b
 1072 03d4 05       		.uleb128 0x5
 1073 03d5 03       		.byte	0x3
 1074 03d6 00000000 		.4byte	PWM_leftmotor_initVar
 1075 03da 14       		.uleb128 0x14
 1076 03db 02030000 		.4byte	.LASF45
 1077 03df 02030000 		.4byte	.LASF45
 1078 03e3 03       		.byte	0x3
 1079 03e4 7D       		.byte	0x7d
 1080 03e5 14       		.uleb128 0x14
 1081 03e6 EB030000 		.4byte	.LASF46
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 36


 1082 03ea EB030000 		.4byte	.LASF46
 1083 03ee 03       		.byte	0x3
 1084 03ef 7E       		.byte	0x7e
 1085 03f0 00       		.byte	0
 1086              		.section	.debug_abbrev,"",%progbits
 1087              	.Ldebug_abbrev0:
 1088 0000 01       		.uleb128 0x1
 1089 0001 11       		.uleb128 0x11
 1090 0002 01       		.byte	0x1
 1091 0003 25       		.uleb128 0x25
 1092 0004 0E       		.uleb128 0xe
 1093 0005 13       		.uleb128 0x13
 1094 0006 0B       		.uleb128 0xb
 1095 0007 03       		.uleb128 0x3
 1096 0008 0E       		.uleb128 0xe
 1097 0009 1B       		.uleb128 0x1b
 1098 000a 0E       		.uleb128 0xe
 1099 000b 55       		.uleb128 0x55
 1100 000c 17       		.uleb128 0x17
 1101 000d 11       		.uleb128 0x11
 1102 000e 01       		.uleb128 0x1
 1103 000f 10       		.uleb128 0x10
 1104 0010 17       		.uleb128 0x17
 1105 0011 00       		.byte	0
 1106 0012 00       		.byte	0
 1107 0013 02       		.uleb128 0x2
 1108 0014 24       		.uleb128 0x24
 1109 0015 00       		.byte	0
 1110 0016 0B       		.uleb128 0xb
 1111 0017 0B       		.uleb128 0xb
 1112 0018 3E       		.uleb128 0x3e
 1113 0019 0B       		.uleb128 0xb
 1114 001a 03       		.uleb128 0x3
 1115 001b 0E       		.uleb128 0xe
 1116 001c 00       		.byte	0
 1117 001d 00       		.byte	0
 1118 001e 03       		.uleb128 0x3
 1119 001f 24       		.uleb128 0x24
 1120 0020 00       		.byte	0
 1121 0021 0B       		.uleb128 0xb
 1122 0022 0B       		.uleb128 0xb
 1123 0023 3E       		.uleb128 0x3e
 1124 0024 0B       		.uleb128 0xb
 1125 0025 03       		.uleb128 0x3
 1126 0026 08       		.uleb128 0x8
 1127 0027 00       		.byte	0
 1128 0028 00       		.byte	0
 1129 0029 04       		.uleb128 0x4
 1130 002a 16       		.uleb128 0x16
 1131 002b 00       		.byte	0
 1132 002c 03       		.uleb128 0x3
 1133 002d 0E       		.uleb128 0xe
 1134 002e 3A       		.uleb128 0x3a
 1135 002f 0B       		.uleb128 0xb
 1136 0030 3B       		.uleb128 0x3b
 1137 0031 05       		.uleb128 0x5
 1138 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 37


 1139 0033 13       		.uleb128 0x13
 1140 0034 00       		.byte	0
 1141 0035 00       		.byte	0
 1142 0036 05       		.uleb128 0x5
 1143 0037 35       		.uleb128 0x35
 1144 0038 00       		.byte	0
 1145 0039 49       		.uleb128 0x49
 1146 003a 13       		.uleb128 0x13
 1147 003b 00       		.byte	0
 1148 003c 00       		.byte	0
 1149 003d 06       		.uleb128 0x6
 1150 003e 2E       		.uleb128 0x2e
 1151 003f 00       		.byte	0
 1152 0040 3F       		.uleb128 0x3f
 1153 0041 19       		.uleb128 0x19
 1154 0042 03       		.uleb128 0x3
 1155 0043 0E       		.uleb128 0xe
 1156 0044 3A       		.uleb128 0x3a
 1157 0045 0B       		.uleb128 0xb
 1158 0046 3B       		.uleb128 0x3b
 1159 0047 0B       		.uleb128 0xb
 1160 0048 27       		.uleb128 0x27
 1161 0049 19       		.uleb128 0x19
 1162 004a 11       		.uleb128 0x11
 1163 004b 01       		.uleb128 0x1
 1164 004c 12       		.uleb128 0x12
 1165 004d 06       		.uleb128 0x6
 1166 004e 40       		.uleb128 0x40
 1167 004f 18       		.uleb128 0x18
 1168 0050 9742     		.uleb128 0x2117
 1169 0052 19       		.uleb128 0x19
 1170 0053 00       		.byte	0
 1171 0054 00       		.byte	0
 1172 0055 07       		.uleb128 0x7
 1173 0056 2E       		.uleb128 0x2e
 1174 0057 01       		.byte	0x1
 1175 0058 3F       		.uleb128 0x3f
 1176 0059 19       		.uleb128 0x19
 1177 005a 03       		.uleb128 0x3
 1178 005b 0E       		.uleb128 0xe
 1179 005c 3A       		.uleb128 0x3a
 1180 005d 0B       		.uleb128 0xb
 1181 005e 3B       		.uleb128 0x3b
 1182 005f 05       		.uleb128 0x5
 1183 0060 27       		.uleb128 0x27
 1184 0061 19       		.uleb128 0x19
 1185 0062 11       		.uleb128 0x11
 1186 0063 01       		.uleb128 0x1
 1187 0064 12       		.uleb128 0x12
 1188 0065 06       		.uleb128 0x6
 1189 0066 40       		.uleb128 0x40
 1190 0067 18       		.uleb128 0x18
 1191 0068 9742     		.uleb128 0x2117
 1192 006a 19       		.uleb128 0x19
 1193 006b 01       		.uleb128 0x1
 1194 006c 13       		.uleb128 0x13
 1195 006d 00       		.byte	0
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 38


 1196 006e 00       		.byte	0
 1197 006f 08       		.uleb128 0x8
 1198 0070 05       		.uleb128 0x5
 1199 0071 00       		.byte	0
 1200 0072 03       		.uleb128 0x3
 1201 0073 0E       		.uleb128 0xe
 1202 0074 3A       		.uleb128 0x3a
 1203 0075 0B       		.uleb128 0xb
 1204 0076 3B       		.uleb128 0x3b
 1205 0077 05       		.uleb128 0x5
 1206 0078 49       		.uleb128 0x49
 1207 0079 13       		.uleb128 0x13
 1208 007a 02       		.uleb128 0x2
 1209 007b 17       		.uleb128 0x17
 1210 007c 00       		.byte	0
 1211 007d 00       		.byte	0
 1212 007e 09       		.uleb128 0x9
 1213 007f 34       		.uleb128 0x34
 1214 0080 00       		.byte	0
 1215 0081 03       		.uleb128 0x3
 1216 0082 0E       		.uleb128 0xe
 1217 0083 3A       		.uleb128 0x3a
 1218 0084 0B       		.uleb128 0xb
 1219 0085 3B       		.uleb128 0x3b
 1220 0086 05       		.uleb128 0x5
 1221 0087 49       		.uleb128 0x49
 1222 0088 13       		.uleb128 0x13
 1223 0089 02       		.uleb128 0x2
 1224 008a 17       		.uleb128 0x17
 1225 008b 00       		.byte	0
 1226 008c 00       		.byte	0
 1227 008d 0A       		.uleb128 0xa
 1228 008e 05       		.uleb128 0x5
 1229 008f 00       		.byte	0
 1230 0090 03       		.uleb128 0x3
 1231 0091 0E       		.uleb128 0xe
 1232 0092 3A       		.uleb128 0x3a
 1233 0093 0B       		.uleb128 0xb
 1234 0094 3B       		.uleb128 0x3b
 1235 0095 05       		.uleb128 0x5
 1236 0096 49       		.uleb128 0x49
 1237 0097 13       		.uleb128 0x13
 1238 0098 02       		.uleb128 0x2
 1239 0099 18       		.uleb128 0x18
 1240 009a 00       		.byte	0
 1241 009b 00       		.byte	0
 1242 009c 0B       		.uleb128 0xb
 1243 009d 2E       		.uleb128 0x2e
 1244 009e 00       		.byte	0
 1245 009f 3F       		.uleb128 0x3f
 1246 00a0 19       		.uleb128 0x19
 1247 00a1 03       		.uleb128 0x3
 1248 00a2 0E       		.uleb128 0xe
 1249 00a3 3A       		.uleb128 0x3a
 1250 00a4 0B       		.uleb128 0xb
 1251 00a5 3B       		.uleb128 0x3b
 1252 00a6 05       		.uleb128 0x5
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 39


 1253 00a7 27       		.uleb128 0x27
 1254 00a8 19       		.uleb128 0x19
 1255 00a9 49       		.uleb128 0x49
 1256 00aa 13       		.uleb128 0x13
 1257 00ab 11       		.uleb128 0x11
 1258 00ac 01       		.uleb128 0x1
 1259 00ad 12       		.uleb128 0x12
 1260 00ae 06       		.uleb128 0x6
 1261 00af 40       		.uleb128 0x40
 1262 00b0 18       		.uleb128 0x18
 1263 00b1 9742     		.uleb128 0x2117
 1264 00b3 19       		.uleb128 0x19
 1265 00b4 00       		.byte	0
 1266 00b5 00       		.byte	0
 1267 00b6 0C       		.uleb128 0xc
 1268 00b7 2E       		.uleb128 0x2e
 1269 00b8 01       		.byte	0x1
 1270 00b9 3F       		.uleb128 0x3f
 1271 00ba 19       		.uleb128 0x19
 1272 00bb 03       		.uleb128 0x3
 1273 00bc 0E       		.uleb128 0xe
 1274 00bd 3A       		.uleb128 0x3a
 1275 00be 0B       		.uleb128 0xb
 1276 00bf 3B       		.uleb128 0x3b
 1277 00c0 05       		.uleb128 0x5
 1278 00c1 27       		.uleb128 0x27
 1279 00c2 19       		.uleb128 0x19
 1280 00c3 49       		.uleb128 0x49
 1281 00c4 13       		.uleb128 0x13
 1282 00c5 11       		.uleb128 0x11
 1283 00c6 01       		.uleb128 0x1
 1284 00c7 12       		.uleb128 0x12
 1285 00c8 06       		.uleb128 0x6
 1286 00c9 40       		.uleb128 0x40
 1287 00ca 18       		.uleb128 0x18
 1288 00cb 9742     		.uleb128 0x2117
 1289 00cd 19       		.uleb128 0x19
 1290 00ce 01       		.uleb128 0x1
 1291 00cf 13       		.uleb128 0x13
 1292 00d0 00       		.byte	0
 1293 00d1 00       		.byte	0
 1294 00d2 0D       		.uleb128 0xd
 1295 00d3 34       		.uleb128 0x34
 1296 00d4 00       		.byte	0
 1297 00d5 03       		.uleb128 0x3
 1298 00d6 0E       		.uleb128 0xe
 1299 00d7 3A       		.uleb128 0x3a
 1300 00d8 0B       		.uleb128 0xb
 1301 00d9 3B       		.uleb128 0x3b
 1302 00da 05       		.uleb128 0x5
 1303 00db 49       		.uleb128 0x49
 1304 00dc 13       		.uleb128 0x13
 1305 00dd 02       		.uleb128 0x2
 1306 00de 18       		.uleb128 0x18
 1307 00df 00       		.byte	0
 1308 00e0 00       		.byte	0
 1309 00e1 0E       		.uleb128 0xe
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 40


 1310 00e2 898201   		.uleb128 0x4109
 1311 00e5 00       		.byte	0
 1312 00e6 11       		.uleb128 0x11
 1313 00e7 01       		.uleb128 0x1
 1314 00e8 31       		.uleb128 0x31
 1315 00e9 13       		.uleb128 0x13
 1316 00ea 00       		.byte	0
 1317 00eb 00       		.byte	0
 1318 00ec 0F       		.uleb128 0xf
 1319 00ed 2E       		.uleb128 0x2e
 1320 00ee 01       		.byte	0x1
 1321 00ef 3F       		.uleb128 0x3f
 1322 00f0 19       		.uleb128 0x19
 1323 00f1 03       		.uleb128 0x3
 1324 00f2 0E       		.uleb128 0xe
 1325 00f3 3A       		.uleb128 0x3a
 1326 00f4 0B       		.uleb128 0xb
 1327 00f5 3B       		.uleb128 0x3b
 1328 00f6 0B       		.uleb128 0xb
 1329 00f7 27       		.uleb128 0x27
 1330 00f8 19       		.uleb128 0x19
 1331 00f9 11       		.uleb128 0x11
 1332 00fa 01       		.uleb128 0x1
 1333 00fb 12       		.uleb128 0x12
 1334 00fc 06       		.uleb128 0x6
 1335 00fd 40       		.uleb128 0x40
 1336 00fe 18       		.uleb128 0x18
 1337 00ff 9742     		.uleb128 0x2117
 1338 0101 19       		.uleb128 0x19
 1339 0102 01       		.uleb128 0x1
 1340 0103 13       		.uleb128 0x13
 1341 0104 00       		.byte	0
 1342 0105 00       		.byte	0
 1343 0106 10       		.uleb128 0x10
 1344 0107 34       		.uleb128 0x34
 1345 0108 00       		.byte	0
 1346 0109 03       		.uleb128 0x3
 1347 010a 0E       		.uleb128 0xe
 1348 010b 3A       		.uleb128 0x3a
 1349 010c 0B       		.uleb128 0xb
 1350 010d 3B       		.uleb128 0x3b
 1351 010e 0B       		.uleb128 0xb
 1352 010f 49       		.uleb128 0x49
 1353 0110 13       		.uleb128 0x13
 1354 0111 02       		.uleb128 0x2
 1355 0112 17       		.uleb128 0x17
 1356 0113 00       		.byte	0
 1357 0114 00       		.byte	0
 1358 0115 11       		.uleb128 0x11
 1359 0116 898201   		.uleb128 0x4109
 1360 0119 01       		.byte	0x1
 1361 011a 11       		.uleb128 0x11
 1362 011b 01       		.uleb128 0x1
 1363 011c 31       		.uleb128 0x31
 1364 011d 13       		.uleb128 0x13
 1365 011e 01       		.uleb128 0x1
 1366 011f 13       		.uleb128 0x13
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 41


 1367 0120 00       		.byte	0
 1368 0121 00       		.byte	0
 1369 0122 12       		.uleb128 0x12
 1370 0123 8A8201   		.uleb128 0x410a
 1371 0126 00       		.byte	0
 1372 0127 02       		.uleb128 0x2
 1373 0128 18       		.uleb128 0x18
 1374 0129 9142     		.uleb128 0x2111
 1375 012b 18       		.uleb128 0x18
 1376 012c 00       		.byte	0
 1377 012d 00       		.byte	0
 1378 012e 13       		.uleb128 0x13
 1379 012f 34       		.uleb128 0x34
 1380 0130 00       		.byte	0
 1381 0131 03       		.uleb128 0x3
 1382 0132 0E       		.uleb128 0xe
 1383 0133 3A       		.uleb128 0x3a
 1384 0134 0B       		.uleb128 0xb
 1385 0135 3B       		.uleb128 0x3b
 1386 0136 0B       		.uleb128 0xb
 1387 0137 49       		.uleb128 0x49
 1388 0138 13       		.uleb128 0x13
 1389 0139 3F       		.uleb128 0x3f
 1390 013a 19       		.uleb128 0x19
 1391 013b 02       		.uleb128 0x2
 1392 013c 18       		.uleb128 0x18
 1393 013d 00       		.byte	0
 1394 013e 00       		.byte	0
 1395 013f 14       		.uleb128 0x14
 1396 0140 2E       		.uleb128 0x2e
 1397 0141 00       		.byte	0
 1398 0142 3F       		.uleb128 0x3f
 1399 0143 19       		.uleb128 0x19
 1400 0144 3C       		.uleb128 0x3c
 1401 0145 19       		.uleb128 0x19
 1402 0146 6E       		.uleb128 0x6e
 1403 0147 0E       		.uleb128 0xe
 1404 0148 03       		.uleb128 0x3
 1405 0149 0E       		.uleb128 0xe
 1406 014a 3A       		.uleb128 0x3a
 1407 014b 0B       		.uleb128 0xb
 1408 014c 3B       		.uleb128 0x3b
 1409 014d 0B       		.uleb128 0xb
 1410 014e 00       		.byte	0
 1411 014f 00       		.byte	0
 1412 0150 00       		.byte	0
 1413              		.section	.debug_loc,"",%progbits
 1414              	.Ldebug_loc0:
 1415              	.LLST0:
 1416 0000 00000000 		.4byte	.LVL0
 1417 0004 04000000 		.4byte	.LVL1
 1418 0008 0100     		.2byte	0x1
 1419 000a 50       		.byte	0x50
 1420 000b 04000000 		.4byte	.LVL1
 1421 000f 1C000000 		.4byte	.LFE4
 1422 0013 0400     		.2byte	0x4
 1423 0015 F3       		.byte	0xf3
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 42


 1424 0016 01       		.uleb128 0x1
 1425 0017 50       		.byte	0x50
 1426 0018 9F       		.byte	0x9f
 1427 0019 00000000 		.4byte	0
 1428 001d 00000000 		.4byte	0
 1429              	.LLST1:
 1430 0021 04000000 		.4byte	.LVL1
 1431 0025 12000000 		.4byte	.LVL2
 1432 0029 0100     		.2byte	0x1
 1433 002b 50       		.byte	0x50
 1434 002c 00000000 		.4byte	0
 1435 0030 00000000 		.4byte	0
 1436              	.LLST2:
 1437 0034 00000000 		.4byte	.LVL3
 1438 0038 02000000 		.4byte	.LVL4
 1439 003c 0100     		.2byte	0x1
 1440 003e 50       		.byte	0x50
 1441 003f 02000000 		.4byte	.LVL4
 1442 0043 1C000000 		.4byte	.LFE5
 1443 0047 0400     		.2byte	0x4
 1444 0049 F3       		.byte	0xf3
 1445 004a 01       		.uleb128 0x1
 1446 004b 50       		.byte	0x50
 1447 004c 9F       		.byte	0x9f
 1448 004d 00000000 		.4byte	0
 1449 0051 00000000 		.4byte	0
 1450              	.LLST3:
 1451 0055 06000000 		.4byte	.LVL5
 1452 0059 14000000 		.4byte	.LVL6
 1453 005d 0100     		.2byte	0x1
 1454 005f 50       		.byte	0x50
 1455 0060 00000000 		.4byte	0
 1456 0064 00000000 		.4byte	0
 1457              	.LLST4:
 1458 0068 0A000000 		.4byte	.LVL16
 1459 006c 0E000000 		.4byte	.LVL17
 1460 0070 0100     		.2byte	0x1
 1461 0072 53       		.byte	0x53
 1462 0073 00000000 		.4byte	0
 1463 0077 00000000 		.4byte	0
 1464              	.LLST5:
 1465 007b 3C000000 		.4byte	.LVL23
 1466 007f 49000000 		.4byte	.LVL24-1
 1467 0083 0100     		.2byte	0x1
 1468 0085 50       		.byte	0x50
 1469 0086 00000000 		.4byte	0
 1470 008a 00000000 		.4byte	0
 1471              		.section	.debug_aranges,"",%progbits
 1472 0000 B4000000 		.4byte	0xb4
 1473 0004 0200     		.2byte	0x2
 1474 0006 00000000 		.4byte	.Ldebug_info0
 1475 000a 04       		.byte	0x4
 1476 000b 00       		.byte	0
 1477 000c 0000     		.2byte	0
 1478 000e 0000     		.2byte	0
 1479 0010 00000000 		.4byte	.LFB2
 1480 0014 10000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 43


 1481 0018 00000000 		.4byte	.LFB3
 1482 001c 10000000 		.4byte	.LFE3-.LFB3
 1483 0020 00000000 		.4byte	.LFB4
 1484 0024 1C000000 		.4byte	.LFE4-.LFB4
 1485 0028 00000000 		.4byte	.LFB5
 1486 002c 1C000000 		.4byte	.LFE5-.LFB5
 1487 0030 00000000 		.4byte	.LFB6
 1488 0034 0C000000 		.4byte	.LFE6-.LFB6
 1489 0038 00000000 		.4byte	.LFB7
 1490 003c 14000000 		.4byte	.LFE7-.LFB7
 1491 0040 00000000 		.4byte	.LFB9
 1492 0044 0C000000 		.4byte	.LFE9-.LFB9
 1493 0048 00000000 		.4byte	.LFB10
 1494 004c 0C000000 		.4byte	.LFE10-.LFB10
 1495 0050 00000000 		.4byte	.LFB11
 1496 0054 0C000000 		.4byte	.LFE11-.LFB11
 1497 0058 00000000 		.4byte	.LFB12
 1498 005c 0C000000 		.4byte	.LFE12-.LFB12
 1499 0060 00000000 		.4byte	.LFB13
 1500 0064 0C000000 		.4byte	.LFE13-.LFB13
 1501 0068 00000000 		.4byte	.LFB14
 1502 006c 0C000000 		.4byte	.LFE14-.LFB14
 1503 0070 00000000 		.4byte	.LFB15
 1504 0074 0C000000 		.4byte	.LFE15-.LFB15
 1505 0078 00000000 		.4byte	.LFB16
 1506 007c 0C000000 		.4byte	.LFE16-.LFB16
 1507 0080 00000000 		.4byte	.LFB8
 1508 0084 14000000 		.4byte	.LFE8-.LFB8
 1509 0088 00000000 		.4byte	.LFB1
 1510 008c 58000000 		.4byte	.LFE1-.LFB1
 1511 0090 00000000 		.4byte	.LFB0
 1512 0094 1C000000 		.4byte	.LFE0-.LFB0
 1513 0098 00000000 		.4byte	.LFB17
 1514 009c 0C000000 		.4byte	.LFE17-.LFB17
 1515 00a0 00000000 		.4byte	.LFB18
 1516 00a4 0C000000 		.4byte	.LFE18-.LFB18
 1517 00a8 00000000 		.4byte	.LFB19
 1518 00ac 0C000000 		.4byte	.LFE19-.LFB19
 1519 00b0 00000000 		.4byte	0
 1520 00b4 00000000 		.4byte	0
 1521              		.section	.debug_ranges,"",%progbits
 1522              	.Ldebug_ranges0:
 1523 0000 00000000 		.4byte	.LFB2
 1524 0004 10000000 		.4byte	.LFE2
 1525 0008 00000000 		.4byte	.LFB3
 1526 000c 10000000 		.4byte	.LFE3
 1527 0010 00000000 		.4byte	.LFB4
 1528 0014 1C000000 		.4byte	.LFE4
 1529 0018 00000000 		.4byte	.LFB5
 1530 001c 1C000000 		.4byte	.LFE5
 1531 0020 00000000 		.4byte	.LFB6
 1532 0024 0C000000 		.4byte	.LFE6
 1533 0028 00000000 		.4byte	.LFB7
 1534 002c 14000000 		.4byte	.LFE7
 1535 0030 00000000 		.4byte	.LFB9
 1536 0034 0C000000 		.4byte	.LFE9
 1537 0038 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 44


 1538 003c 0C000000 		.4byte	.LFE10
 1539 0040 00000000 		.4byte	.LFB11
 1540 0044 0C000000 		.4byte	.LFE11
 1541 0048 00000000 		.4byte	.LFB12
 1542 004c 0C000000 		.4byte	.LFE12
 1543 0050 00000000 		.4byte	.LFB13
 1544 0054 0C000000 		.4byte	.LFE13
 1545 0058 00000000 		.4byte	.LFB14
 1546 005c 0C000000 		.4byte	.LFE14
 1547 0060 00000000 		.4byte	.LFB15
 1548 0064 0C000000 		.4byte	.LFE15
 1549 0068 00000000 		.4byte	.LFB16
 1550 006c 0C000000 		.4byte	.LFE16
 1551 0070 00000000 		.4byte	.LFB8
 1552 0074 14000000 		.4byte	.LFE8
 1553 0078 00000000 		.4byte	.LFB1
 1554 007c 58000000 		.4byte	.LFE1
 1555 0080 00000000 		.4byte	.LFB0
 1556 0084 1C000000 		.4byte	.LFE0
 1557 0088 00000000 		.4byte	.LFB17
 1558 008c 0C000000 		.4byte	.LFE17
 1559 0090 00000000 		.4byte	.LFB18
 1560 0094 0C000000 		.4byte	.LFE18
 1561 0098 00000000 		.4byte	.LFB19
 1562 009c 0C000000 		.4byte	.LFE19
 1563 00a0 00000000 		.4byte	0
 1564 00a4 00000000 		.4byte	0
 1565              		.section	.debug_line,"",%progbits
 1566              	.Ldebug_line0:
 1567 0000 D3010000 		.section	.debug_str,"MS",%progbits,1
 1567      02005500 
 1567      00000201 
 1567      FB0E0D00 
 1567      01010101 
 1568              	.LASF18:
 1569 0000 50574D5F 		.ascii	"PWM_leftmotor_SetCompareMode1\000"
 1569      6C656674 
 1569      6D6F746F 
 1569      725F5365 
 1569      74436F6D 
 1570              	.LASF48:
 1571 001e 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_leftmotor.c\000"
 1571      72617465 
 1571      645F536F 
 1571      75726365 
 1571      5C50536F 
 1572              	.LASF19:
 1573 0045 50574D5F 		.ascii	"PWM_leftmotor_SetCompareMode2\000"
 1573      6C656674 
 1573      6D6F746F 
 1573      725F5365 
 1573      74436F6D 
 1574              	.LASF44:
 1575 0063 50574D5F 		.ascii	"PWM_leftmotor_ReadPeriod\000"
 1575      6C656674 
 1575      6D6F746F 
 1575      725F5265 
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 45


 1575      61645065 
 1576              	.LASF50:
 1577 007c 50574D5F 		.ascii	"PWM_leftmotor_ReadControlRegister\000"
 1577      6C656674 
 1577      6D6F746F 
 1577      725F5265 
 1577      6164436F 
 1578              	.LASF21:
 1579 009e 636F6D70 		.ascii	"comparemodemasked\000"
 1579      6172656D 
 1579      6F64656D 
 1579      61736B65 
 1579      6400
 1580              	.LASF38:
 1581 00b0 50574D5F 		.ascii	"PWM_leftmotor_Init\000"
 1581      6C656674 
 1581      6D6F746F 
 1581      725F496E 
 1581      697400
 1582              	.LASF25:
 1583 00c3 70657269 		.ascii	"period\000"
 1583      6F6400
 1584              	.LASF42:
 1585 00ca 50574D5F 		.ascii	"PWM_leftmotor_ReadCompare1\000"
 1585      6C656674 
 1585      6D6F746F 
 1585      725F5265 
 1585      6164436F 
 1586              	.LASF43:
 1587 00e5 50574D5F 		.ascii	"PWM_leftmotor_ReadCompare2\000"
 1587      6C656674 
 1587      6D6F746F 
 1587      725F5265 
 1587      6164436F 
 1588              	.LASF3:
 1589 0100 73686F72 		.ascii	"short unsigned int\000"
 1589      7420756E 
 1589      7369676E 
 1589      65642069 
 1589      6E7400
 1590              	.LASF16:
 1591 0113 50574D5F 		.ascii	"PWM_leftmotor_Enable\000"
 1591      6C656674 
 1591      6D6F746F 
 1591      725F456E 
 1591      61626C65 
 1592              	.LASF26:
 1593 0128 50574D5F 		.ascii	"PWM_leftmotor_WriteCompare1\000"
 1593      6C656674 
 1593      6D6F746F 
 1593      725F5772 
 1593      69746543 
 1594              	.LASF9:
 1595 0144 666C6F61 		.ascii	"float\000"
 1595      7400
 1596              	.LASF23:
 1597 014a 636F756E 		.ascii	"counter\000"
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 46


 1597      74657200 
 1598              	.LASF0:
 1599 0152 7369676E 		.ascii	"signed char\000"
 1599      65642063 
 1599      68617200 
 1600              	.LASF1:
 1601 015e 756E7369 		.ascii	"unsigned char\000"
 1601      676E6564 
 1601      20636861 
 1601      7200
 1602              	.LASF47:
 1603 016c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1603      43313120 
 1603      352E342E 
 1603      31203230 
 1603      31363036 
 1604 019f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1604      20726576 
 1604      6973696F 
 1604      6E203233 
 1604      37373135 
 1605 01d2 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1605      66756E63 
 1605      74696F6E 
 1605      2D736563 
 1605      74696F6E 
 1606              	.LASF28:
 1607 01fa 50574D5F 		.ascii	"PWM_leftmotor_WriteCompare2\000"
 1607      6C656674 
 1607      6D6F746F 
 1607      725F5772 
 1607      69746543 
 1608              	.LASF36:
 1609 0216 50574D5F 		.ascii	"PWM_leftmotor_ReadCapture\000"
 1609      6C656674 
 1609      6D6F746F 
 1609      725F5265 
 1609      61644361 
 1610              	.LASF5:
 1611 0230 6C6F6E67 		.ascii	"long unsigned int\000"
 1611      20756E73 
 1611      69676E65 
 1611      6420696E 
 1611      7400
 1612              	.LASF12:
 1613 0242 75696E74 		.ascii	"uint8\000"
 1613      3800
 1614              	.LASF35:
 1615 0248 636F6E74 		.ascii	"control\000"
 1615      726F6C00 
 1616              	.LASF34:
 1617 0250 50574D5F 		.ascii	"PWM_leftmotor_WriteControlRegister\000"
 1617      6C656674 
 1617      6D6F746F 
 1617      725F5772 
 1617      69746543 
 1618              	.LASF22:
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 47


 1619 0273 50574D5F 		.ascii	"PWM_leftmotor_WriteCounter\000"
 1619      6C656674 
 1619      6D6F746F 
 1619      725F5772 
 1619      69746543 
 1620              	.LASF32:
 1621 028e 50574D5F 		.ascii	"PWM_leftmotor_ReadStatusRegister\000"
 1621      6C656674 
 1621      6D6F746F 
 1621      725F5265 
 1621      61645374 
 1622              	.LASF10:
 1623 02af 646F7562 		.ascii	"double\000"
 1623      6C6500
 1624              	.LASF17:
 1625 02b6 50574D5F 		.ascii	"PWM_leftmotor_Stop\000"
 1625      6C656674 
 1625      6D6F746F 
 1625      725F5374 
 1625      6F7000
 1626              	.LASF29:
 1627 02c9 50574D5F 		.ascii	"PWM_leftmotor_SetInterruptMode\000"
 1627      6C656674 
 1627      6D6F746F 
 1627      725F5365 
 1627      74496E74 
 1628              	.LASF31:
 1629 02e8 50574D5F 		.ascii	"PWM_leftmotor_ReadCounter\000"
 1629      6C656674 
 1629      6D6F746F 
 1629      725F5265 
 1629      6164436F 
 1630              	.LASF45:
 1631 0302 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1631      74657243 
 1631      72697469 
 1631      63616C53 
 1631      65637469 
 1632              	.LASF8:
 1633 0319 756E7369 		.ascii	"unsigned int\000"
 1633      676E6564 
 1633      20696E74 
 1633      00
 1634              	.LASF7:
 1635 0326 6C6F6E67 		.ascii	"long long unsigned int\000"
 1635      206C6F6E 
 1635      6720756E 
 1635      7369676E 
 1635      65642069 
 1636              	.LASF33:
 1637 033d 72657375 		.ascii	"result\000"
 1637      6C7400
 1638              	.LASF49:
 1639 0344 483A5C70 		.ascii	"H:\\project-project_group_15\\WorkspacemotorBT1\\Ha"
 1639      726F6A65 
 1639      63742D70 
 1639      726F6A65 
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 48


 1639      63745F67 
 1640 0374 72647761 		.ascii	"rdware2.cydsn\000"
 1640      7265322E 
 1640      63796473 
 1640      6E00
 1641              	.LASF13:
 1642 0382 72656738 		.ascii	"reg8\000"
 1642      00
 1643              	.LASF51:
 1644 0387 50574D5F 		.ascii	"PWM_leftmotor_initVar\000"
 1644      6C656674 
 1644      6D6F746F 
 1644      725F696E 
 1644      69745661 
 1645              	.LASF15:
 1646 039d 73697A65 		.ascii	"sizetype\000"
 1646      74797065 
 1646      00
 1647              	.LASF6:
 1648 03a6 6C6F6E67 		.ascii	"long long int\000"
 1648      206C6F6E 
 1648      6720696E 
 1648      7400
 1649              	.LASF30:
 1650 03b4 696E7465 		.ascii	"interruptMode\000"
 1650      72727570 
 1650      744D6F64 
 1650      6500
 1651              	.LASF2:
 1652 03c2 73686F72 		.ascii	"short int\000"
 1652      7420696E 
 1652      7400
 1653              	.LASF24:
 1654 03cc 50574D5F 		.ascii	"PWM_leftmotor_WritePeriod\000"
 1654      6C656674 
 1654      6D6F746F 
 1654      725F5772 
 1654      69746550 
 1655              	.LASF39:
 1656 03e6 6374726C 		.ascii	"ctrl\000"
 1656      00
 1657              	.LASF46:
 1658 03eb 43794578 		.ascii	"CyExitCriticalSection\000"
 1658      69744372 
 1658      69746963 
 1658      616C5365 
 1658      6374696F 
 1659              	.LASF20:
 1660 0401 636F6D70 		.ascii	"comparemode\000"
 1660      6172656D 
 1660      6F646500 
 1661              	.LASF40:
 1662 040d 50574D5F 		.ascii	"PWM_leftmotor_interruptState\000"
 1662      6C656674 
 1662      6D6F746F 
 1662      725F696E 
 1662      74657272 
ARM GAS  C:\Users\yhon106\AppData\Local\Temp\ccXXAbnk.s 			page 49


 1663              	.LASF4:
 1664 042a 6C6F6E67 		.ascii	"long int\000"
 1664      20696E74 
 1664      00
 1665              	.LASF11:
 1666 0433 63686172 		.ascii	"char\000"
 1666      00
 1667              	.LASF14:
 1668 0438 6C6F6E67 		.ascii	"long double\000"
 1668      20646F75 
 1668      626C6500 
 1669              	.LASF37:
 1670 0444 50574D5F 		.ascii	"PWM_leftmotor_ClearFIFO\000"
 1670      6C656674 
 1670      6D6F746F 
 1670      725F436C 
 1670      65617246 
 1671              	.LASF41:
 1672 045c 50574D5F 		.ascii	"PWM_leftmotor_Start\000"
 1672      6C656674 
 1672      6D6F746F 
 1672      725F5374 
 1672      61727400 
 1673              	.LASF27:
 1674 0470 636F6D70 		.ascii	"compare\000"
 1674      61726500 
 1675              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
