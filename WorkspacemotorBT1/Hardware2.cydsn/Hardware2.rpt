Loading plugins phase: Elapsed time ==> 0s.357ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p \\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\Hardware2.cyprj -d CY8C5888LTI-LP097 -s \\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "Pin_5.analog_0" on TopDesign is unconnected.
 * \\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\TopDesign\TopDesign.cysch (Signal: Net_672)
 * \\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\TopDesign\TopDesign.cysch (Shape_49.1)

ADD: sdb.M0065: information: Analog terminal "ADC_SAR_Seq_1.AIN_10" on TopDesign is unconnected.
 * \\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\TopDesign\TopDesign.cysch (Signal: Net_932)
 * \\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\TopDesign\TopDesign.cysch (Shape_154.14)
 * \\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\TopDesign\TopDesign.cysch (Shape_158)
 * \\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\TopDesign\TopDesign.cysch (Shape_185)

ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_10 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.469ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.134ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  Hardware2.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\Hardware2.cyprj -dcpsoc3 Hardware2.v -verilog
======================================================================

======================================================================
Compiling:  Hardware2.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\Hardware2.cyprj -dcpsoc3 Hardware2.v -verilog
======================================================================

======================================================================
Compiling:  Hardware2.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\Hardware2.cyprj -dcpsoc3 -verilog Hardware2.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Sun Sep 25 16:35:52 2022


======================================================================
Compiling:  Hardware2.v
Program  :   vpp
Options  :    -yv2 -q10 Hardware2.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Sun Sep 25 16:35:52 2022

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\and_v1_0\and_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'Hardware2.ctl'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 947, col 46):  Note: Substituting module 'sub_vi_vv' for '-'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 977, col 46):  Note: Substituting module 'add_vi_vv' for '+'.
Hardware2.v (line 1671, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  Hardware2.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\Hardware2.cyprj -dcpsoc3 -verilog Hardware2.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Sun Sep 25 16:35:52 2022

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking '\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\codegentemp\Hardware2.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking '\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\codegentemp\Hardware2.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\and_v1_0\and_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  Hardware2.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\Hardware2.cyprj -dcpsoc3 -verilog Hardware2.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Sun Sep 25 16:35:53 2022

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking '\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\codegentemp\Hardware2.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking '\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\codegentemp\Hardware2.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\and_v1_0\and_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\PWM_rightmotor:PWMUDB:km_run\
	\PWM_rightmotor:PWMUDB:capt_rising\
	\PWM_rightmotor:PWMUDB:capt_falling\
	\PWM_rightmotor:PWMUDB:trig_rise\
	\PWM_rightmotor:PWMUDB:trig_fall\
	\PWM_rightmotor:PWMUDB:sc_kill\
	\PWM_rightmotor:PWMUDB:min_kill\
	\PWM_rightmotor:PWMUDB:km_tc\
	\PWM_rightmotor:PWMUDB:db_tc\
	\PWM_rightmotor:PWMUDB:dith_sel\
	\PWM_rightmotor:Net_101\
	\PWM_rightmotor:Net_96\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_31\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_30\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_29\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_28\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_27\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_26\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_25\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_24\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_23\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_22\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_21\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_20\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_19\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_18\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_17\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_16\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_15\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_14\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_13\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_12\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_11\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_10\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_9\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_8\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_7\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_6\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_5\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_4\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_3\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_2\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_1\
	\PWM_rightmotor:PWMUDB:MODULE_2:b_0\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_31\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_30\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_29\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_28\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_27\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_26\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_25\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_24\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_31\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_30\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_29\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_28\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_27\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_26\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_25\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_24\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_23\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_22\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_21\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_20\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_19\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_18\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_17\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_16\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_15\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_14\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_13\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_12\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_11\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_10\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_9\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_8\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_7\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_6\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_5\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_4\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_3\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_2\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_1\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:b_0\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_31\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_30\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_29\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_28\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_27\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_26\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_25\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_24\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_23\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_22\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_21\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_20\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_19\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_18\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_17\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_16\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_15\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_14\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_13\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_12\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_11\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_10\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_9\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_8\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_7\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_6\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_5\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_4\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_3\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_2\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_638
	Net_632
	Net_631
	\PWM_rightmotor:Net_113\
	\PWM_rightmotor:Net_107\
	\PWM_rightmotor:Net_114\
	\USBUART_1:dma_complete_0\
	\USBUART_1:Net_1922\
	\USBUART_1:dma_complete_1\
	\USBUART_1:Net_1921\
	\USBUART_1:dma_complete_2\
	\USBUART_1:Net_1920\
	\USBUART_1:dma_complete_3\
	\USBUART_1:Net_1919\
	\USBUART_1:dma_complete_4\
	\USBUART_1:Net_1918\
	\USBUART_1:dma_complete_5\
	\USBUART_1:Net_1917\
	\USBUART_1:dma_complete_6\
	\USBUART_1:Net_1916\
	\USBUART_1:dma_complete_7\
	\USBUART_1:Net_1915\
	\QuadDec_1:Net_1129\
	\QuadDec_1:Cnt16:Net_82\
	\QuadDec_1:Cnt16:Net_95\
	\QuadDec_1:Cnt16:Net_91\
	\QuadDec_1:Cnt16:Net_102\
	\QuadDec_1:Cnt16:CounterUDB:ctrl_cmod_2\
	\QuadDec_1:Cnt16:CounterUDB:ctrl_cmod_1\
	\QuadDec_1:Cnt16:CounterUDB:ctrl_cmod_0\
	\PWM_leftmotor:PWMUDB:km_run\
	\PWM_leftmotor:PWMUDB:capt_rising\
	\PWM_leftmotor:PWMUDB:capt_falling\
	\PWM_leftmotor:PWMUDB:trig_rise\
	\PWM_leftmotor:PWMUDB:trig_fall\
	\PWM_leftmotor:PWMUDB:sc_kill\
	\PWM_leftmotor:PWMUDB:min_kill\
	\PWM_leftmotor:PWMUDB:km_tc\
	\PWM_leftmotor:PWMUDB:db_tc\
	\PWM_leftmotor:PWMUDB:dith_sel\
	\PWM_leftmotor:Net_101\
	\PWM_leftmotor:Net_96\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_31\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_30\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_29\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_28\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_27\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_26\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_25\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_24\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_23\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_22\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_21\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_20\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_19\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_18\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_17\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_16\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_15\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_14\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_13\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_12\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_11\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_10\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_9\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_8\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_7\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_6\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_5\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_4\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_3\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_2\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_1\
	\PWM_leftmotor:PWMUDB:MODULE_3:b_0\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_31\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_30\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_29\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_28\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_27\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_26\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_25\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_24\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_31\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_30\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_29\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_28\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_27\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_26\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_25\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_24\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_23\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_22\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_21\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_20\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_19\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_18\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_17\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_16\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_15\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_14\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_13\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_12\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_11\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_10\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_9\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_8\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_7\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_6\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_5\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_4\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_3\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_2\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_1\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:b_0\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_31\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_30\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_29\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_28\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_27\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_26\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_25\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_24\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_23\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_22\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_21\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_20\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_19\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_18\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_17\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_16\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_15\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_14\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_13\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_12\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_11\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_10\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_9\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_8\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_7\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_6\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_5\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_4\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_3\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_2\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_661
	Net_655
	Net_654
	\PWM_leftmotor:Net_113\
	\PWM_leftmotor:Net_107\
	\PWM_leftmotor:Net_114\
	Net_695
	\ADC_SAR_Seq_1:SAR:Net_221\
	\ADC_SAR_Seq_1:SAR:Net_383\
	\ADC_SAR_Seq_1:bSAR_SEQ:sw_soc\
	\ADC_SAR_Seq_1:Net_3905\
	\ADC_SAR_Seq_1:Net_3867\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xneq\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xlt\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xlte\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xgt\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xgte\
	\ADC_SAR_Seq_1:MODULE_1:lt\
	\ADC_SAR_Seq_1:MODULE_1:gt\
	\ADC_SAR_Seq_1:MODULE_1:gte\
	\ADC_SAR_Seq_1:MODULE_1:lte\
	\ADC_SAR_Seq_1:MODULE_1:neq\

    Synthesized names
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_31\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_30\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_29\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_28\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_27\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_26\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_25\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_24\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_23\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_22\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_21\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_20\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_19\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_18\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_17\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_16\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_15\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_14\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_13\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_12\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_11\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_10\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_9\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_8\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_7\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_6\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_5\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_4\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_3\
	\PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_2\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_31\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_30\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_29\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_28\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_27\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_26\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_25\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_24\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_23\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_22\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_21\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_20\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_19\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_18\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_17\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_16\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_15\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_14\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_13\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_12\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_11\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_10\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_9\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_8\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_7\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_6\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_5\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_4\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_3\
	\PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_2\

Deleted 300 User equations/components.
Deleted 60 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \PWM_rightmotor:PWMUDB:hwCapture\ to zero
Aliasing \PWM_rightmotor:PWMUDB:trig_out\ to one
Aliasing \PWM_rightmotor:PWMUDB:runmode_enable\\R\ to zero
Aliasing \PWM_rightmotor:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_rightmotor:PWMUDB:ltch_kill_reg\\R\ to zero
Aliasing \PWM_rightmotor:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_rightmotor:PWMUDB:min_kill_reg\\R\ to zero
Aliasing \PWM_rightmotor:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_rightmotor:PWMUDB:final_kill\ to one
Aliasing \PWM_rightmotor:PWMUDB:dith_count_1\\R\ to zero
Aliasing \PWM_rightmotor:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_rightmotor:PWMUDB:dith_count_0\\R\ to zero
Aliasing \PWM_rightmotor:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_rightmotor:PWMUDB:reset\ to zero
Aliasing \PWM_rightmotor:PWMUDB:status_6\ to zero
Aliasing \PWM_rightmotor:PWMUDB:status_4\ to zero
Aliasing \PWM_rightmotor:PWMUDB:cmp1_status_reg\\R\ to zero
Aliasing \PWM_rightmotor:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_rightmotor:PWMUDB:cmp2_status_reg\\R\ to zero
Aliasing \PWM_rightmotor:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_rightmotor:PWMUDB:final_kill_reg\\R\ to zero
Aliasing \PWM_rightmotor:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_rightmotor:PWMUDB:cs_addr_0\ to zero
Aliasing \PWM_rightmotor:PWMUDB:pwm_temp\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_23\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_22\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_21\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_20\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_19\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_18\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_17\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_16\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_15\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_14\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_13\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_12\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_11\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_10\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_9\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_8\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_7\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_6\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_5\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_4\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_3\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_2\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to one
Aliasing tmpOE__Pin_2_net_0 to one
Aliasing tmpOE__Pin_1_net_0 to one
Aliasing \USBUART_1:tmpOE__Dm_net_0\ to one
Aliasing \USBUART_1:tmpOE__Dp_net_0\ to one
Aliasing tmpOE__Timer_net_0 to one
Aliasing \QuadDec_1:Cnt16:CounterUDB:ctrl_capmode_1\ to zero
Aliasing \QuadDec_1:Cnt16:CounterUDB:ctrl_capmode_0\ to zero
Aliasing \QuadDec_1:Cnt16:CounterUDB:capt_rising\ to zero
Aliasing \QuadDec_1:Cnt16:CounterUDB:underflow\ to \QuadDec_1:Cnt16:CounterUDB:status_1\
Aliasing \QuadDec_1:Cnt16:CounterUDB:tc_i\ to \QuadDec_1:Cnt16:CounterUDB:reload_tc\
Aliasing \QuadDec_1:bQuadDec:status_4\ to zero
Aliasing \QuadDec_1:bQuadDec:status_5\ to zero
Aliasing \QuadDec_1:bQuadDec:status_6\ to zero
Aliasing \QuadDec_1:Net_1229\ to one
Aliasing tmpOE__ENCO1_net_0 to one
Aliasing tmpOE__ENCO2_net_0 to one
Aliasing \PWM_leftmotor:PWMUDB:hwCapture\ to zero
Aliasing \PWM_leftmotor:PWMUDB:trig_out\ to one
Aliasing \PWM_leftmotor:PWMUDB:runmode_enable\\R\ to zero
Aliasing \PWM_leftmotor:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_leftmotor:PWMUDB:ltch_kill_reg\\R\ to zero
Aliasing \PWM_leftmotor:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_leftmotor:PWMUDB:min_kill_reg\\R\ to zero
Aliasing \PWM_leftmotor:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_leftmotor:PWMUDB:final_kill\ to one
Aliasing \PWM_leftmotor:PWMUDB:dith_count_1\\R\ to zero
Aliasing \PWM_leftmotor:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_leftmotor:PWMUDB:dith_count_0\\R\ to zero
Aliasing \PWM_leftmotor:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_leftmotor:PWMUDB:reset\ to zero
Aliasing \PWM_leftmotor:PWMUDB:status_6\ to zero
Aliasing \PWM_leftmotor:PWMUDB:status_4\ to zero
Aliasing \PWM_leftmotor:PWMUDB:cmp1_status_reg\\R\ to zero
Aliasing \PWM_leftmotor:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_leftmotor:PWMUDB:cmp2_status_reg\\R\ to zero
Aliasing \PWM_leftmotor:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_leftmotor:PWMUDB:final_kill_reg\\R\ to zero
Aliasing \PWM_leftmotor:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_leftmotor:PWMUDB:cs_addr_0\ to zero
Aliasing \PWM_leftmotor:PWMUDB:pwm_temp\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_23\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_22\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_21\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_20\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_19\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_18\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_17\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_16\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_15\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_14\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_13\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_12\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_11\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_10\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_9\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_8\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_7\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_6\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_5\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_4\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_3\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_2\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\ to one
Aliasing tmpOE__Pin_3_net_0 to one
Aliasing tmpOE__Pin_4_net_0 to one
Aliasing tmpOE__Pin_Q5_net_0 to one
Aliasing tmpOE__Pin_5_net_0 to one
Aliasing tmpOE__Pin_Q6_net_0 to one
Aliasing \Timer_2:Net_260\ to zero
Aliasing Net_694 to zero
Aliasing \Timer_2:Net_102\ to one
Aliasing tmpOE__LED_net_0 to one
Aliasing tmpOE__LED_1_net_0 to one
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_enable\ to one
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:tmpOE__Bypass_net_0\ to one
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_7\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_6\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_5\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_4\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_3\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_2\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_1\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_0\ to Net_1029
Aliasing \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_0\ to one
Aliasing tmpOE__Pin_Q2_net_0 to one
Aliasing tmpOE__Pin_Q3_net_0 to one
Aliasing tmpOE__Pin_Q4_net_0 to one
Aliasing \PWM_rightmotor:PWMUDB:min_kill_reg\\D\ to one
Aliasing \PWM_rightmotor:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_rightmotor:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_rightmotor:PWMUDB:ltch_kill_reg\\D\ to one
Aliasing \PWM_rightmotor:PWMUDB:tc_i_reg\\D\ to \PWM_rightmotor:PWMUDB:status_2\
Aliasing \QuadDec_1:Cnt16:CounterUDB:prevCapture\\D\ to zero
Aliasing \QuadDec_1:Cnt16:CounterUDB:cmp_out_reg_i\\D\ to \QuadDec_1:Cnt16:CounterUDB:prevCompare\\D\
Aliasing \PWM_leftmotor:PWMUDB:min_kill_reg\\D\ to one
Aliasing \PWM_leftmotor:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_leftmotor:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_leftmotor:PWMUDB:ltch_kill_reg\\D\ to one
Aliasing \PWM_leftmotor:PWMUDB:tc_i_reg\\D\ to \PWM_leftmotor:PWMUDB:status_2\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_SAR_Seq_1:MODIN1_5\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_SAR_Seq_1:MODIN1_4\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_SAR_Seq_1:MODIN1_3\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_SAR_Seq_1:MODIN1_2\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_SAR_Seq_1:MODIN1_1\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_SAR_Seq_1:MODIN1_0\
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:state_2\\D\ to zero
Removing Lhs of wire \PWM_rightmotor:PWMUDB:ctrl_enable\[16] = \PWM_rightmotor:PWMUDB:control_7\[8]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:ctrl_cmpmode2_2\[17] = \PWM_rightmotor:PWMUDB:control_5\[10]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:ctrl_cmpmode2_1\[18] = \PWM_rightmotor:PWMUDB:control_4\[11]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:ctrl_cmpmode2_0\[19] = \PWM_rightmotor:PWMUDB:control_3\[12]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:ctrl_cmpmode1_2\[20] = \PWM_rightmotor:PWMUDB:control_2\[13]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:ctrl_cmpmode1_1\[21] = \PWM_rightmotor:PWMUDB:control_1\[14]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:ctrl_cmpmode1_0\[22] = \PWM_rightmotor:PWMUDB:control_0\[15]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:hwCapture\[26] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:hwEnable\[27] = \PWM_rightmotor:PWMUDB:control_7\[8]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:trig_out\[31] = one[4]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:runmode_enable\\R\[33] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:runmode_enable\\S\[34] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:final_enable\[35] = \PWM_rightmotor:PWMUDB:runmode_enable\[32]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:ltch_kill_reg\\R\[39] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:ltch_kill_reg\\S\[40] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:min_kill_reg\\R\[41] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:min_kill_reg\\S\[42] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:final_kill\[45] = one[4]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_1\[49] = \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_1\[290]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:add_vi_vv_MODGEN_2_0\[51] = \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_0\[291]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:dith_count_1\\R\[52] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:dith_count_1\\S\[53] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:dith_count_0\\R\[54] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:dith_count_0\\S\[55] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:reset\[58] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:status_6\[59] = zero[7]
Removing Rhs of wire \PWM_rightmotor:PWMUDB:status_5\[60] = \PWM_rightmotor:PWMUDB:final_kill_reg\[75]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:status_4\[61] = zero[7]
Removing Rhs of wire \PWM_rightmotor:PWMUDB:status_3\[62] = \PWM_rightmotor:PWMUDB:fifo_full\[82]
Removing Rhs of wire \PWM_rightmotor:PWMUDB:status_1\[64] = \PWM_rightmotor:PWMUDB:cmp2_status_reg\[74]
Removing Rhs of wire \PWM_rightmotor:PWMUDB:status_0\[65] = \PWM_rightmotor:PWMUDB:cmp1_status_reg\[73]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:cmp1_status_reg\\R\[76] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:cmp1_status_reg\\S\[77] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:cmp2_status_reg\\R\[78] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:cmp2_status_reg\\S\[79] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:final_kill_reg\\R\[80] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:final_kill_reg\\S\[81] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:cs_addr_2\[83] = \PWM_rightmotor:PWMUDB:tc_i\[37]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:cs_addr_1\[84] = \PWM_rightmotor:PWMUDB:runmode_enable\[32]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:cs_addr_0\[85] = zero[7]
Removing Rhs of wire Net_277[129] = \PWM_rightmotor:PWMUDB:pwm1_i_reg\[122]
Removing Rhs of wire Net_415[130] = \PWM_rightmotor:PWMUDB:pwm2_i_reg\[124]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:pwm_temp\[131] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_23\[172] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_22\[173] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_21\[174] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_20\[175] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_19\[176] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_18\[177] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_17\[178] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_16\[179] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_15\[180] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_14\[181] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_13\[182] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_12\[183] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_11\[184] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_10\[185] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_9\[186] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_8\[187] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_7\[188] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_6\[189] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_5\[190] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_4\[191] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_3\[192] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_2\[193] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_1\[194] = \PWM_rightmotor:PWMUDB:MODIN3_1\[195]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODIN3_1\[195] = \PWM_rightmotor:PWMUDB:dith_count_1\[48]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:a_0\[196] = \PWM_rightmotor:PWMUDB:MODIN3_0\[197]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODIN3_0\[197] = \PWM_rightmotor:PWMUDB:dith_count_0\[50]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[329] = one[4]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[330] = one[4]
Removing Lhs of wire tmpOE__Pin_2_net_0[339] = one[4]
Removing Lhs of wire tmpOE__Pin_1_net_0[345] = one[4]
Removing Lhs of wire \USBUART_1:tmpOE__Dm_net_0\[353] = one[4]
Removing Lhs of wire \USBUART_1:tmpOE__Dp_net_0\[360] = one[4]
Removing Lhs of wire tmpOE__Timer_net_0[412] = one[4]
Removing Rhs of wire \QuadDec_1:Net_1275\[419] = \QuadDec_1:Cnt16:Net_49\[420]
Removing Rhs of wire \QuadDec_1:Net_1275\[419] = \QuadDec_1:Cnt16:CounterUDB:tc_reg_i\[477]
Removing Lhs of wire \QuadDec_1:Cnt16:Net_89\[422] = \QuadDec_1:Net_1251\[423]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:ctrl_capmode_1\[433] = zero[7]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:ctrl_capmode_0\[434] = zero[7]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:ctrl_enable\[446] = \QuadDec_1:Cnt16:CounterUDB:control_7\[438]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:capt_rising\[448] = zero[7]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:capt_falling\[449] = \QuadDec_1:Cnt16:CounterUDB:prevCapture\[447]
Removing Rhs of wire \QuadDec_1:Net_1260\[453] = \QuadDec_1:bQuadDec:state_2\[591]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:final_enable\[455] = \QuadDec_1:Cnt16:CounterUDB:control_7\[438]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:counter_enable\[456] = \QuadDec_1:Cnt16:CounterUDB:control_7\[438]
Removing Rhs of wire \QuadDec_1:Cnt16:CounterUDB:status_0\[457] = \QuadDec_1:Cnt16:CounterUDB:cmp_out_status\[458]
Removing Rhs of wire \QuadDec_1:Cnt16:CounterUDB:status_1\[459] = \QuadDec_1:Cnt16:CounterUDB:per_zero\[460]
Removing Rhs of wire \QuadDec_1:Cnt16:CounterUDB:status_2\[461] = \QuadDec_1:Cnt16:CounterUDB:overflow_status\[462]
Removing Rhs of wire \QuadDec_1:Cnt16:CounterUDB:status_3\[463] = \QuadDec_1:Cnt16:CounterUDB:underflow_status\[464]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:status_4\[465] = \QuadDec_1:Cnt16:CounterUDB:hwCapture\[451]
Removing Rhs of wire \QuadDec_1:Cnt16:CounterUDB:status_5\[466] = \QuadDec_1:Cnt16:CounterUDB:fifo_full\[467]
Removing Rhs of wire \QuadDec_1:Cnt16:CounterUDB:status_6\[468] = \QuadDec_1:Cnt16:CounterUDB:fifo_nempty\[469]
Removing Rhs of wire \QuadDec_1:Cnt16:CounterUDB:overflow\[471] = \QuadDec_1:Cnt16:CounterUDB:per_FF\[472]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:underflow\[473] = \QuadDec_1:Cnt16:CounterUDB:status_1\[459]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:tc_i\[476] = \QuadDec_1:Cnt16:CounterUDB:reload_tc\[454]
Removing Rhs of wire \QuadDec_1:Cnt16:CounterUDB:cmp_out_i\[478] = \QuadDec_1:Cnt16:CounterUDB:cmp_equal\[479]
Removing Rhs of wire \QuadDec_1:Net_1264\[482] = \QuadDec_1:Cnt16:CounterUDB:cmp_out_reg_i\[481]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:dp_dir\[486] = \QuadDec_1:Net_1251\[423]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:cs_addr_2\[487] = \QuadDec_1:Net_1251\[423]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:cs_addr_1\[488] = \QuadDec_1:Cnt16:CounterUDB:count_enable\[485]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:cs_addr_0\[489] = \QuadDec_1:Cnt16:CounterUDB:reload\[452]
Removing Lhs of wire \QuadDec_1:Net_1290\[566] = \QuadDec_1:Net_1275\[419]
Removing Lhs of wire \QuadDec_1:bQuadDec:index_filt\[589] = \QuadDec_1:Net_1232\[590]
Removing Lhs of wire \QuadDec_1:Net_1232\[590] = one[4]
Removing Rhs of wire \QuadDec_1:bQuadDec:error\[592] = \QuadDec_1:bQuadDec:state_3\[593]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_0\[596] = \QuadDec_1:Net_530\[597]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_1\[598] = \QuadDec_1:Net_611\[599]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_2\[600] = \QuadDec_1:Net_1260\[453]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_3\[601] = \QuadDec_1:bQuadDec:error\[592]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_4\[602] = zero[7]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_5\[603] = zero[7]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_6\[604] = zero[7]
Removing Lhs of wire \QuadDec_1:Net_1229\[609] = one[4]
Removing Lhs of wire \QuadDec_1:Net_1272\[610] = \QuadDec_1:Net_1264\[482]
Removing Lhs of wire tmpOE__ENCO1_net_0[613] = one[4]
Removing Lhs of wire tmpOE__ENCO2_net_0[618] = one[4]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:ctrl_enable\[636] = \PWM_leftmotor:PWMUDB:control_7\[628]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:ctrl_cmpmode2_2\[637] = \PWM_leftmotor:PWMUDB:control_5\[630]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:ctrl_cmpmode2_1\[638] = \PWM_leftmotor:PWMUDB:control_4\[631]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:ctrl_cmpmode2_0\[639] = \PWM_leftmotor:PWMUDB:control_3\[632]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:ctrl_cmpmode1_2\[640] = \PWM_leftmotor:PWMUDB:control_2\[633]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:ctrl_cmpmode1_1\[641] = \PWM_leftmotor:PWMUDB:control_1\[634]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:ctrl_cmpmode1_0\[642] = \PWM_leftmotor:PWMUDB:control_0\[635]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:hwCapture\[646] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:hwEnable\[647] = \PWM_leftmotor:PWMUDB:control_7\[628]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:trig_out\[651] = one[4]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:runmode_enable\\R\[653] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:runmode_enable\\S\[654] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:final_enable\[655] = \PWM_leftmotor:PWMUDB:runmode_enable\[652]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:ltch_kill_reg\\R\[659] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:ltch_kill_reg\\S\[660] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:min_kill_reg\\R\[661] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:min_kill_reg\\S\[662] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:final_kill\[665] = one[4]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_1\[669] = \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_1\[910]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:add_vi_vv_MODGEN_3_0\[671] = \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_0\[911]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:dith_count_1\\R\[672] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:dith_count_1\\S\[673] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:dith_count_0\\R\[674] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:dith_count_0\\S\[675] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:reset\[678] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:status_6\[679] = zero[7]
Removing Rhs of wire \PWM_leftmotor:PWMUDB:status_5\[680] = \PWM_leftmotor:PWMUDB:final_kill_reg\[695]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:status_4\[681] = zero[7]
Removing Rhs of wire \PWM_leftmotor:PWMUDB:status_3\[682] = \PWM_leftmotor:PWMUDB:fifo_full\[702]
Removing Rhs of wire \PWM_leftmotor:PWMUDB:status_1\[684] = \PWM_leftmotor:PWMUDB:cmp2_status_reg\[694]
Removing Rhs of wire \PWM_leftmotor:PWMUDB:status_0\[685] = \PWM_leftmotor:PWMUDB:cmp1_status_reg\[693]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:cmp1_status_reg\\R\[696] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:cmp1_status_reg\\S\[697] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:cmp2_status_reg\\R\[698] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:cmp2_status_reg\\S\[699] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:final_kill_reg\\R\[700] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:final_kill_reg\\S\[701] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:cs_addr_2\[703] = \PWM_leftmotor:PWMUDB:tc_i\[657]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:cs_addr_1\[704] = \PWM_leftmotor:PWMUDB:runmode_enable\[652]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:cs_addr_0\[705] = zero[7]
Removing Rhs of wire Net_524[749] = \PWM_leftmotor:PWMUDB:pwm1_i_reg\[742]
Removing Rhs of wire Net_525[750] = \PWM_leftmotor:PWMUDB:pwm2_i_reg\[744]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:pwm_temp\[751] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_23\[792] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_22\[793] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_21\[794] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_20\[795] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_19\[796] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_18\[797] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_17\[798] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_16\[799] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_15\[800] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_14\[801] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_13\[802] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_12\[803] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_11\[804] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_10\[805] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_9\[806] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_8\[807] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_7\[808] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_6\[809] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_5\[810] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_4\[811] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_3\[812] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_2\[813] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_1\[814] = \PWM_leftmotor:PWMUDB:MODIN4_1\[815]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODIN4_1\[815] = \PWM_leftmotor:PWMUDB:dith_count_1\[668]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:a_0\[816] = \PWM_leftmotor:PWMUDB:MODIN4_0\[817]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODIN4_0\[817] = \PWM_leftmotor:PWMUDB:dith_count_0\[670]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_0\[949] = one[4]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\[950] = one[4]
Removing Lhs of wire tmpOE__Pin_3_net_0[958] = one[4]
Removing Lhs of wire tmpOE__Pin_4_net_0[964] = one[4]
Removing Lhs of wire tmpOE__Pin_Q5_net_0[970] = one[4]
Removing Lhs of wire tmpOE__Pin_5_net_0[977] = one[4]
Removing Lhs of wire tmpOE__Pin_Q6_net_0[984] = one[4]
Removing Lhs of wire \Timer_2:Net_260\[992] = zero[7]
Removing Lhs of wire \Timer_2:Net_266\[993] = one[4]
Removing Lhs of wire Net_694[994] = zero[7]
Removing Rhs of wire Net_920[999] = \Timer_2:Net_51\[995]
Removing Lhs of wire \Timer_2:Net_102\[1000] = one[4]
Removing Lhs of wire tmpOE__LED_net_0[1003] = one[4]
Removing Lhs of wire tmpOE__LED_1_net_0[1009] = one[4]
Removing Rhs of wire Net_1029[1015] = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect_reg\[1239]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_enable\[1016] = one[4]
Removing Lhs of wire \ADC_SAR_Seq_1:cmp_vv_vv_MODGEN_1\[1018] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\[1363]
Removing Rhs of wire \ADC_SAR_Seq_1:clock\[1019] = \ADC_SAR_Seq_1:Net_3874\[1263]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_5\[1021] = \ADC_SAR_Seq_1:bSAR_SEQ:count_5\[1225]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_4\[1023] = \ADC_SAR_Seq_1:bSAR_SEQ:count_4\[1226]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_3\[1025] = \ADC_SAR_Seq_1:bSAR_SEQ:count_3\[1227]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_2\[1027] = \ADC_SAR_Seq_1:bSAR_SEQ:count_2\[1228]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_1\[1029] = \ADC_SAR_Seq_1:bSAR_SEQ:count_1\[1229]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_0\[1031] = \ADC_SAR_Seq_1:bSAR_SEQ:count_0\[1230]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_0\[1163] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_2\[1164] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_1\[1165] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_3\[1166] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_1\[1167] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_3\[1168] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_0\[1169] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_2\[1170] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:Net_188\[1171] = \ADC_SAR_Seq_1:clock\[1019]
Removing Rhs of wire \ADC_SAR_Seq_1:soc_out\[1177] = \ADC_SAR_Seq_1:bSAR_SEQ:state_0\[1248]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:tmpOE__Bypass_net_0\[1196] = one[4]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:enable\[1215] = \ADC_SAR_Seq_1:bSAR_SEQ:control_0\[1216]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:load_period\[1217] = \ADC_SAR_Seq_1:bSAR_SEQ:control_1\[1218]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_7\[1231] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_6\[1232] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_5\[1233] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_4\[1234] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_3\[1235] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_2\[1236] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_1\[1237] = zero[7]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_0\[1238] = Net_1029[1015]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:soc_in\[1246] = \ADC_SAR_Seq_1:bSAR_SEQ:soc_edge_detect_reg\[1247]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_5\[1274] = \ADC_SAR_Seq_1:MODIN1_5\[1275]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_5\[1275] = \ADC_SAR_Seq_1:ch_addr_5\[1021]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_4\[1276] = \ADC_SAR_Seq_1:MODIN1_4\[1277]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_4\[1277] = \ADC_SAR_Seq_1:ch_addr_4\[1023]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_3\[1278] = \ADC_SAR_Seq_1:MODIN1_3\[1279]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_3\[1279] = \ADC_SAR_Seq_1:ch_addr_3\[1025]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_2\[1280] = \ADC_SAR_Seq_1:MODIN1_2\[1281]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_2\[1281] = \ADC_SAR_Seq_1:ch_addr_2\[1027]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_1\[1282] = \ADC_SAR_Seq_1:MODIN1_1\[1283]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_1\[1283] = \ADC_SAR_Seq_1:ch_addr_1\[1029]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_0\[1284] = \ADC_SAR_Seq_1:MODIN1_0\[1285]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_0\[1285] = \ADC_SAR_Seq_1:ch_addr_0\[1031]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_5\[1286] = \ADC_SAR_Seq_1:MODIN2_5\[1287]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_5\[1287] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[1020]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_4\[1288] = \ADC_SAR_Seq_1:MODIN2_4\[1289]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_4\[1289] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[1022]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_3\[1290] = \ADC_SAR_Seq_1:MODIN2_3\[1291]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_3\[1291] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[1024]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_2\[1292] = \ADC_SAR_Seq_1:MODIN2_2\[1293]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_2\[1293] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[1026]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_1\[1294] = \ADC_SAR_Seq_1:MODIN2_1\[1295]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_1\[1295] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[1028]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_0\[1296] = \ADC_SAR_Seq_1:MODIN2_0\[1297]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_0\[1297] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[1030]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_5\[1298] = \ADC_SAR_Seq_1:ch_addr_5\[1021]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_4\[1299] = \ADC_SAR_Seq_1:ch_addr_4\[1023]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_3\[1300] = \ADC_SAR_Seq_1:ch_addr_3\[1025]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_2\[1301] = \ADC_SAR_Seq_1:ch_addr_2\[1027]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_1\[1302] = \ADC_SAR_Seq_1:ch_addr_1\[1029]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_0\[1303] = \ADC_SAR_Seq_1:ch_addr_0\[1031]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_5\[1304] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[1020]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_4\[1305] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[1022]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_3\[1306] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[1024]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_2\[1307] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[1026]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_1\[1308] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[1028]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_0\[1309] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[1030]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_5\[1310] = \ADC_SAR_Seq_1:ch_addr_5\[1021]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_4\[1311] = \ADC_SAR_Seq_1:ch_addr_4\[1023]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_3\[1312] = \ADC_SAR_Seq_1:ch_addr_3\[1025]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_2\[1313] = \ADC_SAR_Seq_1:ch_addr_2\[1027]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_1\[1314] = \ADC_SAR_Seq_1:ch_addr_1\[1029]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_0\[1315] = \ADC_SAR_Seq_1:ch_addr_0\[1031]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_5\[1316] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[1020]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_4\[1317] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[1022]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_3\[1318] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[1024]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_2\[1319] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[1026]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_1\[1320] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[1028]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_0\[1321] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[1030]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_0\[1328] = one[4]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_0\[1329] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\[1327]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eqi_0\[1335] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\[1334]
Removing Rhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\[1363] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_1\[1336]
Removing Lhs of wire tmpOE__Pin_Q2_net_0[1375] = one[4]
Removing Lhs of wire tmpOE__Pin_Q3_net_0[1381] = one[4]
Removing Lhs of wire tmpOE__Pin_Q4_net_0[1387] = one[4]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:min_kill_reg\\D\[1392] = one[4]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:prevCapture\\D\[1393] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:trig_last\\D\[1394] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:ltch_kill_reg\\D\[1397] = one[4]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:prevCompare1\\D\[1400] = \PWM_rightmotor:PWMUDB:cmp1\[68]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:prevCompare2\\D\[1401] = \PWM_rightmotor:PWMUDB:cmp2\[71]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:cmp1_status_reg\\D\[1402] = \PWM_rightmotor:PWMUDB:cmp1_status\[69]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:cmp2_status_reg\\D\[1403] = \PWM_rightmotor:PWMUDB:cmp2_status\[72]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:pwm_i_reg\\D\[1405] = \PWM_rightmotor:PWMUDB:pwm_i\[121]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:pwm1_i_reg\\D\[1406] = \PWM_rightmotor:PWMUDB:pwm1_i\[123]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:pwm2_i_reg\\D\[1407] = \PWM_rightmotor:PWMUDB:pwm2_i\[125]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:tc_i_reg\\D\[1408] = \PWM_rightmotor:PWMUDB:status_2\[63]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:prevCapture\\D\[1410] = zero[7]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:overflow_reg_i\\D\[1411] = \QuadDec_1:Cnt16:CounterUDB:overflow\[471]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:underflow_reg_i\\D\[1412] = \QuadDec_1:Cnt16:CounterUDB:status_1\[459]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:tc_reg_i\\D\[1413] = \QuadDec_1:Cnt16:CounterUDB:reload_tc\[454]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:prevCompare\\D\[1414] = \QuadDec_1:Cnt16:CounterUDB:cmp_out_i\[478]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:cmp_out_reg_i\\D\[1415] = \QuadDec_1:Cnt16:CounterUDB:cmp_out_i\[478]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:count_stored_i\\D\[1416] = \QuadDec_1:Net_1203\[484]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:min_kill_reg\\D\[1424] = one[4]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:prevCapture\\D\[1425] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:trig_last\\D\[1426] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:ltch_kill_reg\\D\[1429] = one[4]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:prevCompare1\\D\[1432] = \PWM_leftmotor:PWMUDB:cmp1\[688]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:prevCompare2\\D\[1433] = \PWM_leftmotor:PWMUDB:cmp2\[691]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:cmp1_status_reg\\D\[1434] = \PWM_leftmotor:PWMUDB:cmp1_status\[689]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:cmp2_status_reg\\D\[1435] = \PWM_leftmotor:PWMUDB:cmp2_status\[692]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:pwm_i_reg\\D\[1437] = \PWM_leftmotor:PWMUDB:pwm_i\[741]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:pwm1_i_reg\\D\[1438] = \PWM_leftmotor:PWMUDB:pwm1_i\[743]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:pwm2_i_reg\\D\[1439] = \PWM_leftmotor:PWMUDB:pwm2_i\[745]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:tc_i_reg\\D\[1440] = \PWM_leftmotor:PWMUDB:status_2\[683]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\\D\[1441] = \ADC_SAR_Seq_1:ch_addr_5\[1021]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\\D\[1442] = \ADC_SAR_Seq_1:ch_addr_4\[1023]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\\D\[1443] = \ADC_SAR_Seq_1:ch_addr_3\[1025]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\\D\[1444] = \ADC_SAR_Seq_1:ch_addr_2\[1027]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\\D\[1445] = \ADC_SAR_Seq_1:ch_addr_1\[1029]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\\D\[1446] = \ADC_SAR_Seq_1:ch_addr_0\[1031]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect_reg\\D\[1511] = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect\[1245]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\\D\[1513] = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\[1242]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:soc_edge_detect_reg\\D\[1514] = \ADC_SAR_Seq_1:bSAR_SEQ:soc_edge_detect\[1250]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:soc_reg\\D\[1516] = Net_920[999]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:state_2\\D\[1517] = zero[7]

------------------------------------------------------
Aliased 0 equations, 330 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:compare1\' (cost = 5):
\PWM_rightmotor:PWMUDB:compare1\ <= ((not \PWM_rightmotor:PWMUDB:control_2\ and not \PWM_rightmotor:PWMUDB:control_0\ and \PWM_rightmotor:PWMUDB:cmp1_eq\)
	OR (not \PWM_rightmotor:PWMUDB:cmp1_eq\ and not \PWM_rightmotor:PWMUDB:cmp1_less\ and \PWM_rightmotor:PWMUDB:control_1\ and \PWM_rightmotor:PWMUDB:control_0\)
	OR (not \PWM_rightmotor:PWMUDB:control_2\ and not \PWM_rightmotor:PWMUDB:control_1\ and \PWM_rightmotor:PWMUDB:control_0\ and \PWM_rightmotor:PWMUDB:cmp1_less\)
	OR (not \PWM_rightmotor:PWMUDB:control_2\ and not \PWM_rightmotor:PWMUDB:control_0\ and \PWM_rightmotor:PWMUDB:control_1\ and \PWM_rightmotor:PWMUDB:cmp1_less\)
	OR (not \PWM_rightmotor:PWMUDB:cmp1_less\ and \PWM_rightmotor:PWMUDB:control_2\));

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:compare2\' (cost = 5):
\PWM_rightmotor:PWMUDB:compare2\ <= ((not \PWM_rightmotor:PWMUDB:control_5\ and not \PWM_rightmotor:PWMUDB:control_3\ and \PWM_rightmotor:PWMUDB:cmp2_eq\)
	OR (not \PWM_rightmotor:PWMUDB:cmp2_eq\ and not \PWM_rightmotor:PWMUDB:cmp2_less\ and \PWM_rightmotor:PWMUDB:control_4\ and \PWM_rightmotor:PWMUDB:control_3\)
	OR (not \PWM_rightmotor:PWMUDB:control_5\ and not \PWM_rightmotor:PWMUDB:control_4\ and \PWM_rightmotor:PWMUDB:control_3\ and \PWM_rightmotor:PWMUDB:cmp2_less\)
	OR (not \PWM_rightmotor:PWMUDB:control_5\ and not \PWM_rightmotor:PWMUDB:control_3\ and \PWM_rightmotor:PWMUDB:control_4\ and \PWM_rightmotor:PWMUDB:cmp2_less\)
	OR (not \PWM_rightmotor:PWMUDB:cmp2_less\ and \PWM_rightmotor:PWMUDB:control_5\));

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_rightmotor:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_0\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_0\ <= (not \PWM_rightmotor:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_rightmotor:PWMUDB:dith_count_1\ and \PWM_rightmotor:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\QuadDec_1:Cnt16:CounterUDB:capt_either_edge\' (cost = 0):
\QuadDec_1:Cnt16:CounterUDB:capt_either_edge\ <= (\QuadDec_1:Cnt16:CounterUDB:prevCapture\);

Note:  Expanding virtual equation for '\QuadDec_1:Cnt16:CounterUDB:reload_tc\' (cost = 2):
\QuadDec_1:Cnt16:CounterUDB:reload_tc\ <= (\QuadDec_1:Cnt16:CounterUDB:status_1\
	OR \QuadDec_1:Cnt16:CounterUDB:overflow\);

Note:  Expanding virtual equation for '\QuadDec_1:bQuadDec:A_j\' (cost = 1):
\QuadDec_1:bQuadDec:A_j\ <= ((\QuadDec_1:bQuadDec:quad_A_delayed_0\ and \QuadDec_1:bQuadDec:quad_A_delayed_1\ and \QuadDec_1:bQuadDec:quad_A_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_1:bQuadDec:A_k\' (cost = 3):
\QuadDec_1:bQuadDec:A_k\ <= ((not \QuadDec_1:bQuadDec:quad_A_delayed_0\ and not \QuadDec_1:bQuadDec:quad_A_delayed_1\ and not \QuadDec_1:bQuadDec:quad_A_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_1:bQuadDec:B_j\' (cost = 1):
\QuadDec_1:bQuadDec:B_j\ <= ((\QuadDec_1:bQuadDec:quad_B_delayed_0\ and \QuadDec_1:bQuadDec:quad_B_delayed_1\ and \QuadDec_1:bQuadDec:quad_B_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_1:bQuadDec:B_k\' (cost = 3):
\QuadDec_1:bQuadDec:B_k\ <= ((not \QuadDec_1:bQuadDec:quad_B_delayed_0\ and not \QuadDec_1:bQuadDec:quad_B_delayed_1\ and not \QuadDec_1:bQuadDec:quad_B_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_1:Net_1151\' (cost = 0):
\QuadDec_1:Net_1151\ <= (not \QuadDec_1:Net_1251\);

Note:  Expanding virtual equation for '\QuadDec_1:Net_1287\' (cost = 0):
\QuadDec_1:Net_1287\ <= (not \QuadDec_1:Net_1264\);

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:compare1\' (cost = 5):
\PWM_leftmotor:PWMUDB:compare1\ <= ((not \PWM_leftmotor:PWMUDB:control_2\ and not \PWM_leftmotor:PWMUDB:control_0\ and \PWM_leftmotor:PWMUDB:cmp1_eq\)
	OR (not \PWM_leftmotor:PWMUDB:cmp1_eq\ and not \PWM_leftmotor:PWMUDB:cmp1_less\ and \PWM_leftmotor:PWMUDB:control_1\ and \PWM_leftmotor:PWMUDB:control_0\)
	OR (not \PWM_leftmotor:PWMUDB:control_2\ and not \PWM_leftmotor:PWMUDB:control_1\ and \PWM_leftmotor:PWMUDB:control_0\ and \PWM_leftmotor:PWMUDB:cmp1_less\)
	OR (not \PWM_leftmotor:PWMUDB:control_2\ and not \PWM_leftmotor:PWMUDB:control_0\ and \PWM_leftmotor:PWMUDB:control_1\ and \PWM_leftmotor:PWMUDB:cmp1_less\)
	OR (not \PWM_leftmotor:PWMUDB:cmp1_less\ and \PWM_leftmotor:PWMUDB:control_2\));

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:compare2\' (cost = 5):
\PWM_leftmotor:PWMUDB:compare2\ <= ((not \PWM_leftmotor:PWMUDB:control_5\ and not \PWM_leftmotor:PWMUDB:control_3\ and \PWM_leftmotor:PWMUDB:cmp2_eq\)
	OR (not \PWM_leftmotor:PWMUDB:cmp2_eq\ and not \PWM_leftmotor:PWMUDB:cmp2_less\ and \PWM_leftmotor:PWMUDB:control_4\ and \PWM_leftmotor:PWMUDB:control_3\)
	OR (not \PWM_leftmotor:PWMUDB:control_5\ and not \PWM_leftmotor:PWMUDB:control_4\ and \PWM_leftmotor:PWMUDB:control_3\ and \PWM_leftmotor:PWMUDB:cmp2_less\)
	OR (not \PWM_leftmotor:PWMUDB:control_5\ and not \PWM_leftmotor:PWMUDB:control_3\ and \PWM_leftmotor:PWMUDB:control_4\ and \PWM_leftmotor:PWMUDB:cmp2_less\)
	OR (not \PWM_leftmotor:PWMUDB:cmp2_less\ and \PWM_leftmotor:PWMUDB:control_5\));

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_leftmotor:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_0\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_0\ <= (not \PWM_leftmotor:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_leftmotor:PWMUDB:dith_count_1\ and \PWM_leftmotor:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:cmp1\' (cost = 10):
\PWM_rightmotor:PWMUDB:cmp1\ <= ((not \PWM_rightmotor:PWMUDB:control_2\ and not \PWM_rightmotor:PWMUDB:control_0\ and \PWM_rightmotor:PWMUDB:cmp1_eq\)
	OR (not \PWM_rightmotor:PWMUDB:cmp1_eq\ and not \PWM_rightmotor:PWMUDB:cmp1_less\ and \PWM_rightmotor:PWMUDB:control_1\ and \PWM_rightmotor:PWMUDB:control_0\)
	OR (not \PWM_rightmotor:PWMUDB:control_2\ and not \PWM_rightmotor:PWMUDB:control_1\ and \PWM_rightmotor:PWMUDB:control_0\ and \PWM_rightmotor:PWMUDB:cmp1_less\)
	OR (not \PWM_rightmotor:PWMUDB:control_2\ and not \PWM_rightmotor:PWMUDB:control_0\ and \PWM_rightmotor:PWMUDB:control_1\ and \PWM_rightmotor:PWMUDB:cmp1_less\)
	OR (not \PWM_rightmotor:PWMUDB:cmp1_less\ and \PWM_rightmotor:PWMUDB:control_2\));

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:cmp2\' (cost = 10):
\PWM_rightmotor:PWMUDB:cmp2\ <= ((not \PWM_rightmotor:PWMUDB:control_5\ and not \PWM_rightmotor:PWMUDB:control_3\ and \PWM_rightmotor:PWMUDB:cmp2_eq\)
	OR (not \PWM_rightmotor:PWMUDB:cmp2_eq\ and not \PWM_rightmotor:PWMUDB:cmp2_less\ and \PWM_rightmotor:PWMUDB:control_4\ and \PWM_rightmotor:PWMUDB:control_3\)
	OR (not \PWM_rightmotor:PWMUDB:control_5\ and not \PWM_rightmotor:PWMUDB:control_4\ and \PWM_rightmotor:PWMUDB:control_3\ and \PWM_rightmotor:PWMUDB:cmp2_less\)
	OR (not \PWM_rightmotor:PWMUDB:control_5\ and not \PWM_rightmotor:PWMUDB:control_3\ and \PWM_rightmotor:PWMUDB:control_4\ and \PWM_rightmotor:PWMUDB:cmp2_less\)
	OR (not \PWM_rightmotor:PWMUDB:cmp2_less\ and \PWM_rightmotor:PWMUDB:control_5\));

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_1\' (cost = 2):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:s_1\ <= ((not \PWM_rightmotor:PWMUDB:dith_count_0\ and \PWM_rightmotor:PWMUDB:dith_count_1\)
	OR (not \PWM_rightmotor:PWMUDB:dith_count_1\ and \PWM_rightmotor:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\QuadDec_1:Net_1248\' (cost = 2):
\QuadDec_1:Net_1248\ <= ((not \QuadDec_1:Net_1264\ and \QuadDec_1:Net_1275\));

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:cmp1\' (cost = 10):
\PWM_leftmotor:PWMUDB:cmp1\ <= ((not \PWM_leftmotor:PWMUDB:control_2\ and not \PWM_leftmotor:PWMUDB:control_0\ and \PWM_leftmotor:PWMUDB:cmp1_eq\)
	OR (not \PWM_leftmotor:PWMUDB:cmp1_eq\ and not \PWM_leftmotor:PWMUDB:cmp1_less\ and \PWM_leftmotor:PWMUDB:control_1\ and \PWM_leftmotor:PWMUDB:control_0\)
	OR (not \PWM_leftmotor:PWMUDB:control_2\ and not \PWM_leftmotor:PWMUDB:control_1\ and \PWM_leftmotor:PWMUDB:control_0\ and \PWM_leftmotor:PWMUDB:cmp1_less\)
	OR (not \PWM_leftmotor:PWMUDB:control_2\ and not \PWM_leftmotor:PWMUDB:control_0\ and \PWM_leftmotor:PWMUDB:control_1\ and \PWM_leftmotor:PWMUDB:cmp1_less\)
	OR (not \PWM_leftmotor:PWMUDB:cmp1_less\ and \PWM_leftmotor:PWMUDB:control_2\));

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:cmp2\' (cost = 10):
\PWM_leftmotor:PWMUDB:cmp2\ <= ((not \PWM_leftmotor:PWMUDB:control_5\ and not \PWM_leftmotor:PWMUDB:control_3\ and \PWM_leftmotor:PWMUDB:cmp2_eq\)
	OR (not \PWM_leftmotor:PWMUDB:cmp2_eq\ and not \PWM_leftmotor:PWMUDB:cmp2_less\ and \PWM_leftmotor:PWMUDB:control_4\ and \PWM_leftmotor:PWMUDB:control_3\)
	OR (not \PWM_leftmotor:PWMUDB:control_5\ and not \PWM_leftmotor:PWMUDB:control_4\ and \PWM_leftmotor:PWMUDB:control_3\ and \PWM_leftmotor:PWMUDB:cmp2_less\)
	OR (not \PWM_leftmotor:PWMUDB:control_5\ and not \PWM_leftmotor:PWMUDB:control_3\ and \PWM_leftmotor:PWMUDB:control_4\ and \PWM_leftmotor:PWMUDB:cmp2_less\)
	OR (not \PWM_leftmotor:PWMUDB:cmp2_less\ and \PWM_leftmotor:PWMUDB:control_5\));

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_1\' (cost = 2):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:s_1\ <= ((not \PWM_leftmotor:PWMUDB:dith_count_0\ and \PWM_leftmotor:PWMUDB:dith_count_1\)
	OR (not \PWM_leftmotor:PWMUDB:dith_count_1\ and \PWM_leftmotor:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Virtual signal \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));


Substituting virtuals - pass 4:

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;


Substituting virtuals - pass 5:

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;


Substituting virtuals - pass 6:

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;


Substituting virtuals - pass 7:

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;


Substituting virtuals - pass 8:


----------------------------------------------------------
Circuit simplification results:

	Expanded 85 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \PWM_rightmotor:PWMUDB:final_capture\ to zero
Aliasing \PWM_rightmotor:PWMUDB:pwm_i\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \QuadDec_1:Cnt16:CounterUDB:hwCapture\ to zero
Aliasing \PWM_leftmotor:PWMUDB:final_capture\ to zero
Aliasing \PWM_leftmotor:PWMUDB:pwm_i\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_rightmotor:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \PWM_leftmotor:PWMUDB:final_kill_reg\\D\ to zero
Removing Lhs of wire \PWM_rightmotor:PWMUDB:final_capture\[87] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:pwm_i\[121] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\[300] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\[310] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\[320] = zero[7]
Removing Lhs of wire \QuadDec_1:Cnt16:CounterUDB:hwCapture\[451] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:final_capture\[707] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:pwm_i\[741] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_24\[920] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_16\[930] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_8\[940] = zero[7]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:runmode_enable\\D\[1395] = \PWM_rightmotor:PWMUDB:control_7\[8]
Removing Lhs of wire \PWM_rightmotor:PWMUDB:final_kill_reg\\D\[1404] = zero[7]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:runmode_enable\\D\[1427] = \PWM_leftmotor:PWMUDB:control_7\[628]
Removing Lhs of wire \PWM_leftmotor:PWMUDB:final_kill_reg\\D\[1436] = zero[7]

------------------------------------------------------
Aliased 0 equations, 15 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\Hardware2.cyprj -dcpsoc3 Hardware2.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 3s.385ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.2.0.641, Family: PSoC3, Started at: Sunday, 25 September 2022 16:35:55
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\Hardware2.cyprj -d CY8C5888LTI-LP097 Hardware2.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.102ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_rightmotor:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_leftmotor:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \PWM_rightmotor:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_rightmotor:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_rightmotor:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_rightmotor:PWMUDB:pwm_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \QuadDec_1:Cnt16:CounterUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_leftmotor:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_leftmotor:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_leftmotor:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_leftmotor:PWMUDB:pwm_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \ADC_SAR_Seq_1:bSAR_SEQ:state_2\ from registered to combinatorial
Assigning clock ADC_SAR_Seq_1_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'Clock_QENC'. Fanout=3, Signal=Net_491
    Digital Clock 1: Automatic-assigning  clock 'ADC_SAR_Seq_1_IntClock'. Fanout=73, Signal=\ADC_SAR_Seq_1:clock\
    Digital Clock 2: Automatic-assigning  clock 'Clock_PWM'. Fanout=2, Signal=Net_118
    Digital Clock 3: Automatic-assigning  clock 'timer_clock_2'. Fanout=1, Signal=Net_701
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \PWM_rightmotor:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_PWM was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_PWM, EnableOut: Constant 1
    UDB Clk/Enable \QuadDec_1:Cnt16:CounterUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_QENC was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_QENC, EnableOut: Constant 1
    UDB Clk/Enable \QuadDec_1:Cnt16:CounterUDB:sCTRLReg:cy_psoc3_udb_Ctl_Clk_Sync\: with output requested to be synchronous
        ClockIn: Clock_QENC was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_QENC, EnableOut: Constant 1
    UDB Clk/Enable \QuadDec_1:bQuadDec:CtrlClkEn\: with output requested to be synchronous
        ClockIn: Clock_QENC was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_QENC, EnableOut: Constant 1
    UDB Clk/Enable \PWM_leftmotor:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_PWM was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_PWM, EnableOut: Constant 1
    UDB Clk/Enable \ADC_SAR_Seq_1:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_1_IntClock, EnableOut: \ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_SAR_Seq_1:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_1_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 3 pin(s) will be assigned a location by the fitter: \ADC_SAR_Seq_1:SAR:Bypass(0)\, \USBUART_1:Dm(0)\, \USBUART_1:Dp(0)\


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \QuadDec_1:Net_1264\, Duplicate of \QuadDec_1:Cnt16:CounterUDB:prevCompare\ 
    MacroCell: Name=\QuadDec_1:Net_1264\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:cmp_out_i\
        );
        Output = \QuadDec_1:Net_1264\ (fanout=2)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing unused cells resulting from optimization
Done removing unused cells.
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = Pin_2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_2(0)__PA ,
            pin_input => Net_415 ,
            pad => Pin_2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_1(0)__PA ,
            pin_input => Net_277 ,
            pad => Pin_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = \USBUART_1:Dm(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: USB_D_MINUS
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBUART_1:Dm(0)\__PA ,
            analog_term => \USBUART_1:Net_597\ ,
            pad => \USBUART_1:Dm(0)_PAD\ );

    Pin : Name = \USBUART_1:Dp(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: HI_Z_ANALOG
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: USB_D_PLUS
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBUART_1:Dp(0)\__PA ,
            analog_term => \USBUART_1:Net_1000\ ,
            pad => \USBUART_1:Dp(0)_PAD\ );

    Pin : Name = Timer(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Timer(0)__PA ,
            pad => Timer(0)_PAD );
        Properties:
        {
        }

    Pin : Name = ENCO1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ENCO1(0)__PA ,
            fb => Net_488 ,
            pad => ENCO1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = ENCO2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ENCO2(0)__PA ,
            fb => Net_489 ,
            pad => ENCO2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_3(0)__PA ,
            pin_input => Net_524 ,
            pad => Pin_3(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_4(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_4(0)__PA ,
            pin_input => Net_525 ,
            pad => Pin_4(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_Q5(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_Q5(0)__PA ,
            analog_term => Net_1144 ,
            pad => Pin_Q5(0)_PAD ,
            pin_input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ );
        Properties:
        {
        }

    Pin : Name = Pin_5(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_5(0)__PA ,
            pad => Pin_5(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_Q6(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_Q6(0)__PA ,
            analog_term => Net_1145 ,
            pad => Pin_Q6(0)_PAD ,
            pin_input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ );
        Properties:
        {
        }

    Pin : Name = LED(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED(0)__PA ,
            pad => LED(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED_1(0)__PA ,
            pad => LED_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = \ADC_SAR_Seq_1:SAR:Bypass(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \ADC_SAR_Seq_1:SAR:Bypass(0)\__PA ,
            analog_term => \ADC_SAR_Seq_1:SAR:Net_210\ ,
            pad => \ADC_SAR_Seq_1:SAR:Bypass(0)_PAD\ );

    Pin : Name = Pin_Q2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_Q2(0)__PA ,
            analog_term => Net_933 ,
            pad => Pin_Q2(0)_PAD ,
            pin_input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = Pin_Q3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_Q3(0)__PA ,
            analog_term => Net_935 ,
            pad => Pin_Q3(0)_PAD ,
            pin_input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = Pin_Q4(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_Q4(0)__PA ,
            analog_term => Net_936 ,
            pad => Pin_Q4(0)_PAD ,
            pin_input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\QuadDec_1:Net_1251_split\, Mode=(Combinatorial)
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1251_split\ (fanout=1)

    MacroCell: Name=\PWM_rightmotor:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:tc_i\
        );
        Output = \PWM_rightmotor:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:reload\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:Cnt16:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt16:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:reload\ (fanout=2)

    MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:status_0\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:cmp_out_i\ * 
              !\QuadDec_1:Cnt16:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:status_0\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:overflow\ * 
              !\QuadDec_1:Cnt16:CounterUDB:overflow_reg_i\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:status_2\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:status_3\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt16:CounterUDB:underflow_reg_i\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:status_3\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:count_enable\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:control_7\ * 
              !\QuadDec_1:Cnt16:CounterUDB:count_stored_i\ * 
              \QuadDec_1:Net_1203\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:count_enable\ (fanout=2)

    MacroCell: Name=\QuadDec_1:Net_530\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1275\ * \QuadDec_1:Net_1251\ * 
              !\QuadDec_1:Cnt16:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Net_530\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Net_611\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1275\ * !\QuadDec_1:Net_1251\ * 
              !\QuadDec_1:Cnt16:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Net_611\ (fanout=1)

    MacroCell: Name=\PWM_leftmotor:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:tc_i\
        );
        Output = \PWM_leftmotor:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:ch_addr_5\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:ch_addr_4\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:ch_addr_3\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:ch_addr_2\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_930 * !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_488
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_0\ (fanout=2)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_A_delayed_0\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_1\ (fanout=2)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_A_delayed_1\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_2\ (fanout=1)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_489
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_0\ (fanout=2)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_B_delayed_0\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_1\ (fanout=2)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_B_delayed_1\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_2\ (fanout=1)

    MacroCell: Name=\PWM_rightmotor:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_rightmotor:PWMUDB:control_7\
        );
        Output = \PWM_rightmotor:PWMUDB:runmode_enable\ (fanout=4)

    MacroCell: Name=\PWM_rightmotor:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              \PWM_rightmotor:PWMUDB:control_1\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:cmp1_eq\
            + \PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
            + \PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
        );
        Output = \PWM_rightmotor:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_rightmotor:PWMUDB:prevCompare2\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              \PWM_rightmotor:PWMUDB:control_4\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:cmp2_eq\
            + \PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
            + \PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
        );
        Output = \PWM_rightmotor:PWMUDB:prevCompare2\ (fanout=1)

    MacroCell: Name=\PWM_rightmotor:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare1\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              \PWM_rightmotor:PWMUDB:control_1\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare1\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare1\ * 
              \PWM_rightmotor:PWMUDB:cmp1_eq\
            + \PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare1\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
            + \PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare1\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
        );
        Output = \PWM_rightmotor:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=\PWM_rightmotor:PWMUDB:status_1\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare2\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              \PWM_rightmotor:PWMUDB:control_4\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare2\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare2\ * 
              \PWM_rightmotor:PWMUDB:cmp2_eq\
            + \PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare2\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
            + \PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare2\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
        );
        Output = \PWM_rightmotor:PWMUDB:status_1\ (fanout=1)

    MacroCell: Name=Net_277, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              \PWM_rightmotor:PWMUDB:control_1\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp1_eq\
            + \PWM_rightmotor:PWMUDB:control_2\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
            + \PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
        );
        Output = Net_277 (fanout=1)

    MacroCell: Name=Net_415, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              \PWM_rightmotor:PWMUDB:control_4\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp2_eq\
            + \PWM_rightmotor:PWMUDB:control_5\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
            + \PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
        );
        Output = Net_415 (fanout=1)

    MacroCell: Name=\QuadDec_1:Net_1251\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              !\QuadDec_1:bQuadDec:quad_A_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:quad_A_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\
            + \QuadDec_1:Net_1251_split\
        );
        Output = \QuadDec_1:Net_1251\ (fanout=6)

    MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:overflow_reg_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:overflow_reg_i\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:underflow_reg_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:status_1\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:underflow_reg_i\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Net_1275\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_1:Cnt16:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt16:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Net_1275\ (fanout=2)

    MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:prevCompare\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:cmp_out_i\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:prevCompare\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:ch_addr_5\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:ch_addr_4\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:ch_addr_3\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:ch_addr_2\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:ch_addr_1\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:ch_addr_1\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_1:ch_addr_0\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:count_stored_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1203\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:count_stored_i\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Net_1203\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1203_split\
        );
        Output = \QuadDec_1:Net_1203\ (fanout=3)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_filt\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_1:bQuadDec:quad_A_delayed_0\ * 
              !\QuadDec_1:bQuadDec:quad_A_delayed_1\ * 
              !\QuadDec_1:bQuadDec:quad_A_delayed_2\ * 
              \QuadDec_1:bQuadDec:quad_A_filt\
            + \QuadDec_1:bQuadDec:quad_A_delayed_0\ * 
              \QuadDec_1:bQuadDec:quad_A_delayed_1\ * 
              \QuadDec_1:bQuadDec:quad_A_delayed_2\ * 
              !\QuadDec_1:bQuadDec:quad_A_filt\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_filt\ (fanout=8)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_filt\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_1:bQuadDec:quad_B_delayed_0\ * 
              !\QuadDec_1:bQuadDec:quad_B_delayed_1\ * 
              !\QuadDec_1:bQuadDec:quad_B_delayed_2\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\
            + \QuadDec_1:bQuadDec:quad_B_delayed_0\ * 
              \QuadDec_1:bQuadDec:quad_B_delayed_1\ * 
              \QuadDec_1:bQuadDec:quad_B_delayed_2\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_filt\ (fanout=8)

    MacroCell: Name=\QuadDec_1:Net_1260\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        !(
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:error\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1260\ (fanout=10)

    MacroCell: Name=\QuadDec_1:bQuadDec:error\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:error\ (fanout=9)

    MacroCell: Name=\QuadDec_1:bQuadDec:state_1\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * \QuadDec_1:bQuadDec:state_1\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:state_1\ (fanout=8)

    MacroCell: Name=\QuadDec_1:bQuadDec:state_0\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:state_0\ (fanout=8)

    MacroCell: Name=\PWM_leftmotor:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_leftmotor:PWMUDB:control_7\
        );
        Output = \PWM_leftmotor:PWMUDB:runmode_enable\ (fanout=4)

    MacroCell: Name=\PWM_leftmotor:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              \PWM_leftmotor:PWMUDB:control_1\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:cmp1_eq\
            + \PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
            + \PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
        );
        Output = \PWM_leftmotor:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_leftmotor:PWMUDB:prevCompare2\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              \PWM_leftmotor:PWMUDB:control_4\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:cmp2_eq\
            + \PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
            + \PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
        );
        Output = \PWM_leftmotor:PWMUDB:prevCompare2\ (fanout=1)

    MacroCell: Name=\PWM_leftmotor:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare1\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              \PWM_leftmotor:PWMUDB:control_1\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare1\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare1\ * 
              \PWM_leftmotor:PWMUDB:cmp1_eq\
            + \PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare1\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
            + \PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare1\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
        );
        Output = \PWM_leftmotor:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=\PWM_leftmotor:PWMUDB:status_1\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare2\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              \PWM_leftmotor:PWMUDB:control_4\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare2\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare2\ * 
              \PWM_leftmotor:PWMUDB:cmp2_eq\
            + \PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare2\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
            + \PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare2\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
        );
        Output = \PWM_leftmotor:PWMUDB:status_1\ (fanout=1)

    MacroCell: Name=Net_524, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              \PWM_leftmotor:PWMUDB:control_1\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp1_eq\
            + \PWM_leftmotor:PWMUDB:control_2\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
            + \PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
        );
        Output = Net_524 (fanout=1)

    MacroCell: Name=Net_525, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              \PWM_leftmotor:PWMUDB:control_4\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp2_eq\
            + \PWM_leftmotor:PWMUDB:control_5\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
            + \PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
        );
        Output = Net_525 (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_1029, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\
        );
        Output = Net_1029 (fanout=4)

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_1029 * \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\
            + \ADC_SAR_Seq_1:Net_3935\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:soc_in\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              Net_920 * !\ADC_SAR_Seq_1:bSAR_SEQ:soc_reg\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:soc_in\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:soc_out\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\ADC_SAR_Seq_1:soc_out\ * \ADC_SAR_Seq_1:Net_3830\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\ * 
              \ADC_SAR_Seq_1:bSAR_SEQ:state_1\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:cnt_tc\
            + !\ADC_SAR_Seq_1:soc_out\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\ * 
              \ADC_SAR_Seq_1:bSAR_SEQ:soc_in\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:state_1\
        );
        Output = \ADC_SAR_Seq_1:soc_out\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:soc_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              Net_920
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:soc_reg\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Net_1203_split\, Mode=(Combinatorial)
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:Net_1203\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1203_split\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:state_1\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\ADC_SAR_Seq_1:soc_out\ * !\ADC_SAR_Seq_1:Net_3830\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\ * 
              \ADC_SAR_Seq_1:bSAR_SEQ:state_1\
            + \ADC_SAR_Seq_1:soc_out\ * !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:state_1\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:state_1\ (fanout=2)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\PWM_rightmotor:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => Net_118 ,
            cs_addr_2 => \PWM_rightmotor:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_rightmotor:PWMUDB:runmode_enable\ ,
            ce0_comb => \PWM_rightmotor:PWMUDB:cmp1_eq\ ,
            cl0_comb => \PWM_rightmotor:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_rightmotor:PWMUDB:tc_i\ ,
            ce1_comb => \PWM_rightmotor:PWMUDB:cmp2_eq\ ,
            cl1_comb => \PWM_rightmotor:PWMUDB:cmp2_less\ ,
            f1_blk_stat_comb => \PWM_rightmotor:PWMUDB:status_3\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:u0\
        PORT MAP (
            clock => Net_491 ,
            cs_addr_2 => \QuadDec_1:Net_1251\ ,
            cs_addr_1 => \QuadDec_1:Cnt16:CounterUDB:count_enable\ ,
            cs_addr_0 => \QuadDec_1:Cnt16:CounterUDB:reload\ ,
            chain_out => \QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101000000000000000000001000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Next in chain : \QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:u1\

    datapathcell: Name =\QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:u1\
        PORT MAP (
            clock => Net_491 ,
            cs_addr_2 => \QuadDec_1:Net_1251\ ,
            cs_addr_1 => \QuadDec_1:Cnt16:CounterUDB:count_enable\ ,
            cs_addr_0 => \QuadDec_1:Cnt16:CounterUDB:reload\ ,
            z0_comb => \QuadDec_1:Cnt16:CounterUDB:status_1\ ,
            f0_comb => \QuadDec_1:Cnt16:CounterUDB:overflow\ ,
            ce1_comb => \QuadDec_1:Cnt16:CounterUDB:cmp_out_i\ ,
            f0_bus_stat_comb => \QuadDec_1:Cnt16:CounterUDB:status_6\ ,
            f0_blk_stat_comb => \QuadDec_1:Cnt16:CounterUDB:status_5\ ,
            chain_in => \QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101011110000000000000001000001110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:u0\

    datapathcell: Name =\PWM_leftmotor:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => Net_118 ,
            cs_addr_2 => \PWM_leftmotor:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_leftmotor:PWMUDB:runmode_enable\ ,
            ce0_comb => \PWM_leftmotor:PWMUDB:cmp1_eq\ ,
            cl0_comb => \PWM_leftmotor:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_leftmotor:PWMUDB:tc_i\ ,
            ce1_comb => \PWM_leftmotor:PWMUDB:cmp2_eq\ ,
            cl1_comb => \PWM_leftmotor:PWMUDB:cmp2_less\ ,
            f1_blk_stat_comb => \PWM_leftmotor:PWMUDB:status_3\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            status_0 => Net_1029 ,
            clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\PWM_rightmotor:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => Net_118 ,
            status_3 => \PWM_rightmotor:PWMUDB:status_3\ ,
            status_2 => \PWM_rightmotor:PWMUDB:status_2\ ,
            status_1 => \PWM_rightmotor:PWMUDB:status_1\ ,
            status_0 => \PWM_rightmotor:PWMUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\QuadDec_1:Cnt16:CounterUDB:sSTSReg:stsreg\
        PORT MAP (
            reset => \QuadDec_1:Net_1260\ ,
            clock => Net_491 ,
            status_6 => \QuadDec_1:Cnt16:CounterUDB:status_6\ ,
            status_5 => \QuadDec_1:Cnt16:CounterUDB:status_5\ ,
            status_3 => \QuadDec_1:Cnt16:CounterUDB:status_3\ ,
            status_2 => \QuadDec_1:Cnt16:CounterUDB:status_2\ ,
            status_1 => \QuadDec_1:Cnt16:CounterUDB:status_1\ ,
            status_0 => \QuadDec_1:Cnt16:CounterUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\QuadDec_1:bQuadDec:Stsreg\
        PORT MAP (
            clock => Net_491 ,
            status_3 => \QuadDec_1:bQuadDec:error\ ,
            status_2 => \QuadDec_1:Net_1260\ ,
            status_1 => \QuadDec_1:Net_611\ ,
            status_0 => \QuadDec_1:Net_530\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "0001111"
            cy_md_select = "0001111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\PWM_leftmotor:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => Net_118 ,
            status_3 => \PWM_leftmotor:PWMUDB:status_3\ ,
            status_2 => \PWM_leftmotor:PWMUDB:status_2\ ,
            status_1 => \PWM_leftmotor:PWMUDB:status_1\ ,
            status_0 => \PWM_leftmotor:PWMUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_SAR_Seq_1:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_SAR_Seq_1:nrq\ ,
            out => \ADC_SAR_Seq_1:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\PWM_rightmotor:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_118 ,
            control_7 => \PWM_rightmotor:PWMUDB:control_7\ ,
            control_6 => \PWM_rightmotor:PWMUDB:control_6\ ,
            control_5 => \PWM_rightmotor:PWMUDB:control_5\ ,
            control_4 => \PWM_rightmotor:PWMUDB:control_4\ ,
            control_3 => \PWM_rightmotor:PWMUDB:control_3\ ,
            control_2 => \PWM_rightmotor:PWMUDB:control_2\ ,
            control_1 => \PWM_rightmotor:PWMUDB:control_1\ ,
            control_0 => \PWM_rightmotor:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\QuadDec_1:Cnt16:CounterUDB:sCTRLReg:ctrlreg\
        PORT MAP (
            clock => Net_491 ,
            control_7 => \QuadDec_1:Cnt16:CounterUDB:control_7\ ,
            control_6 => \QuadDec_1:Cnt16:CounterUDB:control_6\ ,
            control_5 => \QuadDec_1:Cnt16:CounterUDB:control_5\ ,
            control_4 => \QuadDec_1:Cnt16:CounterUDB:control_4\ ,
            control_3 => \QuadDec_1:Cnt16:CounterUDB:control_3\ ,
            control_2 => \QuadDec_1:Cnt16:CounterUDB:control_2\ ,
            control_1 => \QuadDec_1:Cnt16:CounterUDB:control_1\ ,
            control_0 => \QuadDec_1:Cnt16:CounterUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\PWM_leftmotor:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_118 ,
            control_7 => \PWM_leftmotor:PWMUDB:control_7\ ,
            control_6 => \PWM_leftmotor:PWMUDB:control_6\ ,
            control_5 => \PWM_leftmotor:PWMUDB:control_5\ ,
            control_4 => \PWM_leftmotor:PWMUDB:control_4\ ,
            control_3 => \PWM_leftmotor:PWMUDB:control_3\ ,
            control_2 => \PWM_leftmotor:PWMUDB:control_2\ ,
            control_1 => \PWM_leftmotor:PWMUDB:control_1\ ,
            control_0 => \PWM_leftmotor:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            control_7 => \ADC_SAR_Seq_1:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_SAR_Seq_1:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_SAR_Seq_1:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_SAR_Seq_1:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_SAR_Seq_1:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_SAR_Seq_1:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            load => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
            enable => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_SAR_Seq_1:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_SAR_Seq_1:ch_addr_5\ ,
            count_4 => \ADC_SAR_Seq_1:ch_addr_4\ ,
            count_3 => \ADC_SAR_Seq_1:ch_addr_3\ ,
            count_2 => \ADC_SAR_Seq_1:ch_addr_2\ ,
            count_1 => \ADC_SAR_Seq_1:ch_addr_1\ ,
            count_0 => \ADC_SAR_Seq_1:ch_addr_0\ ,
            tc => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000101"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_SAR_Seq_1:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq_1:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\USBUART_1:dp_int\
        PORT MAP (
            interrupt => \USBUART_1:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:ep_3\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_3\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:ep_2\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:ep_1\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:ep_0\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:bus_reset\
        PORT MAP (
            interrupt => \USBUART_1:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:arb_int\
        PORT MAP (
            interrupt => \USBUART_1:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:sof_int\
        PORT MAP (
            interrupt => Net_472 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =isr_EOC_3
        PORT MAP (
            interrupt => Net_1029 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ADC_SAR_Seq_1:IRQ\
        PORT MAP (
            interrupt => Net_1029 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    4 :    4 :    8 : 50.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :   10 :   22 :   32 : 31.25 %
IO                            :   18 :   30 :   48 : 37.50 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    1 :    0 :    1 : 100.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    1 :    3 :    4 : 25.00 %
UDB                           :      :      :      :        
  Macrocells                  :  125 :   67 :  192 : 65.10 %
  Unique P-terms              :  211 :  173 :  384 : 54.95 %
  Total P-terms               :  217 :      :      :        
  Datapath Cells              :    4 :   20 :   24 : 16.67 %
  Status Cells                :    7 :   17 :   24 : 29.17 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    4 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    1 :      :      :        
  Control Cells               :    5 :   19 :   24 : 20.83 %
    Control Registers         :    4 :      :      :        
    Count7 Cells              :    1 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 32s.598ms
Tech Mapping phase: Elapsed time ==> 32s.757ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_932" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_941" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_943" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_945" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_946" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_948" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_950" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_951" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_953" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_955" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_956" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_958" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_960" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_961" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_963" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_965" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_966" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_968" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_970" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_971" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_973" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_975" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_976" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_978" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_980" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_981" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_983" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_985" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_986" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_988" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_990" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_991" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_993" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_995" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_996" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_998" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1000" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1001" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1003" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1005" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1006" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1008" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1010" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1011" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1012" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1013" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1014" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1015" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1016" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1017" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1018" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1019" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1020" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1021" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1022" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1023" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1024" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1025" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1026" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_6@[IOP=(1)][IoId=(6)] : ENCO1(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : ENCO2(0) (fixed)
IO_2@[IOP=(1)][IoId=(2)] : LED(0) (fixed)
IO_3@[IOP=(1)][IoId=(3)] : LED_1(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : Pin_1(0) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : Pin_2(0) (fixed)
IO_4@[IOP=(15)][IoId=(4)] : Pin_3(0) (fixed)
IO_5@[IOP=(15)][IoId=(5)] : Pin_4(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : Pin_5(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : Pin_Q2(0) (fixed)
IO_3@[IOP=(2)][IoId=(3)] : Pin_Q3(0) (fixed)
IO_4@[IOP=(2)][IoId=(4)] : Pin_Q4(0) (fixed)
IO_5@[IOP=(2)][IoId=(5)] : Pin_Q5(0) (fixed)
IO_6@[IOP=(2)][IoId=(6)] : Pin_Q6(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : Timer(0) (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \USBUART_1:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBUART_1:Dp(0)\ (fixed)
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_Seq_1:SAR:ADC_SAR\ (SAR-ExtVref)
IO_4@[IOP=(0)][IoId=(4)] : \ADC_SAR_Seq_1:SAR:Bypass(0)\ (SAR-ExtVref)
Vref[3]@[FFB(Vref,3)] : \ADC_SAR_Seq_1:SAR:vRef_1024\
USB[0]@[FFB(USB,0)] : \USBUART_1:USB\
Analog Placement Results:
IO_6@[IOP=(1)][IoId=(6)] : ENCO1(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : ENCO2(0) (fixed)
IO_2@[IOP=(1)][IoId=(2)] : LED(0) (fixed)
IO_3@[IOP=(1)][IoId=(3)] : LED_1(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : Pin_1(0) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : Pin_2(0) (fixed)
IO_4@[IOP=(15)][IoId=(4)] : Pin_3(0) (fixed)
IO_5@[IOP=(15)][IoId=(5)] : Pin_4(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : Pin_5(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : Pin_Q2(0) (fixed)
IO_3@[IOP=(2)][IoId=(3)] : Pin_Q3(0) (fixed)
IO_4@[IOP=(2)][IoId=(4)] : Pin_Q4(0) (fixed)
IO_5@[IOP=(2)][IoId=(5)] : Pin_Q5(0) (fixed)
IO_6@[IOP=(2)][IoId=(6)] : Pin_Q6(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : Timer(0) (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \USBUART_1:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBUART_1:Dp(0)\ (fixed)
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_Seq_1:SAR:ADC_SAR\ (SAR-ExtVref)
IO_4@[IOP=(0)][IoId=(4)] : \ADC_SAR_Seq_1:SAR:Bypass(0)\ (SAR-ExtVref)
Vref[3]@[FFB(Vref,3)] : \ADC_SAR_Seq_1:SAR:vRef_1024\
USB[0]@[FFB(USB,0)] : \USBUART_1:USB\

Analog Placement phase: Elapsed time ==> 0s.240ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.037ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC_SAR_Seq_1:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_932 {
  }
  Net: Net_933 {
    p2_2
  }
  Net: Net_935 {
    p2_3
  }
  Net: Net_936 {
    p2_4
  }
  Net: Net_1144 {
    p2_5
  }
  Net: Net_1145 {
    p2_6
  }
  Net: Net_941 {
  }
  Net: Net_943 {
  }
  Net: Net_945 {
  }
  Net: Net_946 {
  }
  Net: Net_948 {
  }
  Net: Net_950 {
  }
  Net: Net_951 {
  }
  Net: Net_953 {
  }
  Net: Net_955 {
  }
  Net: Net_956 {
  }
  Net: Net_958 {
  }
  Net: Net_960 {
  }
  Net: Net_961 {
  }
  Net: Net_963 {
  }
  Net: Net_965 {
  }
  Net: Net_966 {
  }
  Net: Net_968 {
  }
  Net: Net_970 {
  }
  Net: Net_971 {
  }
  Net: Net_973 {
  }
  Net: Net_975 {
  }
  Net: Net_976 {
  }
  Net: Net_978 {
  }
  Net: Net_980 {
  }
  Net: Net_981 {
  }
  Net: Net_983 {
  }
  Net: Net_985 {
  }
  Net: Net_986 {
  }
  Net: Net_988 {
  }
  Net: Net_990 {
  }
  Net: Net_991 {
  }
  Net: Net_993 {
  }
  Net: Net_995 {
  }
  Net: Net_996 {
  }
  Net: Net_998 {
  }
  Net: Net_1000 {
  }
  Net: Net_1001 {
  }
  Net: Net_1003 {
  }
  Net: Net_1005 {
  }
  Net: Net_1006 {
  }
  Net: Net_1008 {
  }
  Net: Net_1010 {
  }
  Net: Net_1011 {
  }
  Net: Net_1012 {
  }
  Net: Net_1013 {
  }
  Net: Net_1014 {
  }
  Net: Net_1015 {
  }
  Net: Net_1016 {
  }
  Net: Net_1017 {
  }
  Net: Net_1018 {
  }
  Net: Net_1019 {
  }
  Net: Net_1020 {
  }
  Net: Net_1021 {
  }
  Net: Net_1022 {
  }
  Net: Net_1023 {
  }
  Net: Net_1024 {
  }
  Net: Net_1025 {
  }
  Net: Net_1026 {
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_210\ {
    p0_4
    p0_4_exvref
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_233\ {
    common_vref_1024
    sar_0_vref_1024
    sar_0_vref_x_sar_0_vref_1024
    sar_0_vref
  }
  Net: AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\ {
    sar_0_vplus
    agl0_x_sar_0_vplus
    agl0
    agl0_x_p2_4
    agl1_x_sar_0_vplus
    agl1
    agl1_x_p2_5
    agl2_x_sar_0_vplus
    agl2
    agl2_x_p2_6
    agl3_x_sar_0_vplus
    agl3
    agl3_x_p2_3
    agl2_x_p2_2
    p2_4
    p2_5
    p2_6
    p2_3
    p2_2
  }
}
Map of item to net {
  sar_0_vrefhi                                     -> \ADC_SAR_Seq_1:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ADC_SAR_Seq_1:SAR:Net_126\
  sar_0_vminus                                     -> \ADC_SAR_Seq_1:SAR:Net_126\
  p0_4                                             -> \ADC_SAR_Seq_1:SAR:Net_210\
  p0_4_exvref                                      -> \ADC_SAR_Seq_1:SAR:Net_210\
  common_vref_1024                                 -> \ADC_SAR_Seq_1:SAR:Net_233\
  sar_0_vref_1024                                  -> \ADC_SAR_Seq_1:SAR:Net_233\
  sar_0_vref_x_sar_0_vref_1024                     -> \ADC_SAR_Seq_1:SAR:Net_233\
  sar_0_vref                                       -> \ADC_SAR_Seq_1:SAR:Net_233\
  sar_0_vplus                                      -> \ADC_SAR_Seq_1:Net_2803\
  p2_2                                             -> Net_933
  p2_3                                             -> Net_935
  p2_4                                             -> Net_936
  p2_5                                             -> Net_1144
  p2_6                                             -> Net_1145
  agl0_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl0                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl0_x_p2_4                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl1_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl1                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl1_x_p2_5                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl2_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl2                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl2_x_p2_6                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl3_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl3                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl3_x_p2_3                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl2_x_p2_2                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
}
Mux Info {
  Mux: \ADC_SAR_Seq_1:AMuxHw_2\ {
     Mouth: \ADC_SAR_Seq_1:Net_2803\
     Guts:  AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_932
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 1 {
      Net:   Net_933
      Outer: agl2_x_p2_2
      Inner: __open__
      Path {
        p2_2
        agl2_x_p2_2
        agl2
        agl2_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_935
      Outer: agl3_x_p2_3
      Inner: agl3_x_sar_0_vplus
      Path {
        p2_3
        agl3_x_p2_3
        agl3
        agl3_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_936
      Outer: agl0_x_p2_4
      Inner: agl0_x_sar_0_vplus
      Path {
        p2_4
        agl0_x_p2_4
        agl0
        agl0_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 4 {
      Net:   Net_1144
      Outer: agl1_x_p2_5
      Inner: agl1_x_sar_0_vplus
      Path {
        p2_5
        agl1_x_p2_5
        agl1
        agl1_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 5 {
      Net:   Net_1145
      Outer: agl2_x_p2_6
      Inner: __open__
      Path {
        p2_6
        agl2_x_p2_6
        agl2
        agl2_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 6 {
      Net:   Net_941
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_943
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_945
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_946
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_948
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_950
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_951
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_953
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_955
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_956
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_958
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_960
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_961
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_963
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_965
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_966
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_968
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_970
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_971
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_973
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_975
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_976
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_978
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_980
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_981
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_983
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_985
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_986
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_988
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_990
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_991
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_993
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_995
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_996
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_998
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_1000
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_1001
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_1003
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_1005
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_1006
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_1008
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_1010
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_1011
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_1012
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_1013
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_1014
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_1015
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_1016
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_1017
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_1018
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_1019
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_1020
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_1021
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_1022
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_1023
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_1024
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_1025
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_1026
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = False
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.799ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 6.5 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   48 :    0 :   48 : 100.00%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.31
                   Pterms :            4.52
               Macrocells :            2.60
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.116ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.265ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         24 :      10.17 :       5.21
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=2, #inputs=9, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_leftmotor:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:tc_i\
        );
        Output = \PWM_leftmotor:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,0)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\PWM_leftmotor:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => Net_118 ,
        cs_addr_2 => \PWM_leftmotor:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_leftmotor:PWMUDB:runmode_enable\ ,
        ce0_comb => \PWM_leftmotor:PWMUDB:cmp1_eq\ ,
        cl0_comb => \PWM_leftmotor:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_leftmotor:PWMUDB:tc_i\ ,
        ce1_comb => \PWM_leftmotor:PWMUDB:cmp2_eq\ ,
        cl1_comb => \PWM_leftmotor:PWMUDB:cmp2_less\ ,
        f1_blk_stat_comb => \PWM_leftmotor:PWMUDB:status_3\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=2, #inputs=7, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=Net_524, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              \PWM_leftmotor:PWMUDB:control_1\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp1_eq\
            + \PWM_leftmotor:PWMUDB:control_2\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
            + \PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
        );
        Output = Net_524 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\PWM_leftmotor:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_leftmotor:PWMUDB:control_7\
        );
        Output = \PWM_leftmotor:PWMUDB:runmode_enable\ (fanout=4)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=1, #inputs=6, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\PWM_leftmotor:PWMUDB:status_1\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare2\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              \PWM_leftmotor:PWMUDB:control_4\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare2\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare2\ * 
              \PWM_leftmotor:PWMUDB:cmp2_eq\
            + \PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare2\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
            + \PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare2\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
        );
        Output = \PWM_leftmotor:PWMUDB:status_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

statusicell: Name =\PWM_leftmotor:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => Net_118 ,
        status_3 => \PWM_leftmotor:PWMUDB:status_3\ ,
        status_2 => \PWM_leftmotor:PWMUDB:status_2\ ,
        status_1 => \PWM_leftmotor:PWMUDB:status_1\ ,
        status_0 => \PWM_leftmotor:PWMUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\PWM_leftmotor:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_118 ,
        control_7 => \PWM_leftmotor:PWMUDB:control_7\ ,
        control_6 => \PWM_leftmotor:PWMUDB:control_6\ ,
        control_5 => \PWM_leftmotor:PWMUDB:control_5\ ,
        control_4 => \PWM_leftmotor:PWMUDB:control_4\ ,
        control_3 => \PWM_leftmotor:PWMUDB:control_3\ ,
        control_2 => \PWM_leftmotor:PWMUDB:control_2\ ,
        control_1 => \PWM_leftmotor:PWMUDB:control_1\ ,
        control_0 => \PWM_leftmotor:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=2, #inputs=8, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\PWM_leftmotor:PWMUDB:prevCompare2\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              \PWM_leftmotor:PWMUDB:control_4\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:cmp2_eq\
            + \PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
            + \PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
        );
        Output = \PWM_leftmotor:PWMUDB:prevCompare2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:count_enable\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:control_7\ * 
              !\QuadDec_1:Cnt16:CounterUDB:count_stored_i\ * 
              \QuadDec_1:Net_1203\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:count_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,2)][LB=1] #macrocells=1, #inputs=6, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_525, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              \PWM_leftmotor:PWMUDB:control_4\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp2_less\
            + !\PWM_leftmotor:PWMUDB:control_5\ * 
              !\PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              \PWM_leftmotor:PWMUDB:cmp2_eq\
            + \PWM_leftmotor:PWMUDB:control_5\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
            + \PWM_leftmotor:PWMUDB:control_4\ * 
              \PWM_leftmotor:PWMUDB:control_3\ * 
              \PWM_leftmotor:PWMUDB:runmode_enable\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp2_less\
        );
        Output = Net_525 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\QuadDec_1:Cnt16:CounterUDB:sCTRLReg:ctrlreg\
    PORT MAP (
        clock => Net_491 ,
        control_7 => \QuadDec_1:Cnt16:CounterUDB:control_7\ ,
        control_6 => \QuadDec_1:Cnt16:CounterUDB:control_6\ ,
        control_5 => \QuadDec_1:Cnt16:CounterUDB:control_5\ ,
        control_4 => \QuadDec_1:Cnt16:CounterUDB:control_4\ ,
        control_3 => \QuadDec_1:Cnt16:CounterUDB:control_3\ ,
        control_2 => \QuadDec_1:Cnt16:CounterUDB:control_2\ ,
        control_1 => \QuadDec_1:Cnt16:CounterUDB:control_1\ ,
        control_0 => \QuadDec_1:Cnt16:CounterUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=2, #inputs=7, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:Net_1251_split\, Mode=(Combinatorial) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1251_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:u0\
    PORT MAP (
        clock => Net_491 ,
        cs_addr_2 => \QuadDec_1:Net_1251\ ,
        cs_addr_1 => \QuadDec_1:Cnt16:CounterUDB:count_enable\ ,
        cs_addr_0 => \QuadDec_1:Cnt16:CounterUDB:reload\ ,
        chain_out => \QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101000000000000000000001000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Next in chain : \QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:u1\

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,4)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_1029, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\
        );
        Output = Net_1029 (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=1, #inputs=7, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:Net_1203_split\, Mode=(Combinatorial) @ [UDB=(0,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:Net_1203\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1203_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,5)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,0)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=1, #inputs=6, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\PWM_leftmotor:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare1\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              \PWM_leftmotor:PWMUDB:control_1\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare1\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare1\ * 
              \PWM_leftmotor:PWMUDB:cmp1_eq\
            + \PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare1\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
            + \PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              !\PWM_leftmotor:PWMUDB:prevCompare1\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
        );
        Output = \PWM_leftmotor:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,1)][LB=1] #macrocells=1, #inputs=5, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\PWM_leftmotor:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              \PWM_leftmotor:PWMUDB:control_1\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:cmp1_less\
            + !\PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:control_0\ * 
              \PWM_leftmotor:PWMUDB:cmp1_eq\
            + \PWM_leftmotor:PWMUDB:control_2\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
            + \PWM_leftmotor:PWMUDB:control_1\ * 
              \PWM_leftmotor:PWMUDB:control_0\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_leftmotor:PWMUDB:cmp1_less\
        );
        Output = \PWM_leftmotor:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=3, #inputs=8, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_0\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_489
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_0\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:bQuadDec:error\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:error\ (fanout=9)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:count_stored_i\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1203\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:count_stored_i\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=3, #inputs=8, #pterms=6
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_1\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_B_delayed_0\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:bQuadDec:state_0\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_0\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_488
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_0\ (fanout=2)
        Properties               : 
        {
        }
}

statuscell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        status_0 => Net_1029 ,
        clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=4, #inputs=10, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_2\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_A_delayed_1\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_1\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_A_delayed_0\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_filt\, Mode=(T-Register) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_1:bQuadDec:quad_B_delayed_0\ * 
              !\QuadDec_1:bQuadDec:quad_B_delayed_1\ * 
              !\QuadDec_1:bQuadDec:quad_B_delayed_2\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\
            + \QuadDec_1:bQuadDec:quad_B_delayed_0\ * 
              \QuadDec_1:bQuadDec:quad_B_delayed_1\ * 
              \QuadDec_1:bQuadDec:quad_B_delayed_2\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_filt\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:Net_1260\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        !(
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:error\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1260\ (fanout=10)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,3)][LB=1] #macrocells=2, #inputs=4, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_2\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_B_delayed_1\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:reload\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:Cnt16:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt16:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:reload\ (fanout=2)
        Properties               : 
        {
        }
}

datapathcell: Name =\QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:u1\
    PORT MAP (
        clock => Net_491 ,
        cs_addr_2 => \QuadDec_1:Net_1251\ ,
        cs_addr_1 => \QuadDec_1:Cnt16:CounterUDB:count_enable\ ,
        cs_addr_0 => \QuadDec_1:Cnt16:CounterUDB:reload\ ,
        z0_comb => \QuadDec_1:Cnt16:CounterUDB:status_1\ ,
        f0_comb => \QuadDec_1:Cnt16:CounterUDB:overflow\ ,
        ce1_comb => \QuadDec_1:Cnt16:CounterUDB:cmp_out_i\ ,
        f0_bus_stat_comb => \QuadDec_1:Cnt16:CounterUDB:status_6\ ,
        f0_blk_stat_comb => \QuadDec_1:Cnt16:CounterUDB:status_5\ ,
        chain_in => \QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101011110000000000000001000001110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \QuadDec_1:Cnt16:CounterUDB:sC16:counterdp:u0\

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=2, #inputs=5, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:status_0\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:cmp_out_i\ * 
              !\QuadDec_1:Cnt16:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_1029 * \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\
            + \ADC_SAR_Seq_1:Net_3935\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,4)][LB=1] #macrocells=3, #inputs=12, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:Net_1251\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 8
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              !\QuadDec_1:bQuadDec:quad_A_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:quad_A_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\
            + \QuadDec_1:Net_1251_split\
        );
        Output = \QuadDec_1:Net_1251\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:prevCompare\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:cmp_out_i\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:prevCompare\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_filt\, Mode=(T-Register) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_1:bQuadDec:quad_A_delayed_0\ * 
              !\QuadDec_1:bQuadDec:quad_A_delayed_1\ * 
              !\QuadDec_1:bQuadDec:quad_A_delayed_2\ * 
              \QuadDec_1:bQuadDec:quad_A_filt\
            + \QuadDec_1:bQuadDec:quad_A_delayed_0\ * 
              \QuadDec_1:bQuadDec:quad_A_delayed_1\ * 
              \QuadDec_1:bQuadDec:quad_A_delayed_2\ * 
              !\QuadDec_1:bQuadDec:quad_A_filt\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_filt\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

statusicell: Name =\QuadDec_1:Cnt16:CounterUDB:sSTSReg:stsreg\
    PORT MAP (
        reset => \QuadDec_1:Net_1260\ ,
        clock => Net_491 ,
        status_6 => \QuadDec_1:Cnt16:CounterUDB:status_6\ ,
        status_5 => \QuadDec_1:Cnt16:CounterUDB:status_5\ ,
        status_3 => \QuadDec_1:Cnt16:CounterUDB:status_3\ ,
        status_2 => \QuadDec_1:Cnt16:CounterUDB:status_2\ ,
        status_1 => \QuadDec_1:Cnt16:CounterUDB:status_1\ ,
        status_0 => \QuadDec_1:Cnt16:CounterUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=2, #inputs=9, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:bQuadDec:state_1\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * \QuadDec_1:bQuadDec:state_1\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:Net_611\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1275\ * !\QuadDec_1:Net_1251\ * 
              !\QuadDec_1:Cnt16:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Net_611\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,5)][LB=1] #macrocells=2, #inputs=9, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:Net_1203\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1203_split\
        );
        Output = \QuadDec_1:Net_1203\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:Net_530\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=1][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1275\ * \QuadDec_1:Net_1251\ * 
              !\QuadDec_1:Cnt16:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Net_530\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\QuadDec_1:bQuadDec:Stsreg\
    PORT MAP (
        clock => Net_491 ,
        status_3 => \QuadDec_1:bQuadDec:error\ ,
        status_2 => \QuadDec_1:Net_1260\ ,
        status_1 => \QuadDec_1:Net_611\ ,
        status_0 => \QuadDec_1:Net_530\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "0001111"
        cy_md_select = "0001111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_930 * !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=8, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:soc_out\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\ADC_SAR_Seq_1:soc_out\ * \ADC_SAR_Seq_1:Net_3830\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\ * 
              \ADC_SAR_Seq_1:bSAR_SEQ:state_1\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:cnt_tc\
            + !\ADC_SAR_Seq_1:soc_out\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\ * 
              \ADC_SAR_Seq_1:bSAR_SEQ:soc_in\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:state_1\
        );
        Output = \ADC_SAR_Seq_1:soc_out\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:state_1\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\ADC_SAR_Seq_1:soc_out\ * !\ADC_SAR_Seq_1:Net_3830\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\ * 
              \ADC_SAR_Seq_1:bSAR_SEQ:state_1\
            + \ADC_SAR_Seq_1:soc_out\ * !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:state_1\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:state_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:soc_in\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              Net_920 * !\ADC_SAR_Seq_1:bSAR_SEQ:soc_reg\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:soc_in\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:soc_reg\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              Net_920
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:soc_reg\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        control_7 => \ADC_SAR_Seq_1:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_SAR_Seq_1:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_SAR_Seq_1:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_SAR_Seq_1:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_SAR_Seq_1:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_SAR_Seq_1:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        load => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
        enable => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_SAR_Seq_1:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_SAR_Seq_1:ch_addr_5\ ,
        count_4 => \ADC_SAR_Seq_1:ch_addr_4\ ,
        count_3 => \ADC_SAR_Seq_1:ch_addr_3\ ,
        count_2 => \ADC_SAR_Seq_1:ch_addr_2\ ,
        count_1 => \ADC_SAR_Seq_1:ch_addr_1\ ,
        count_0 => \ADC_SAR_Seq_1:ch_addr_0\ ,
        tc => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000101"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:ch_addr_5\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:ch_addr_4\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:ch_addr_3\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:ch_addr_2\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:ch_addr_5\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:ch_addr_4\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:ch_addr_3\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:ch_addr_2\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:ch_addr_1\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:ch_addr_1\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_1:ch_addr_0\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,3)][LB=1] #macrocells=2, #inputs=7, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=Net_415, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              \PWM_rightmotor:PWMUDB:control_4\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp2_eq\
            + \PWM_rightmotor:PWMUDB:control_5\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
            + \PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
        );
        Output = Net_415 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\PWM_rightmotor:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_rightmotor:PWMUDB:control_7\
        );
        Output = \PWM_rightmotor:PWMUDB:runmode_enable\ (fanout=4)
        Properties               : 
        {
        }
}

controlcell: Name =\PWM_rightmotor:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_118 ,
        control_7 => \PWM_rightmotor:PWMUDB:control_7\ ,
        control_6 => \PWM_rightmotor:PWMUDB:control_6\ ,
        control_5 => \PWM_rightmotor:PWMUDB:control_5\ ,
        control_4 => \PWM_rightmotor:PWMUDB:control_4\ ,
        control_3 => \PWM_rightmotor:PWMUDB:control_3\ ,
        control_2 => \PWM_rightmotor:PWMUDB:control_2\ ,
        control_1 => \PWM_rightmotor:PWMUDB:control_1\ ,
        control_0 => \PWM_rightmotor:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=3, #inputs=10, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\PWM_rightmotor:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare1\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              \PWM_rightmotor:PWMUDB:control_1\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare1\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare1\ * 
              \PWM_rightmotor:PWMUDB:cmp1_eq\
            + \PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare1\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
            + \PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare1\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
        );
        Output = \PWM_rightmotor:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:status_3\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt16:CounterUDB:underflow_reg_i\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:status_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:status_2\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:overflow\ * 
              !\QuadDec_1:Cnt16:CounterUDB:overflow_reg_i\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,4)][LB=1] #macrocells=3, #inputs=2, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:underflow_reg_i\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:status_1\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:underflow_reg_i\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:Net_1275\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_1:Cnt16:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt16:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Net_1275\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:Cnt16:CounterUDB:overflow_reg_i\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_491) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt16:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Cnt16:CounterUDB:overflow_reg_i\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\PWM_rightmotor:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => Net_118 ,
        status_3 => \PWM_rightmotor:PWMUDB:status_3\ ,
        status_2 => \PWM_rightmotor:PWMUDB:status_2\ ,
        status_1 => \PWM_rightmotor:PWMUDB:status_1\ ,
        status_0 => \PWM_rightmotor:PWMUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=1, #inputs=6, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_277, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              \PWM_rightmotor:PWMUDB:control_1\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:cmp1_eq\
            + \PWM_rightmotor:PWMUDB:control_2\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
            + \PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
        );
        Output = Net_277 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,5)][LB=1] #macrocells=2, #inputs=7, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\PWM_rightmotor:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              \PWM_rightmotor:PWMUDB:control_1\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:cmp1_less\
            + !\PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:control_0\ * 
              \PWM_rightmotor:PWMUDB:cmp1_eq\
            + \PWM_rightmotor:PWMUDB:control_2\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
            + \PWM_rightmotor:PWMUDB:control_1\ * 
              \PWM_rightmotor:PWMUDB:control_0\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp1_less\
        );
        Output = \PWM_rightmotor:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\PWM_rightmotor:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_rightmotor:PWMUDB:runmode_enable\ * 
              \PWM_rightmotor:PWMUDB:tc_i\
        );
        Output = \PWM_rightmotor:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\PWM_rightmotor:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => Net_118 ,
        cs_addr_2 => \PWM_rightmotor:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_rightmotor:PWMUDB:runmode_enable\ ,
        ce0_comb => \PWM_rightmotor:PWMUDB:cmp1_eq\ ,
        cl0_comb => \PWM_rightmotor:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_rightmotor:PWMUDB:tc_i\ ,
        ce1_comb => \PWM_rightmotor:PWMUDB:cmp2_eq\ ,
        cl1_comb => \PWM_rightmotor:PWMUDB:cmp2_less\ ,
        f1_blk_stat_comb => \PWM_rightmotor:PWMUDB:status_3\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=1, #inputs=5, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\PWM_rightmotor:PWMUDB:prevCompare2\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              \PWM_rightmotor:PWMUDB:control_4\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              \PWM_rightmotor:PWMUDB:cmp2_eq\
            + \PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
            + \PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
        );
        Output = \PWM_rightmotor:PWMUDB:prevCompare2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,3)][LB=1] #macrocells=1, #inputs=6, #pterms=5
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\PWM_rightmotor:PWMUDB:status_1\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_118) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare2\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              \PWM_rightmotor:PWMUDB:control_4\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare2\ * 
              \PWM_rightmotor:PWMUDB:cmp2_less\
            + !\PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:control_3\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare2\ * 
              \PWM_rightmotor:PWMUDB:cmp2_eq\
            + \PWM_rightmotor:PWMUDB:control_5\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare2\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
            + \PWM_rightmotor:PWMUDB:control_4\ * 
              \PWM_rightmotor:PWMUDB:control_3\ * 
              !\PWM_rightmotor:PWMUDB:prevCompare2\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_eq\ * 
              !\PWM_rightmotor:PWMUDB:cmp2_less\
        );
        Output = \PWM_rightmotor:PWMUDB:status_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }
}

synccell: Name =\ADC_SAR_Seq_1:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_SAR_Seq_1:nrq\ ,
        out => \ADC_SAR_Seq_1:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,5)][LB=1] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }
}

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\ADC_SAR_Seq_1:IRQ\
        PORT MAP (
            interrupt => Net_1029 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\USBUART_1:ep_1\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =\USBUART_1:ep_2\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(3)] 
    interrupt: Name =\USBUART_1:ep_3\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_3\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(4)] 
    interrupt: Name =isr_EOC_3
        PORT MAP (
            interrupt => Net_1029 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(12)] 
    interrupt: Name =\USBUART_1:dp_int\
        PORT MAP (
            interrupt => \USBUART_1:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(21)] 
    interrupt: Name =\USBUART_1:sof_int\
        PORT MAP (
            interrupt => Net_472 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(22)] 
    interrupt: Name =\USBUART_1:arb_int\
        PORT MAP (
            interrupt => \USBUART_1:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(23)] 
    interrupt: Name =\USBUART_1:bus_reset\
        PORT MAP (
            interrupt => \USBUART_1:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(24)] 
    interrupt: Name =\USBUART_1:ep_0\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_SAR_Seq_1:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_SAR_Seq_1:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=4]: 
Pin : Name = \ADC_SAR_Seq_1:SAR:Bypass(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \ADC_SAR_Seq_1:SAR:Bypass(0)\__PA ,
        analog_term => \ADC_SAR_Seq_1:SAR:Net_210\ ,
        pad => \ADC_SAR_Seq_1:SAR:Bypass(0)_PAD\ );
    Properties:
    {
    }

Port 1 contains the following IO cells:
[IoId=2]: 
Pin : Name = LED(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED(0)__PA ,
        pad => LED(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = LED_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED_1(0)__PA ,
        pad => LED_1(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = ENCO1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => ENCO1(0)__PA ,
        fb => Net_488 ,
        pad => ENCO1(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = ENCO2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => ENCO2(0)__PA ,
        fb => Net_489 ,
        pad => ENCO2(0)_PAD );
    Properties:
    {
    }

Port 2 contains the following IO cells:
[IoId=0]: 
Pin : Name = Timer(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Timer(0)__PA ,
        pad => Timer(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = Pin_5(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_5(0)__PA ,
        pad => Pin_5(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = Pin_Q2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_Q2(0)__PA ,
        analog_term => Net_933 ,
        pad => Pin_Q2(0)_PAD ,
        pin_input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Pin_Q3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_Q3(0)__PA ,
        analog_term => Net_935 ,
        pad => Pin_Q3(0)_PAD ,
        pin_input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = Pin_Q4(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_Q4(0)__PA ,
        analog_term => Net_936 ,
        pad => Pin_Q4(0)_PAD ,
        pin_input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Pin_Q5(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_Q5(0)__PA ,
        analog_term => Net_1144 ,
        pad => Pin_Q5(0)_PAD ,
        pin_input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = Pin_Q6(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_Q6(0)__PA ,
        analog_term => Net_1145 ,
        pad => Pin_Q6(0)_PAD ,
        pin_input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ );
    Properties:
    {
    }

Port 3 contains the following IO cells:
Port 12 contains the following IO cells:
[IoId=4]: 
Pin : Name = Pin_2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_2(0)__PA ,
        pin_input => Net_415 ,
        pad => Pin_2(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Pin_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_1(0)__PA ,
        pin_input => Net_277 ,
        pad => Pin_1(0)_PAD );
    Properties:
    {
    }

Port 15 generates interrupt for logical port:
    logicalport: Name =\USBUART_1:Dp\
        PORT MAP (
            in_clock_en => one ,
            in_reset => zero ,
            out_clock_en => one ,
            out_reset => zero ,
            interrupt => \USBUART_1:Net_1010\ ,
            in_clock => ClockBlock_BUS_CLK );
        Properties:
        {
            drive_mode = "000"
            ibuf_enabled = "0"
            id = "beca5e2d-f70f-4900-a4db-7eca1ed3126e/618a72fc-5ddd-4df5-958f-a3d55102db42"
            init_dr_st = "1"
            input_buffer_sel = "00"
            input_clk_en = 0
            input_sync = "1"
            input_sync_mode = "0"
            intr_mode = "10"
            invert_in_clock = 0
            invert_in_clock_en = 0
            invert_in_reset = 0
            invert_out_clock = 0
            invert_out_clock_en = 0
            invert_out_reset = 0
            io_voltage = ""
            layout_mode = "CONTIGUOUS"
            oe_conn = "0"
            oe_reset = 0
            oe_sync = "0"
            output_clk_en = 0
            output_clock_mode = "0"
            output_conn = "0"
            output_mode = "0"
            output_reset = 0
            output_sync = "0"
            ovt_hyst_trim = "0"
            ovt_needed = "0"
            ovt_slew_control = "00"
            pa_in_clock = -1
            pa_in_clock_en = -1
            pa_in_reset = -1
            pa_out_clock = -1
            pa_out_clock_en = -1
            pa_out_reset = -1
            pin_aliases = ""
            pin_mode = "I"
            por_state = 4
            port_alias_group = ""
            port_alias_required = 0
            sio_group_cnt = 0
            sio_hifreq = "00000000"
            sio_hyst = "1"
            sio_ibuf = "00000000"
            sio_info = "00"
            sio_obuf = "00000000"
            sio_refsel = "00000000"
            sio_vohsel = "00000000"
            sio_vtrip = "00000000"
            slew_rate = "0"
            spanning = 0
            sw_only = 0
            use_annotation = "0"
            vtrip = "00"
            width = 1
        }
    and contains the following IO cells:
[IoId=4]: 
Pin : Name = Pin_3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_3(0)__PA ,
        pin_input => Net_524 ,
        pad => Pin_3(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Pin_4(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_4(0)__PA ,
        pin_input => Net_525 ,
        pad => Pin_4(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = \USBUART_1:Dp(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: True
        Interrupt mode: FALLING
        Drive mode: HI_Z_ANALOG
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: USB_D_PLUS
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBUART_1:Dp(0)\__PA ,
        analog_term => \USBUART_1:Net_1000\ ,
        pad => \USBUART_1:Dp(0)_PAD\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = \USBUART_1:Dm(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: USB_D_MINUS
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBUART_1:Dm(0)\__PA ,
        analog_term => \USBUART_1:Net_597\ ,
        pad => \USBUART_1:Dm(0)_PAD\ );
    Properties:
    {
    }

ARM group 0: empty
CAN group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => Net_491 ,
            dclk_0 => Net_491_local ,
            dclk_glb_1 => \ADC_SAR_Seq_1:clock\ ,
            dclk_1 => \ADC_SAR_Seq_1:clock_local\ ,
            dclk_glb_2 => Net_118 ,
            dclk_2 => Net_118_local ,
            dclk_glb_3 => Net_701 ,
            dclk_3 => Net_701_local );
        Properties:
        {
        }
Comparator group 0: empty
DFB group 0: empty
DSM group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SC group 0: empty
SPC group 0: empty
Timer group 0: 
    Timer Block @ F(Timer,0): 
    timercell: Name =\Timer_2:TimerHW\
        PORT MAP (
            clock => Net_701 ,
            enable => __ONE__ ,
            tc => Net_920 ,
            cmp => \Timer_2:Net_261\ ,
            irq => \Timer_2:Net_57\ );
        Properties:
        {
            cy_registers = ""
        }
USB group 0: 
    USB Block @ F(USB,0): 
    usbcell: Name =\USBUART_1:USB\
        PORT MAP (
            dp => \USBUART_1:Net_1000\ ,
            dm => \USBUART_1:Net_597\ ,
            sof_int => Net_472 ,
            arb_int => \USBUART_1:Net_1889\ ,
            usb_int => \USBUART_1:Net_1876\ ,
            ept_int_8 => \USBUART_1:ep_int_8\ ,
            ept_int_7 => \USBUART_1:ep_int_7\ ,
            ept_int_6 => \USBUART_1:ep_int_6\ ,
            ept_int_5 => \USBUART_1:ep_int_5\ ,
            ept_int_4 => \USBUART_1:ep_int_4\ ,
            ept_int_3 => \USBUART_1:ep_int_3\ ,
            ept_int_2 => \USBUART_1:ep_int_2\ ,
            ept_int_1 => \USBUART_1:ep_int_1\ ,
            ept_int_0 => \USBUART_1:ep_int_0\ ,
            ord_int => \USBUART_1:Net_95\ ,
            dma_req_7 => \USBUART_1:dma_request_7\ ,
            dma_req_6 => \USBUART_1:dma_request_6\ ,
            dma_req_5 => \USBUART_1:dma_request_5\ ,
            dma_req_4 => \USBUART_1:dma_request_4\ ,
            dma_req_3 => \USBUART_1:dma_request_3\ ,
            dma_req_2 => \USBUART_1:dma_request_2\ ,
            dma_req_1 => \USBUART_1:dma_request_1\ ,
            dma_req_0 => \USBUART_1:dma_request_0\ ,
            dma_termin => \USBUART_1:dma_terminate\ );
        Properties:
        {
            cy_registers = ""
        }
VIDAC group 0: empty
OpAmp group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,3): 
    vrefcell: Name =\ADC_SAR_Seq_1:SAR:vRef_1024\
        PORT MAP (
            vout => \ADC_SAR_Seq_1:SAR:Net_233\ );
        Properties:
        {
            autoenable = 1
            guid = "89B398AD-36A8-4627-9212-707F2986319E"
            ignoresleep = 0
            name = "1.024V"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\ADC_SAR_Seq_1:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_SAR_Seq_1:Net_2803\ ,
            vminus => \ADC_SAR_Seq_1:SAR:Net_126\ ,
            ext_pin => \ADC_SAR_Seq_1:SAR:Net_210\ ,
            vrefhi_out => \ADC_SAR_Seq_1:SAR:Net_126\ ,
            vref => \ADC_SAR_Seq_1:SAR:Net_233\ ,
            clk_udb => \ADC_SAR_Seq_1:clock_local\ ,
            sof_udb => \ADC_SAR_Seq_1:soc_out\ ,
            irq => \ADC_SAR_Seq_1:SAR:Net_252\ ,
            next => Net_930 ,
            data_out_udb_11 => \ADC_SAR_Seq_1:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_Seq_1:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_Seq_1:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_Seq_1:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_Seq_1:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_Seq_1:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_Seq_1:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_Seq_1:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_Seq_1:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_Seq_1:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_Seq_1:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_Seq_1:SAR:Net_207_0\ ,
            eof_udb => \ADC_SAR_Seq_1:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_SAR_Seq_1:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_1026 ,
            muxin_62 => Net_1025 ,
            muxin_61 => Net_1024 ,
            muxin_60 => Net_1023 ,
            muxin_59 => Net_1022 ,
            muxin_58 => Net_1021 ,
            muxin_57 => Net_1020 ,
            muxin_56 => Net_1019 ,
            muxin_55 => Net_1018 ,
            muxin_54 => Net_1017 ,
            muxin_53 => Net_1016 ,
            muxin_52 => Net_1015 ,
            muxin_51 => Net_1014 ,
            muxin_50 => Net_1013 ,
            muxin_49 => Net_1012 ,
            muxin_48 => Net_1011 ,
            muxin_47 => Net_1010 ,
            muxin_46 => Net_1008 ,
            muxin_45 => Net_1006 ,
            muxin_44 => Net_1005 ,
            muxin_43 => Net_1003 ,
            muxin_42 => Net_1001 ,
            muxin_41 => Net_1000 ,
            muxin_40 => Net_998 ,
            muxin_39 => Net_996 ,
            muxin_38 => Net_995 ,
            muxin_37 => Net_993 ,
            muxin_36 => Net_991 ,
            muxin_35 => Net_990 ,
            muxin_34 => Net_988 ,
            muxin_33 => Net_986 ,
            muxin_32 => Net_985 ,
            muxin_31 => Net_983 ,
            muxin_30 => Net_981 ,
            muxin_29 => Net_980 ,
            muxin_28 => Net_978 ,
            muxin_27 => Net_976 ,
            muxin_26 => Net_975 ,
            muxin_25 => Net_973 ,
            muxin_24 => Net_971 ,
            muxin_23 => Net_970 ,
            muxin_22 => Net_968 ,
            muxin_21 => Net_966 ,
            muxin_20 => Net_965 ,
            muxin_19 => Net_963 ,
            muxin_18 => Net_961 ,
            muxin_17 => Net_960 ,
            muxin_16 => Net_958 ,
            muxin_15 => Net_956 ,
            muxin_14 => Net_955 ,
            muxin_13 => Net_953 ,
            muxin_12 => Net_951 ,
            muxin_11 => Net_950 ,
            muxin_10 => Net_948 ,
            muxin_9 => Net_946 ,
            muxin_8 => Net_945 ,
            muxin_7 => Net_943 ,
            muxin_6 => Net_941 ,
            muxin_5 => Net_1145 ,
            muxin_4 => Net_1144 ,
            muxin_3 => Net_936 ,
            muxin_2 => Net_935 ,
            muxin_1 => Net_933 ,
            muxin_0 => Net_932 ,
            hw_ctrl_en_63 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_0 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ ,
            vout => \ADC_SAR_Seq_1:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                               | 
Port | Pin | Fixed |      Type |       Drive Mode |                          Name | Connections
-----+-----+-------+-----------+------------------+-------------------------------+-----------------------------------------------------------------
   0 |   4 |       |      NONE |      HI_Z_ANALOG | \ADC_SAR_Seq_1:SAR:Bypass(0)\ | Analog(\ADC_SAR_Seq_1:SAR:Net_210\)
-----+-----+-------+-----------+------------------+-------------------------------+-----------------------------------------------------------------
   1 |   2 |     * |      NONE |         CMOS_OUT |                        LED(0) | 
     |   3 |     * |      NONE |         CMOS_OUT |                      LED_1(0) | 
     |   6 |     * |      NONE |     HI_Z_DIGITAL |                      ENCO1(0) | FB(Net_488)
     |   7 |     * |      NONE |     HI_Z_DIGITAL |                      ENCO2(0) | FB(Net_489)
-----+-----+-------+-----------+------------------+-------------------------------+-----------------------------------------------------------------
   2 |   0 |     * |      NONE |         CMOS_OUT |                      Timer(0) | 
     |   1 |     * |      NONE |      HI_Z_ANALOG |                      Pin_5(0) | 
     |   2 |     * |      NONE |      HI_Z_ANALOG |                     Pin_Q2(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_933)
     |   3 |     * |      NONE |      HI_Z_ANALOG |                     Pin_Q3(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_935)
     |   4 |     * |      NONE |      HI_Z_ANALOG |                     Pin_Q4(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_936)
     |   5 |     * |      NONE |      HI_Z_ANALOG |                     Pin_Q5(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\), Analog(Net_1144)
     |   6 |     * |      NONE |      HI_Z_ANALOG |                     Pin_Q6(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\), Analog(Net_1145)
-----+-----+-------+-----------+------------------+-------------------------------+-----------------------------------------------------------------
  12 |   4 |     * |      NONE |         CMOS_OUT |                      Pin_2(0) | In(Net_415)
     |   5 |     * |      NONE |         CMOS_OUT |                      Pin_1(0) | In(Net_277)
-----+-----+-------+-----------+------------------+-------------------------------+-----------------------------------------------------------------
  15 |   4 |     * |      NONE |         CMOS_OUT |                      Pin_3(0) | In(Net_524)
     |   5 |     * |      NONE |         CMOS_OUT |                      Pin_4(0) | In(Net_525)
     |   6 |       |   FALLING |      HI_Z_ANALOG |             \USBUART_1:Dp(0)\ | Analog(\USBUART_1:Net_1000\)
     |   7 |       |      NONE |      HI_Z_ANALOG |             \USBUART_1:Dm(0)\ | Analog(\USBUART_1:Net_597\)
----------------------------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 35s.943ms
Digital Placement phase: Elapsed time ==> 43s.680ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "Hardware2_r.vh2" --pcf-path "Hardware2.pco" --des-name "Hardware2" --dsf-path "Hardware2.dsf" --sdc-path "Hardware2.sdc" --lib-path "Hardware2_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 8s.175ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.879ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.084ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Warning: sta.M0021: Hardware2_timing.html: Warning-1350: Asynchronous path(s) exist from "ClockBlock/dclk_glb_ff_3" to "ADC_SAR_Seq_1_IntClock". See the timing report for details. (File=\\files.auckland.ac.nz\myhome\Documents\GitHub\project-project_group_15\WorkspacemotorBT1\Hardware2.cydsn\Hardware2_timing.html)
Timing report is in Hardware2_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.860ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.005ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.249ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 87s.978ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 87s.988ms
API generation phase: Elapsed time ==> 5s.568ms
Dependency generation phase: Elapsed time ==> 0s.101ms
Cleanup phase: Elapsed time ==> 0s.125ms
